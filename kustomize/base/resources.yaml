apiVersion: v1
kind: ServiceAccount
metadata:
  name: frames
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frames
spec:
  template:
    spec:
      initContainers:
        - name: template-quorum-key
          image: ghcr.io/tkhq/frames
          env:
            - name: TURNKEY_SIGNER_ENVIRONMENT
              value: "prod"
          command:
            - sh
            - -c
            - |
                set -x
                echo "Starting init container..."
                echo "Current directory: $(pwd)"
                echo "Listing export directory:"
                ls -la export/ || echo "export/ not found"

                mkdir -p templated/export templated/import;
                envsubst '${TURNKEY_SIGNER_ENVIRONMENT}' < import/index.template.html > templated/import/index.html;
                envsubst '${TURNKEY_SIGNER_ENVIRONMENT}' < import/standalone.template.html > templated/import/standalone.html;

                # For export, copy the webpack-built files and template the environment variable in JS files
                echo "Copying export files..."
                cp -r export/* templated/export/;
                echo "Files copied. Listing templated/export:"
                ls -la templated/export/

                # Template the environment variable in the built JavaScript files
                echo "Templating JS files..."
                for file in templated/export/*.js; do
                  if [ -f "$file" ]; then
                    echo "Processing file: $file"
                    if grep -q "__TURNKEY_SIGNER_ENVIRONMENT__" "$file"; then
                      echo "Found __TURNKEY_SIGNER_ENVIRONMENT__ in: $file"
                    else
                      echo "WARNING: __TURNKEY_SIGNER_ENVIRONMENT__ NOT found in: $file"
                    fi
                    if sed "s/__TURNKEY_SIGNER_ENVIRONMENT__/${TURNKEY_SIGNER_ENVIRONMENT}/g" "$file" > "$file.tmp"; then
                      echo "sed succeeded for: $file"
                      mv "$file.tmp" "$file"
                      echo "Completed: $file"
                    else
                      echo "ERROR: sed failed for: $file"
                      exit 1
                    fi
                  fi
                done
                echo "Init container completed successfully"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: templated
              mountPath: /usr/share/nginx/templated
      containers:
        - name: frames
          image: ghcr.io/tkhq/frames
          ports:
            # iframes
            - name: auth
              containerPort: 8080
            - name: export
              containerPort: 8081
            - name: recovery
              containerPort: 8082
            - name: import
              containerPort: 8083
            
            # oauth
            - name: oauth-origin
              containerPort: 8084
            - name: oauth-redirect
              containerPort: 8085
          livenessProbe:
            httpGet:
              path: /health
              port: auth
          resources:
            requests:
              memory: 5Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: templated
              mountPath: /usr/share/nginx/templated
              readOnly: true
      serviceAccountName: frames
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels: {}
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels: {}
          matchLabelKeys:
            - pod-template-hash
      volumes:
        - name: templated
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frames
spec:
  ports:
    # iframe
    - name: http-auth
      port: 8080
      targetPort: auth
    - name: http-export
      port: 8081
      targetPort: export
    - name: http-recovery
      port: 8082
      targetPort: recovery
    - name: http-import
      port: 8083
      targetPort: import
    
    # oauth
    - name: http-oauth-og
      port: 8084
      targetPort: oauth-origin
    - name: http-oauth-rd
      port: 8085
      targetPort: oauth-redirect
