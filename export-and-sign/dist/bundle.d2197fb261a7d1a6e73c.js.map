{"version":3,"file":"bundle.d2197fb261a7d1a6e73c.js","mappings":"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","sources":["webpack://export-and-sign/./node_modules/jayson/lib/client/browser/index.js","webpack://export-and-sign/./node_modules/ieee754/index.js","webpack://export-and-sign/./node_modules/text-encoding-utf-8/lib/encoding.lib.js","webpack://export-and-sign/./node_modules/buffer/index.js","webpack://export-and-sign/./node_modules/jayson/lib/generateRequest.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/errors.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/_dnt.shims.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/algorithm.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/identifiers.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/consts.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/interfaces/kemInterface.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/utils/misc.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/kems/dhkem.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/utils/bignum.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/kdfs/hkdf.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js","webpack://export-and-sign/./node_modules/@hpke/common/esm/src/curve/montgomery.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/aeads/aesGcm.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/utils/emitNotSupported.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/exporterContext.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/encryptionContext.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/recipientContext.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/senderContext.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/cipherSuiteNative.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/kems/dhkemNative.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/native.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js","webpack://export-and-sign/./node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js","webpack://export-and-sign/./node_modules/uuid/dist/esm-browser/rng.js","webpack://export-and-sign/./node_modules/uuid/dist/esm-browser/regex.js","webpack://export-and-sign/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://export-and-sign/./node_modules/uuid/dist/esm-browser/validate.js","webpack://export-and-sign/./node_modules/uuid/dist/esm-browser/v4.js","webpack://export-and-sign/./node_modules/base-x/src/index.js","webpack://export-and-sign/./node_modules/tweetnacl-util/nacl-util.js","webpack://export-and-sign/./node_modules/bn.js/lib/bn.js","webpack://export-and-sign/./node_modules/base64-js/index.js","webpack://export-and-sign/./node_modules/@noble/ed25519/index.js","webpack://export-and-sign/./node_modules/@solana/buffer-layout/lib/Layout.js","webpack://export-and-sign/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack://export-and-sign/./node_modules/borsh/lib/index.js","webpack://export-and-sign/./node_modules/bs58/index.js","webpack://export-and-sign/./node_modules/safe-buffer/index.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/crypto.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/utils.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/_md.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/_u64.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/sha2.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/utils.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/abstract/edwards.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/ed25519.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/sha256.js","webpack://export-and-sign/./node_modules/@solana/errors/dist/index.browser.mjs","webpack://export-and-sign/./node_modules/@solana/codecs-core/dist/index.browser.mjs","webpack://export-and-sign/./node_modules/@solana/codecs-numbers/dist/index.browser.mjs","webpack://export-and-sign/./node_modules/superstruct/dist/index.mjs","webpack://export-and-sign/./node_modules/@noble/hashes/esm/sha3.js","webpack://export-and-sign/./node_modules/@noble/hashes/esm/hmac.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/secp256k1.js","webpack://export-and-sign/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://export-and-sign/./node_modules/@solana/web3.js/lib/index.browser.esm.js","webpack://export-and-sign/./node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * The base error class of hpke-js.\n * @group Errors\n */\nexport class HpkeError extends Error {\n    constructor(e) {\n        let message;\n        if (e instanceof Error) {\n            message = e.message;\n        }\n        else if (typeof e === \"string\") {\n            message = e;\n        }\n        else {\n            message = \"\";\n        }\n        super(message);\n        this.name = this.constructor.name;\n    }\n}\n/**\n * Invalid parameter.\n * @group Errors\n */\nexport class InvalidParamError extends HpkeError {\n}\n/**\n * KEM input or output validation failure.\n * @group Errors\n */\nexport class ValidationError extends HpkeError {\n}\n/**\n * Public or private key serialization failure.\n * @group Errors\n */\nexport class SerializeError extends HpkeError {\n}\n/**\n * Public or private key deserialization failure.\n * @group Errors\n */\nexport class DeserializeError extends HpkeError {\n}\n/**\n * encap() failure.\n * @group Errors\n */\nexport class EncapError extends HpkeError {\n}\n/**\n * decap() failure.\n * @group Errors\n */\nexport class DecapError extends HpkeError {\n}\n/**\n * Secret export failure.\n * @group Errors\n */\nexport class ExportError extends HpkeError {\n}\n/**\n * seal() failure.\n * @group Errors\n */\nexport class SealError extends HpkeError {\n}\n/**\n * open() failure.\n * @group Errors\n */\nexport class OpenError extends HpkeError {\n}\n/**\n * Sequence number overflow on the encryption context.\n * @group Errors\n */\nexport class MessageLimitReachedError extends HpkeError {\n}\n/**\n * Key pair derivation failure.\n * @group Errors\n */\nexport class DeriveKeyPairError extends HpkeError {\n}\n/**\n * Not supported failure.\n * @group Errors\n */\nexport class NotSupportedError extends HpkeError {\n}\n","const dntGlobals = {};\nexport const dntGlobalThis = createMergeProxy(globalThis, dntGlobals);\nfunction createMergeProxy(baseObj, extObj) {\n    return new Proxy(baseObj, {\n        get(_target, prop, _receiver) {\n            if (prop in extObj) {\n                return extObj[prop];\n            }\n            else {\n                return baseObj[prop];\n            }\n        },\n        set(_target, prop, value) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            baseObj[prop] = value;\n            return true;\n        },\n        deleteProperty(_target, prop) {\n            let success = false;\n            if (prop in extObj) {\n                delete extObj[prop];\n                success = true;\n            }\n            if (prop in baseObj) {\n                delete baseObj[prop];\n                success = true;\n            }\n            return success;\n        },\n        ownKeys(_target) {\n            const baseKeys = Reflect.ownKeys(baseObj);\n            const extKeys = Reflect.ownKeys(extObj);\n            const extKeysSet = new Set(extKeys);\n            return [...baseKeys.filter((k) => !extKeysSet.has(k)), ...extKeys];\n        },\n        defineProperty(_target, prop, desc) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            Reflect.defineProperty(baseObj, prop, desc);\n            return true;\n        },\n        getOwnPropertyDescriptor(_target, prop) {\n            if (prop in extObj) {\n                return Reflect.getOwnPropertyDescriptor(extObj, prop);\n            }\n            else {\n                return Reflect.getOwnPropertyDescriptor(baseObj, prop);\n            }\n        },\n        has(_target, prop) {\n            return prop in extObj || prop in baseObj;\n        },\n    });\n}\n","import * as dntShim from \"../_dnt.shims.js\";\nimport { NotSupportedError } from \"./errors.js\";\nasync function loadSubtleCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (e) {\n        throw new NotSupportedError(e);\n    }\n}\nexport class NativeAlgorithm {\n    constructor() {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n    }\n    async _setup() {\n        if (this._api !== undefined) {\n            return;\n        }\n        this._api = await loadSubtleCrypto();\n    }\n}\n","/**\n * The supported HPKE modes.\n */\nexport const Mode = {\n    Base: 0x00,\n    Psk: 0x01,\n    Auth: 0x02,\n    AuthPsk: 0x03,\n};\n/**\n * The supported Key Encapsulation Mechanism (KEM) identifiers.\n */\nexport const KemId = {\n    NotAssigned: 0x0000,\n    DhkemP256HkdfSha256: 0x0010,\n    DhkemP384HkdfSha384: 0x0011,\n    DhkemP521HkdfSha512: 0x0012,\n    DhkemSecp256k1HkdfSha256: 0x0013,\n    DhkemX25519HkdfSha256: 0x0020,\n    DhkemX448HkdfSha512: 0x0021,\n    HybridkemX25519Kyber768: 0x0030,\n    MlKem512: 0x0040,\n    MlKem768: 0x0041,\n    MlKem1024: 0x0042,\n    XWing: 0x647a,\n};\n/**\n * The supported Key Derivation Function (KDF) identifiers.\n */\nexport const KdfId = {\n    HkdfSha256: 0x0001,\n    HkdfSha384: 0x0002,\n    HkdfSha512: 0x0003,\n};\n/**\n * The supported Authenticated Encryption with Associated Data (AEAD) identifiers.\n */\nexport const AeadId = {\n    Aes128Gcm: 0x0001,\n    Aes256Gcm: 0x0002,\n    Chacha20Poly1305: 0x0003,\n    ExportOnly: 0xFFFF,\n};\n","// The input length limit (psk, psk_id, info, exporter_context, ikm).\nexport const INPUT_LENGTH_LIMIT = 8192;\nexport const INFO_LENGTH_LIMIT = 65536;\n// The minimum length of a PSK.\nexport const MINIMUM_PSK_LENGTH = 32;\n// b\"\"\nexport const EMPTY = new Uint8Array(0);\n","// b\"KEM\"\nexport const SUITE_ID_HEADER_KEM = new Uint8Array([\n    75,\n    69,\n    77,\n    0,\n    0,\n]);\n","import * as dntShim from \"../../_dnt.shims.js\";\nimport { KemId } from \"../identifiers.js\";\nexport const isDenoV1 = () => \n// deno-lint-ignore no-explicit-any\ndntShim.dntGlobalThis.process === undefined;\n/**\n * Checks whether the runtime is Deno or not (Node.js).\n * @returns boolean - true if the runtime is Deno, false Node.js.\n */\nexport function isDeno() {\n    // deno-lint-ignore no-explicit-any\n    if (dntShim.dntGlobalThis.process === undefined) {\n        return true;\n    }\n    // deno-lint-ignore no-explicit-any\n    return dntShim.dntGlobalThis.process?.versions?.deno !== undefined;\n}\n/**\n * Checks whetehr the type of input is CryptoKeyPair or not.\n */\nexport const isCryptoKeyPair = (x) => typeof x === \"object\" &&\n    x !== null &&\n    typeof x.privateKey === \"object\" &&\n    typeof x.publicKey === \"object\";\n/**\n * Converts integer to octet string. I2OSP implementation.\n */\nexport function i2Osp(n, w) {\n    if (w <= 0) {\n        throw new Error(\"i2Osp: too small size\");\n    }\n    if (n >= 256 ** w) {\n        throw new Error(\"i2Osp: too large integer\");\n    }\n    const ret = new Uint8Array(w);\n    for (let i = 0; i < w && n; i++) {\n        ret[w - (i + 1)] = n % 256;\n        n = n >> 8;\n    }\n    return ret;\n}\n/**\n * Concatenates two Uint8Arrays.\n * @param a Uint8Array\n * @param b Uint8Array\n * @returns Concatenated Uint8Array\n */\nexport function concat(a, b) {\n    const ret = new Uint8Array(a.length + b.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    return ret;\n}\n/**\n * Decodes Base64Url-encoded data.\n * @param v Base64Url-encoded string\n * @returns Uint8Array\n */\nexport function base64UrlToBytes(v) {\n    const base64 = v.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const byteString = atob(base64);\n    const ret = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        ret[i] = byteString.charCodeAt(i);\n    }\n    return ret;\n}\n/**\n * Encodes Uint8Array to Base64Url.\n * @param v Uint8Array\n * @returns Base64Url-encoded string\n */\nexport function bytesToBase64Url(v) {\n    return btoa(String.fromCharCode(...v))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=*$/g, \"\");\n}\n/**\n * Decodes hex string to Uint8Array.\n * @param v Hex string\n * @returns Uint8Array\n * @throws Error if the input is not a hex string.\n */\nexport function hexToBytes(v) {\n    if (v.length === 0) {\n        return new Uint8Array([]);\n    }\n    const res = v.match(/[\\da-f]{2}/gi);\n    if (res == null) {\n        throw new Error(\"Not hex string.\");\n    }\n    return new Uint8Array(res.map(function (h) {\n        return parseInt(h, 16);\n    }));\n}\n/**\n * Encodes Uint8Array to hex string.\n * @param v Uint8Array\n * @returns Hex string\n */\nexport function bytesToHex(v) {\n    return [...v].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * Converts KemId to KeyAlgorithm.\n * @param kem KemId\n * @returns KeyAlgorithm\n */\nexport function kemToKeyGenAlgorithm(kem) {\n    switch (kem) {\n        case KemId.DhkemP256HkdfSha256:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-256\",\n            };\n        case KemId.DhkemP384HkdfSha384:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-384\",\n            };\n        case KemId.DhkemP521HkdfSha512:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-521\",\n            };\n        default:\n            // case KemId.DhkemX25519HkdfSha256\n            return {\n                name: \"X25519\",\n            };\n    }\n}\nexport async function loadSubtleCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (_e) {\n        throw new Error(\"Failed to load SubtleCrypto\");\n    }\n}\nexport async function loadCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto;\n    }\n    catch (_e) {\n        throw new Error(\"Web Cryptograph API not supported\");\n    }\n}\n/**\n * XOR for Uint8Array.\n */\nexport function xor(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        throw new Error(\"xor: different length inputs\");\n    }\n    const buf = new Uint8Array(a.byteLength);\n    for (let i = 0; i < a.byteLength; i++) {\n        buf[i] = a[i] ^ b[i];\n    }\n    return buf;\n}\n","import { EMPTY, INPUT_LENGTH_LIMIT } from \"../consts.js\";\nimport { DecapError, EncapError, InvalidParamError } from \"../errors.js\";\nimport { SUITE_ID_HEADER_KEM } from \"../interfaces/kemInterface.js\";\nimport { concat, i2Osp, isCryptoKeyPair } from \"../utils/misc.js\";\n// b\"eae_prk\"\nconst LABEL_EAE_PRK = new Uint8Array([101, 97, 101, 95, 112, 114, 107]);\n// b\"shared_secret\"\n// deno-fmt-ignore\nconst LABEL_SHARED_SECRET = new Uint8Array([\n    115, 104, 97, 114, 101, 100, 95, 115, 101, 99,\n    114, 101, 116,\n]);\nfunction concat3(a, b, c) {\n    const ret = new Uint8Array(a.length + b.length + c.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    ret.set(c, a.length + b.length);\n    return ret;\n}\nexport class Dhkem {\n    constructor(id, prim, kdf) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_prim\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.id = id;\n        this._prim = prim;\n        this._kdf = kdf;\n        const suiteId = new Uint8Array(SUITE_ID_HEADER_KEM);\n        suiteId.set(i2Osp(this.id, 2), 3);\n        this._kdf.init(suiteId);\n    }\n    async serializePublicKey(key) {\n        return await this._prim.serializePublicKey(key);\n    }\n    async deserializePublicKey(key) {\n        return await this._prim.deserializePublicKey(key);\n    }\n    async serializePrivateKey(key) {\n        return await this._prim.serializePrivateKey(key);\n    }\n    async deserializePrivateKey(key) {\n        return await this._prim.deserializePrivateKey(key);\n    }\n    async importKey(format, key, isPublic = true) {\n        return await this._prim.importKey(format, key, isPublic);\n    }\n    async generateKeyPair() {\n        return await this._prim.generateKeyPair();\n    }\n    async deriveKeyPair(ikm) {\n        if (ikm.byteLength > INPUT_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long ikm\");\n        }\n        return await this._prim.deriveKeyPair(ikm);\n    }\n    async encap(params) {\n        let ke;\n        if (params.ekm === undefined) {\n            ke = await this.generateKeyPair();\n        }\n        else if (isCryptoKeyPair(params.ekm)) {\n            // params.ekm is only used for testing.\n            ke = params.ekm;\n        }\n        else {\n            // params.ekm is only used for testing.\n            ke = await this.deriveKeyPair(params.ekm);\n        }\n        const enc = await this._prim.serializePublicKey(ke.publicKey);\n        const pkrm = await this._prim.serializePublicKey(params.recipientPublicKey);\n        try {\n            let dh;\n            if (params.senderKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n            }\n            else {\n                const sks = isCryptoKeyPair(params.senderKey)\n                    ? params.senderKey.privateKey\n                    : params.senderKey;\n                const dh1 = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n                const dh2 = new Uint8Array(await this._prim.dh(sks, params.recipientPublicKey));\n                dh = concat(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderKey === undefined) {\n                kemContext = concat(new Uint8Array(enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pks = isCryptoKeyPair(params.senderKey)\n                    ? params.senderKey.publicKey\n                    : await this._prim.derivePublicKey(params.senderKey);\n                const pksm = await this._prim.serializePublicKey(pks);\n                kemContext = concat3(new Uint8Array(enc), new Uint8Array(pkrm), new Uint8Array(pksm));\n            }\n            const sharedSecret = await this._generateSharedSecret(dh, kemContext);\n            return {\n                enc: enc,\n                sharedSecret: sharedSecret,\n            };\n        }\n        catch (e) {\n            throw new EncapError(e);\n        }\n    }\n    async decap(params) {\n        const pke = await this._prim.deserializePublicKey(params.enc);\n        const skr = isCryptoKeyPair(params.recipientKey)\n            ? params.recipientKey.privateKey\n            : params.recipientKey;\n        const pkr = isCryptoKeyPair(params.recipientKey)\n            ? params.recipientKey.publicKey\n            : await this._prim.derivePublicKey(params.recipientKey);\n        const pkrm = await this._prim.serializePublicKey(pkr);\n        try {\n            let dh;\n            if (params.senderPublicKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(skr, pke));\n            }\n            else {\n                const dh1 = new Uint8Array(await this._prim.dh(skr, pke));\n                const dh2 = new Uint8Array(await this._prim.dh(skr, params.senderPublicKey));\n                dh = concat(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderPublicKey === undefined) {\n                kemContext = concat(new Uint8Array(params.enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pksm = await this._prim.serializePublicKey(params.senderPublicKey);\n                kemContext = new Uint8Array(params.enc.byteLength + pkrm.byteLength + pksm.byteLength);\n                kemContext.set(new Uint8Array(params.enc), 0);\n                kemContext.set(new Uint8Array(pkrm), params.enc.byteLength);\n                kemContext.set(new Uint8Array(pksm), params.enc.byteLength + pkrm.byteLength);\n            }\n            return await this._generateSharedSecret(dh, kemContext);\n        }\n        catch (e) {\n            throw new DecapError(e);\n        }\n    }\n    async _generateSharedSecret(dh, kemContext) {\n        const labeledIkm = this._kdf.buildLabeledIkm(LABEL_EAE_PRK, dh);\n        const labeledInfo = this._kdf.buildLabeledInfo(LABEL_SHARED_SECRET, kemContext, this.secretSize);\n        return await this._kdf.extractAndExpand(EMPTY.buffer, labeledIkm.buffer, labeledInfo.buffer, this.secretSize);\n    }\n}\n","// The key usages for KEM.\nexport const KEM_USAGES = [\"deriveBits\"];\n// b\"dkp_prk\"\nexport const LABEL_DKP_PRK = new Uint8Array([\n    100,\n    107,\n    112,\n    95,\n    112,\n    114,\n    107,\n]);\n// b\"sk\"\nexport const LABEL_SK = new Uint8Array([115, 107]);\n","/**\n * The minimum inplementation of bignum to derive an EC key pair.\n */\nexport class Bignum {\n    constructor(size) {\n        Object.defineProperty(this, \"_num\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._num = new Uint8Array(size);\n    }\n    val() {\n        return this._num;\n    }\n    reset() {\n        this._num.fill(0);\n    }\n    set(src) {\n        if (src.length !== this._num.length) {\n            throw new Error(\"Bignum.set: invalid argument\");\n        }\n        this._num.set(src);\n    }\n    isZero() {\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] !== 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    lessThan(v) {\n        if (v.length !== this._num.length) {\n            throw new Error(\"Bignum.lessThan: invalid argument\");\n        }\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] < v[i]) {\n                return true;\n            }\n            if (this._num[i] > v[i]) {\n                return false;\n            }\n        }\n        return false;\n    }\n}\n","import { NativeAlgorithm } from \"../../algorithm.js\";\nimport { EMPTY } from \"../../consts.js\";\nimport { DeriveKeyPairError, DeserializeError, NotSupportedError, SerializeError, } from \"../../errors.js\";\nimport { KemId } from \"../../identifiers.js\";\nimport { KEM_USAGES, LABEL_DKP_PRK } from \"../../interfaces/dhkemPrimitives.js\";\nimport { Bignum } from \"../../utils/bignum.js\";\nimport { base64UrlToBytes, i2Osp } from \"../../utils/misc.js\";\n// b\"candidate\"\n// deno-fmt-ignore\nconst LABEL_CANDIDATE = new Uint8Array([\n    99, 97, 110, 100, 105, 100, 97, 116, 101,\n]);\n// the order of the curve being used.\n// deno-fmt-ignore\nconst ORDER_P_256 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xbc, 0xe6, 0xfa, 0xad, 0xa7, 0x17, 0x9e, 0x84,\n    0xf3, 0xb9, 0xca, 0xc2, 0xfc, 0x63, 0x25, 0x51,\n]);\n// deno-fmt-ignore\nconst ORDER_P_384 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xc7, 0x63, 0x4d, 0x81, 0xf4, 0x37, 0x2d, 0xdf,\n    0x58, 0x1a, 0x0d, 0xb2, 0x48, 0xb0, 0xa7, 0x7a,\n    0xec, 0xec, 0x19, 0x6a, 0xcc, 0xc5, 0x29, 0x73,\n]);\n// deno-fmt-ignore\nconst ORDER_P_521 = new Uint8Array([\n    0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xfa, 0x51, 0x86, 0x87, 0x83, 0xbf, 0x2f,\n    0x96, 0x6b, 0x7f, 0xcc, 0x01, 0x48, 0xf7, 0x09,\n    0xa5, 0xd0, 0x3b, 0xb5, 0xc9, 0xb8, 0x89, 0x9c,\n    0x47, 0xae, 0xbb, 0x6f, 0xb7, 0x1e, 0x91, 0x38,\n    0x64, 0x09,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_256 = new Uint8Array([\n    48, 65, 2, 1, 0, 48, 19, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 8, 42, 134,\n    72, 206, 61, 3, 1, 7, 4, 39, 48, 37,\n    2, 1, 1, 4, 32,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_384 = new Uint8Array([\n    48, 78, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 34, 4, 55, 48, 53, 2, 1, 1,\n    4, 48,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_521 = new Uint8Array([\n    48, 96, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 35, 4, 73, 48, 71, 2, 1, 1,\n    4, 66,\n]);\nexport class Ec extends NativeAlgorithm {\n    constructor(kem, hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // EC specific arguments for deriving key pair.\n        Object.defineProperty(this, \"_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_bitmask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._hkdf = hkdf;\n        switch (kem) {\n            case KemId.DhkemP256HkdfSha256:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-256\" };\n                this._nPk = 65;\n                this._nSk = 32;\n                this._nDh = 32;\n                this._order = ORDER_P_256;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_256;\n                break;\n            case KemId.DhkemP384HkdfSha384:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-384\" };\n                this._nPk = 97;\n                this._nSk = 48;\n                this._nDh = 48;\n                this._order = ORDER_P_384;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_384;\n                break;\n            default:\n                // case KemId.DhkemP521HkdfSha512:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-521\" };\n                this._nPk = 133;\n                this._nSk = 66;\n                this._nDh = 66;\n                this._order = ORDER_P_521;\n                this._bitmask = 0x01;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_521;\n                break;\n        }\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(this._alg, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const bn = new Bignum(this._nSk);\n            for (let counter = 0; bn.isZero() || !bn.lessThan(this._order); counter++) {\n                if (counter > 255) {\n                    throw new Error(\"Faild to derive a key pair\");\n                }\n                const bytes = new Uint8Array(await this._hkdf.labeledExpand(dkpPrk, LABEL_CANDIDATE, i2Osp(counter, 1), this._nSk));\n                bytes[0] = bytes[0] & this._bitmask;\n                bn.set(bytes);\n            }\n            const sk = await this._deserializePkcs8Key(bn.val());\n            bn.reset();\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        try {\n            await this._setup();\n            const bits = await this._api.deriveBits({\n                name: \"ECDH\",\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.crv === \"undefined\" || key.crv !== this._alg.namedCurve) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","import { EMPTY } from \"../consts.js\";\nimport { InvalidParamError } from \"../errors.js\";\nimport { KdfId } from \"../identifiers.js\";\nimport { NativeAlgorithm } from \"../algorithm.js\";\n// b\"HPKE-v1\"\nconst HPKE_VERSION = new Uint8Array([72, 80, 75, 69, 45, 118, 49]);\nexport class HkdfNative extends NativeAlgorithm {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha256\n        });\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: EMPTY\n        });\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n    init(suiteId) {\n        this._suiteId = suiteId;\n    }\n    buildLabeledIkm(label, ikm) {\n        this._checkInit();\n        const ret = new Uint8Array(7 + this._suiteId.byteLength + label.byteLength + ikm.byteLength);\n        ret.set(HPKE_VERSION, 0);\n        ret.set(this._suiteId, 7);\n        ret.set(label, 7 + this._suiteId.byteLength);\n        ret.set(ikm, 7 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    buildLabeledInfo(label, info, len) {\n        this._checkInit();\n        const ret = new Uint8Array(9 + this._suiteId.byteLength + label.byteLength + info.byteLength);\n        ret.set(new Uint8Array([0, len]), 0);\n        ret.set(HPKE_VERSION, 2);\n        ret.set(this._suiteId, 9);\n        ret.set(label, 9 + this._suiteId.byteLength);\n        ret.set(info, 9 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    async extract(salt, ikm) {\n        await this._setup();\n        if (salt.byteLength === 0) {\n            salt = new ArrayBuffer(this.hashSize);\n        }\n        if (salt.byteLength !== this.hashSize) {\n            throw new InvalidParamError(\"The salt length must be the same as the hashSize\");\n        }\n        const key = await this._api.importKey(\"raw\", salt, this.algHash, false, [\n            \"sign\",\n        ]);\n        return await this._api.sign(\"HMAC\", key, ikm);\n    }\n    async expand(prk, info, len) {\n        await this._setup();\n        const key = await this._api.importKey(\"raw\", prk, this.algHash, false, [\n            \"sign\",\n        ]);\n        const okm = new ArrayBuffer(len);\n        const p = new Uint8Array(okm);\n        let prev = EMPTY;\n        const mid = new Uint8Array(info);\n        const tail = new Uint8Array(1);\n        if (len > 255 * this.hashSize) {\n            throw new Error(\"Entropy limit reached\");\n        }\n        const tmp = new Uint8Array(this.hashSize + mid.length + 1);\n        for (let i = 1, cur = 0; cur < p.length; i++) {\n            tail[0] = i;\n            tmp.set(prev, 0);\n            tmp.set(mid, prev.length);\n            tmp.set(tail, prev.length + mid.length);\n            prev = new Uint8Array(await this._api.sign(\"HMAC\", key, tmp.slice(0, prev.length + mid.length + 1)));\n            if (p.length - cur >= prev.length) {\n                p.set(prev, cur);\n                cur += prev.length;\n            }\n            else {\n                p.set(prev.slice(0, p.length - cur), cur);\n                cur += p.length - cur;\n            }\n        }\n        return okm;\n    }\n    async extractAndExpand(salt, ikm, info, len) {\n        await this._setup();\n        const baseKey = await this._api.importKey(\"raw\", ikm, \"HKDF\", false, [\"deriveBits\"]);\n        return await this._api.deriveBits({\n            name: \"HKDF\",\n            hash: this.algHash.hash,\n            salt: salt,\n            info: info,\n        }, baseKey, len * 8);\n    }\n    async labeledExtract(salt, label, ikm) {\n        return await this.extract(salt, this.buildLabeledIkm(label, ikm).buffer);\n    }\n    async labeledExpand(prk, label, info, len) {\n        return await this.expand(prk, this.buildLabeledInfo(label, info, len).buffer, len);\n    }\n    _checkInit() {\n        if (this._suiteId === EMPTY) {\n            throw new Error(\"Not initialized. Call init()\");\n        }\n    }\n}\nexport class HkdfSha256Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha256 (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha256\n        });\n        /** 32 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n}\nexport class HkdfSha384Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha384 (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha384\n        });\n        /** 48 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-384\",\n                length: 384,\n            }\n        });\n    }\n}\nexport class HkdfSha512Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha512 (0x0003) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha512\n        });\n        /** 64 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-512\",\n                length: 512,\n            }\n        });\n    }\n}\n","// The key usages for AEAD.\nexport const AEAD_USAGES = [\"encrypt\", \"decrypt\"];\n","/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/abstract/montgomery.ts\n */\n/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes, aInRange, bytesToNumberLE, copyBytes, numberToBytesLE, randomBytesAsync, validateObject, } from \"../utils/noble.js\";\nimport { createKeygen } from \"./curve.js\";\nimport { mod } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        adjustScalarBytes: \"function\",\n        powPminus2: \"function\",\n    });\n    return Object.freeze({ ...curve });\n}\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P, type, adjustScalarBytes, powPminus2, randomBytes: rand } = CURVE;\n    const is25519 = type === \"x25519\";\n    if (!is25519 && type !== \"x448\")\n        throw new Error(\"invalid type\");\n    const randomBytes_ = rand || randomBytesAsync;\n    const montgomeryBits = is25519 ? 255 : 448;\n    const fieldLen = is25519 ? 32 : 56;\n    const Gu = is25519 ? BigInt(9) : BigInt(5);\n    // RFC 7748 #5:\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519 and\n    // (156326 - 2) / 4 = 39081 for curve448/X448\n    // const a = is25519 ? 156326n : 486662n;\n    const a24 = is25519 ? BigInt(121665) : BigInt(39081);\n    // RFC: x25519 \"the resulting integer is of the form 2^254 plus\n    // eight times a value between 0 and 2^251 - 1 (inclusive)\"\n    // x448: \"2^447 plus four times a value between 0 and 2^445 - 1 (inclusive)\"\n    const minScalar = is25519 ? _2n ** BigInt(254) : _2n ** BigInt(447);\n    const maxAdded = is25519\n        ? BigInt(8) * _2n ** BigInt(251) - _1n\n        : BigInt(4) * _2n ** BigInt(445) - _1n;\n    const maxScalar = minScalar + maxAdded + _1n; // (inclusive)\n    const modP = (n) => mod(n, P);\n    const GuBytes = encodeU(Gu);\n    function encodeU(u) {\n        return numberToBytesLE(modP(u), fieldLen);\n    }\n    function decodeU(u) {\n        const _u = copyBytes(abytes(u, fieldLen, \"uCoordinate\"));\n        // RFC: When receiving such an array, implementations of X25519\n        // (but not X448) MUST mask the most significant bit in the final byte.\n        if (is25519)\n            _u[31] &= 127; // 0b0111_1111\n        // RFC: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.  The non-canonical\n        // values are 2^255 - 19 through 2^255 - 1 for X25519 and 2^448 - 2^224\n        // - 1 through 2^448 - 1 for X448.\n        return modP(bytesToNumberLE(_u));\n    }\n    function decodeScalar(scalar) {\n        return bytesToNumberLE(adjustScalarBytes(copyBytes(abytes(scalar, fieldLen, \"scalar\"))));\n    }\n    function scalarMult(scalar, u) {\n        const pu = montgomeryLadder(decodeU(u), decodeScalar(scalar));\n        // Some public keys are useless, of low-order. Curve author doesn't think\n        // it needs to be validated, but we do it nonetheless.\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error(\"invalid private or public key received\");\n        return encodeU(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    const getPublicKey = scalarMultBase;\n    const getSharedSecret = scalarMult;\n    // cswap from RFC7748 \"example code\"\n    function cswap(swap, x_2, x_3) {\n        // dummy = mask(swap) AND (x_2 XOR x_3)\n        // Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n        // and x_3, computed, e.g., as mask(swap) = 0 - swap.\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy); // x_2 = x_2 XOR dummy\n        x_3 = modP(x_3 + dummy); // x_3 = x_3 XOR dummy\n        return { x_2, x_3 };\n    }\n    /**\n     * Montgomery x-only multiplication ladder.\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        aInRange(\"u\", u, _0n, P);\n        aInRange(\"scalar\", scalar, minScalar, maxScalar);\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n            ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n        ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n        const z2 = powPminus2(z_2); // `Fp.pow(x, P - _2n)` is much slower equivalent\n        return modP(x_2 * z2); // Return x_2 * (z_2^(p - 2))\n    }\n    const lengths = {\n        secretKey: fieldLen,\n        publicKey: fieldLen,\n        seed: fieldLen,\n    };\n    const randomSecretKey = async (seed) => {\n        if (seed === undefined) {\n            seed = await randomBytes_(fieldLen);\n        }\n        abytes(seed, lengths.seed, \"seed\");\n        return seed;\n    };\n    const utils = { randomSecretKey };\n    return Object.freeze({\n        keygen: createKeygen(randomSecretKey, getPublicKey),\n        getSharedSecret,\n        getPublicKey,\n        scalarMult,\n        scalarMultBase,\n        utils,\n        GuBytes: GuBytes.slice(),\n        lengths,\n    });\n}\n","import { AEAD_USAGES, AeadId, NativeAlgorithm } from \"@hpke/common\";\nexport class AesGcmContext extends NativeAlgorithm {\n    constructor(key) {\n        super();\n        Object.defineProperty(this, \"_rawKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this._rawKey = key;\n    }\n    async seal(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const ct = await this._api.encrypt(alg, this._key, data);\n        return ct;\n    }\n    async open(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const pt = await this._api.decrypt(alg, this._key, data);\n        return pt;\n    }\n    async _setupKey() {\n        if (this._key !== undefined) {\n            return;\n        }\n        await this._setup();\n        const key = await this._importKey(this._rawKey);\n        (new Uint8Array(this._rawKey)).fill(0);\n        this._key = key;\n        return;\n    }\n    async _importKey(key) {\n        return await this._api.importKey(\"raw\", key, { name: \"AES-GCM\" }, true, AEAD_USAGES);\n    }\n}\n/**\n * The AES-128-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes128Gcm`.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class Aes128Gcm {\n    constructor() {\n        /** AeadId.Aes128Gcm (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AeadId.Aes128Gcm\n        });\n        /** 16 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n    createEncryptionContext(key) {\n        return new AesGcmContext(key);\n    }\n}\n/**\n * The AES-256-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes256Gcm`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class Aes256Gcm extends Aes128Gcm {\n    constructor() {\n        super(...arguments);\n        /** AeadId.Aes256Gcm (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AeadId.Aes256Gcm\n        });\n        /** 32 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n}\n","import { NotSupportedError } from \"@hpke/common\";\nexport function emitNotSupported() {\n    return new Promise((_resolve, reject) => {\n        reject(new NotSupportedError(\"Not supported\"));\n    });\n}\n","import { ExportError, INPUT_LENGTH_LIMIT, InvalidParamError, } from \"@hpke/common\";\nimport { emitNotSupported } from \"./utils/emitNotSupported.js\";\n// b\"sec\"\nconst LABEL_SEC = new Uint8Array([115, 101, 99]);\nexport class ExporterContextImpl {\n    constructor(api, kdf, exporterSecret) {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exporterSecret\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._api = api;\n        this._kdf = kdf;\n        this.exporterSecret = exporterSecret;\n    }\n    async seal(_data, _aad) {\n        return await emitNotSupported();\n    }\n    async open(_data, _aad) {\n        return await emitNotSupported();\n    }\n    async export(exporterContext, len) {\n        if (exporterContext.byteLength > INPUT_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long exporter context\");\n        }\n        try {\n            return await this._kdf.labeledExpand(this.exporterSecret, LABEL_SEC, new Uint8Array(exporterContext), len);\n        }\n        catch (e) {\n            throw new ExportError(e);\n        }\n    }\n}\nexport class RecipientExporterContextImpl extends ExporterContextImpl {\n}\nexport class SenderExporterContextImpl extends ExporterContextImpl {\n    constructor(api, kdf, exporterSecret, enc) {\n        super(api, kdf, exporterSecret);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n        return;\n    }\n}\n","import { i2Osp, MessageLimitReachedError, xor } from \"@hpke/common\";\nimport { ExporterContextImpl } from \"./exporterContext.js\";\nexport class EncryptionContextImpl extends ExporterContextImpl {\n    constructor(api, kdf, params) {\n        super(api, kdf, params.exporterSecret);\n        // AEAD id.\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a key for the algorithm.\n        Object.defineProperty(this, \"_nK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a nonce for the algorithm.\n        Object.defineProperty(this, \"_nN\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of an authentication tag for the algorithm.\n        Object.defineProperty(this, \"_nT\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The end-to-end encryption key information.\n        Object.defineProperty(this, \"_ctx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (params.key === undefined || params.baseNonce === undefined ||\n            params.seq === undefined) {\n            throw new Error(\"Required parameters are missing\");\n        }\n        this._aead = params.aead;\n        this._nK = this._aead.keySize;\n        this._nN = this._aead.nonceSize;\n        this._nT = this._aead.tagSize;\n        const key = this._aead.createEncryptionContext(params.key);\n        this._ctx = {\n            key: key,\n            baseNonce: params.baseNonce,\n            seq: params.seq,\n        };\n    }\n    computeNonce(k) {\n        const seqBytes = i2Osp(k.seq, k.baseNonce.byteLength);\n        return xor(k.baseNonce, seqBytes).buffer;\n    }\n    incrementSeq(k) {\n        // if (this.seq >= (1 << (8 * this.baseNonce.byteLength)) - 1) {\n        if (k.seq > Number.MAX_SAFE_INTEGER) {\n            throw new MessageLimitReachedError(\"Message limit reached\");\n        }\n        k.seq += 1;\n        return;\n    }\n}\n","import { EMPTY, OpenError } from \"@hpke/common\";\nimport { EncryptionContextImpl } from \"./encryptionContext.js\";\nexport class RecipientContextImpl extends EncryptionContextImpl {\n    async open(data, aad = EMPTY.buffer) {\n        let pt;\n        try {\n            pt = await this._ctx.key.open(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new OpenError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return pt;\n    }\n}\n","import { EMPTY, SealError } from \"@hpke/common\";\nimport { EncryptionContextImpl } from \"./encryptionContext.js\";\nexport class SenderContextImpl extends EncryptionContextImpl {\n    constructor(api, kdf, params, enc) {\n        super(api, kdf, params);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n    }\n    async seal(data, aad = EMPTY.buffer) {\n        let ct;\n        try {\n            ct = await this._ctx.key.seal(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new SealError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return ct;\n    }\n}\n","import { AeadId, EMPTY, i2Osp, INFO_LENGTH_LIMIT, INPUT_LENGTH_LIMIT, InvalidParamError, MINIMUM_PSK_LENGTH, Mode, NativeAlgorithm, } from \"@hpke/common\";\nimport { RecipientExporterContextImpl, SenderExporterContextImpl, } from \"./exporterContext.js\";\nimport { RecipientContextImpl } from \"./recipientContext.js\";\nimport { SenderContextImpl } from \"./senderContext.js\";\n// b\"base_nonce\"\n// deno-fmt-ignore\nconst LABEL_BASE_NONCE = new Uint8Array([\n    98, 97, 115, 101, 95, 110, 111, 110, 99, 101,\n]);\n// b\"exp\"\nconst LABEL_EXP = new Uint8Array([101, 120, 112]);\n// b\"info_hash\"\n// deno-fmt-ignore\nconst LABEL_INFO_HASH = new Uint8Array([\n    105, 110, 102, 111, 95, 104, 97, 115, 104,\n]);\n// b\"key\"\nconst LABEL_KEY = new Uint8Array([107, 101, 121]);\n// b\"psk_id_hash\"\n// deno-fmt-ignore\nconst LABEL_PSK_ID_HASH = new Uint8Array([\n    112, 115, 107, 95, 105, 100, 95, 104, 97, 115, 104,\n]);\n// b\"secret\"\nconst LABEL_SECRET = new Uint8Array([115, 101, 99, 114, 101, 116]);\n// b\"HPKE\"\n// deno-fmt-ignore\nconst SUITE_ID_HEADER_HPKE = new Uint8Array([\n    72, 80, 75, 69, 0, 0, 0, 0, 0, 0,\n]);\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This is the super class of {@link CipherSuite} and the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuite | @hpke/core#CipherSuite} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n *   - DHKEM(X25519, HKDF-SHA256)\n *   - DHKEM(X448, HKDF-SHA512)\n *   - ChaCha20Poly1305\n *\n * In addtion, the HKDF functions contained in this class can only derive\n * keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *   - {@link createSenderContext}\n *   - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *   - {@link seal}\n *   - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * // Use an extension module.\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class CipherSuiteNative extends NativeAlgorithm {\n    /**\n     * @param params A set of parameters for building a cipher suite.\n     *\n     * If the error occurred, throws {@link InvalidParamError}.\n     *\n     * @throws {@link InvalidParamError}\n     */\n    constructor(params) {\n        super();\n        Object.defineProperty(this, \"_kem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // KEM\n        if (typeof params.kem === \"number\") {\n            throw new InvalidParamError(\"KemId cannot be used\");\n        }\n        this._kem = params.kem;\n        // KDF\n        if (typeof params.kdf === \"number\") {\n            throw new InvalidParamError(\"KdfId cannot be used\");\n        }\n        this._kdf = params.kdf;\n        // AEAD\n        if (typeof params.aead === \"number\") {\n            throw new InvalidParamError(\"AeadId cannot be used\");\n        }\n        this._aead = params.aead;\n        this._suiteId = new Uint8Array(SUITE_ID_HEADER_HPKE);\n        this._suiteId.set(i2Osp(this._kem.id, 2), 4);\n        this._suiteId.set(i2Osp(this._kdf.id, 2), 6);\n        this._suiteId.set(i2Osp(this._aead.id, 2), 8);\n        this._kdf.init(this._suiteId);\n    }\n    /**\n     * Gets the KEM context of the ciphersuite.\n     */\n    get kem() {\n        return this._kem;\n    }\n    /**\n     * Gets the KDF context of the ciphersuite.\n     */\n    get kdf() {\n        return this._kdf;\n    }\n    /**\n     * Gets the AEAD context of the ciphersuite.\n     */\n    get aead() {\n        return this._aead;\n    }\n    /**\n     * Creates an encryption context for a sender.\n     *\n     * If the error occurred, throws {@link DecapError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the sender encryption context.\n     * @returns A sender encryption context.\n     * @throws {@link EncapError}, {@link ValidationError}\n     */\n    async createSenderContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const dh = await this._kem.encap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderKey !== undefined ? Mode.AuthPsk : Mode.Psk;\n        }\n        else {\n            mode = params.senderKey !== undefined ? Mode.Auth : Mode.Base;\n        }\n        return await this._keyScheduleS(mode, dh.sharedSecret, dh.enc, params);\n    }\n    /**\n     * Creates an encryption context for a recipient.\n     *\n     * If the error occurred, throws {@link DecapError}\n     * | {@link DeserializeError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the recipient encryption context.\n     * @returns A recipient encryption context.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link ValidationError}\n     */\n    async createRecipientContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const sharedSecret = await this._kem.decap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderPublicKey !== undefined ? Mode.AuthPsk : Mode.Psk;\n        }\n        else {\n            mode = params.senderPublicKey !== undefined ? Mode.Auth : Mode.Base;\n        }\n        return await this._keyScheduleR(mode, sharedSecret, params);\n    }\n    /**\n     * Encrypts a message to a recipient.\n     *\n     * If the error occurred, throws `EncapError` | `MessageLimitReachedError` | `SealError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a sender encryption context.\n     * @param pt A plain text as bytes to be encrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A cipher text and an encapsulated key as bytes.\n     * @throws {@link EncapError}, {@link MessageLimitReachedError}, {@link SealError}, {@link ValidationError}\n     */\n    async seal(params, pt, aad = EMPTY.buffer) {\n        const ctx = await this.createSenderContext(params);\n        return {\n            ct: await ctx.seal(pt, aad),\n            enc: ctx.enc,\n        };\n    }\n    /**\n     * Decrypts a message from a sender.\n     *\n     * If the error occurred, throws `DecapError` | `DeserializeError` | `OpenError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a recipient encryption context.\n     * @param ct An encrypted text as bytes to be decrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A decrypted plain text as bytes.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link OpenError}, {@link ValidationError}\n     */\n    async open(params, ct, aad = EMPTY.buffer) {\n        const ctx = await this.createRecipientContext(params);\n        return await ctx.open(ct, aad);\n    }\n    // private verifyPskInputs(mode: Mode, params: KeyScheduleParams) {\n    //   const gotPsk = (params.psk !== undefined);\n    //   const gotPskId = (params.psk !== undefined && params.psk.id.byteLength > 0);\n    //   if (gotPsk !== gotPskId) {\n    //     throw new Error('Inconsistent PSK inputs');\n    //   }\n    //   if (gotPsk && (mode === Mode.Base || mode === Mode.Auth)) {\n    //     throw new Error('PSK input provided when not needed');\n    //   }\n    //   if (!gotPsk && (mode === Mode.Psk || mode === Mode.AuthPsk)) {\n    //     throw new Error('Missing required PSK input');\n    //   }\n    //   return;\n    // }\n    async _keySchedule(mode, sharedSecret, params) {\n        // Currently, there is no point in executing this function\n        // because this hpke library does not allow users to explicitly specify the mode.\n        //\n        // this.verifyPskInputs(mode, params);\n        const pskId = params.psk === undefined\n            ? EMPTY\n            : new Uint8Array(params.psk.id);\n        const pskIdHash = await this._kdf.labeledExtract(EMPTY.buffer, LABEL_PSK_ID_HASH, pskId);\n        const info = params.info === undefined\n            ? EMPTY\n            : new Uint8Array(params.info);\n        const infoHash = await this._kdf.labeledExtract(EMPTY.buffer, LABEL_INFO_HASH, info);\n        const keyScheduleContext = new Uint8Array(1 + pskIdHash.byteLength + infoHash.byteLength);\n        keyScheduleContext.set(new Uint8Array([mode]), 0);\n        keyScheduleContext.set(new Uint8Array(pskIdHash), 1);\n        keyScheduleContext.set(new Uint8Array(infoHash), 1 + pskIdHash.byteLength);\n        const psk = params.psk === undefined\n            ? EMPTY\n            : new Uint8Array(params.psk.key);\n        const ikm = this._kdf.buildLabeledIkm(LABEL_SECRET, psk)\n            .buffer;\n        const exporterSecretInfo = this._kdf.buildLabeledInfo(LABEL_EXP, keyScheduleContext, this._kdf.hashSize).buffer;\n        const exporterSecret = await this._kdf.extractAndExpand(sharedSecret, ikm, exporterSecretInfo, this._kdf.hashSize);\n        if (this._aead.id === AeadId.ExportOnly) {\n            return { aead: this._aead, exporterSecret: exporterSecret };\n        }\n        const keyInfo = this._kdf.buildLabeledInfo(LABEL_KEY, keyScheduleContext, this._aead.keySize).buffer;\n        const key = await this._kdf.extractAndExpand(sharedSecret, ikm, keyInfo, this._aead.keySize);\n        const baseNonceInfo = this._kdf.buildLabeledInfo(LABEL_BASE_NONCE, keyScheduleContext, this._aead.nonceSize).buffer;\n        const baseNonce = await this._kdf.extractAndExpand(sharedSecret, ikm, baseNonceInfo, this._aead.nonceSize);\n        return {\n            aead: this._aead,\n            exporterSecret: exporterSecret,\n            key: key,\n            baseNonce: new Uint8Array(baseNonce),\n            seq: 0,\n        };\n    }\n    async _keyScheduleS(mode, sharedSecret, enc, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new SenderExporterContextImpl(this._api, this._kdf, res.exporterSecret, enc);\n        }\n        return new SenderContextImpl(this._api, this._kdf, res, enc);\n    }\n    async _keyScheduleR(mode, sharedSecret, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new RecipientExporterContextImpl(this._api, this._kdf, res.exporterSecret);\n        }\n        return new RecipientContextImpl(this._api, this._kdf, res);\n    }\n    _validateInputLength(params) {\n        if (params.info !== undefined &&\n            params.info.byteLength > INFO_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long info\");\n        }\n        if (params.psk !== undefined) {\n            if (params.psk.key.byteLength < MINIMUM_PSK_LENGTH) {\n                throw new InvalidParamError(`PSK must have at least ${MINIMUM_PSK_LENGTH} bytes`);\n            }\n            if (params.psk.key.byteLength > INPUT_LENGTH_LIMIT) {\n                throw new InvalidParamError(\"Too long psk.key\");\n            }\n            if (params.psk.id.byteLength > INPUT_LENGTH_LIMIT) {\n                throw new InvalidParamError(\"Too long psk.id\");\n            }\n        }\n        return;\n    }\n}\n","import { Dhkem, Ec, HkdfSha256Native, HkdfSha384Native, HkdfSha512Native, KemId, } from \"@hpke/common\";\nexport class DhkemP256HkdfSha256Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha256Native();\n        const prim = new Ec(KemId.DhkemP256HkdfSha256, kdf);\n        super(KemId.DhkemP256HkdfSha256, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP256HkdfSha256\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n    }\n}\nexport class DhkemP384HkdfSha384Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha384Native();\n        const prim = new Ec(KemId.DhkemP384HkdfSha384, kdf);\n        super(KemId.DhkemP384HkdfSha384, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP384HkdfSha384\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n    }\n}\nexport class DhkemP521HkdfSha512Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha512Native();\n        const prim = new Ec(KemId.DhkemP521HkdfSha512, kdf);\n        super(KemId.DhkemP521HkdfSha512, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP521HkdfSha512\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n    }\n}\n","import { HkdfSha256Native, HkdfSha384Native, HkdfSha512Native, } from \"@hpke/common\";\nimport { CipherSuiteNative } from \"./cipherSuiteNative.js\";\nimport { DhkemP256HkdfSha256Native, DhkemP384HkdfSha384Native, DhkemP521HkdfSha512Native, } from \"./kems/dhkemNative.js\";\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This class is the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteNative | @hpke/core#CipherSuiteNative} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n * - `DHKEM(X25519, HKDF-SHA256)`\n * - `DHKEM(X448, HKDF-SHA512)`\n * - `ChaCha20Poly1305`\n *\n * In addtion, the HKDF functions contained in this `CipherSuiteNative`\n * class can only derive keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *     - {@link createSenderContext}\n *     - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *     - {@link seal}\n *     - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class CipherSuite extends CipherSuiteNative {\n}\n/**\n * The DHKEM(P-256, HKDF-SHA256) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP256HkdfSha256`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class DhkemP256HkdfSha256 extends DhkemP256HkdfSha256Native {\n}\n/**\n * The DHKEM(P-384, HKDF-SHA384) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP384HkdfSha384`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class DhkemP384HkdfSha384 extends DhkemP384HkdfSha384Native {\n}\n/**\n * The DHKEM(P-521, HKDF-SHA512) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP521HkdfSha512`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class DhkemP521HkdfSha512 extends DhkemP521HkdfSha512Native {\n}\n/**\n * The HKDF-SHA256 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha256`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class HkdfSha256 extends HkdfSha256Native {\n}\n/**\n * The HKDF-SHA384 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha384`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class HkdfSha384 extends HkdfSha384Native {\n}\n/**\n * The HKDF-SHA512 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha512`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class HkdfSha512 extends HkdfSha512Native {\n}\n","import { base64UrlToBytes, DeriveKeyPairError, DeserializeError, EMPTY, KEM_USAGES, LABEL_DKP_PRK, LABEL_SK, NativeAlgorithm, NotSupportedError, SerializeError, } from \"@hpke/common\";\nconst ALG_NAME = \"X25519\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X25519 = new Uint8Array([\n    0x30, 0x2e, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6e, 0x04, 0x22, 0x04, 0x20,\n]);\nexport class X25519 extends NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 32;\n        this._nSk = 32;\n        this._nDh = 32;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X25519;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, LABEL_SK, EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","import { base64UrlToBytes, DeriveKeyPairError, DeserializeError, EMPTY, KEM_USAGES, LABEL_DKP_PRK, LABEL_SK, NativeAlgorithm, NotSupportedError, SerializeError, } from \"@hpke/common\";\nconst ALG_NAME = \"X448\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X448 = new Uint8Array([\n    0x30, 0x46, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6f, 0x04, 0x3a, 0x04, 0x38,\n]);\nexport class X448 extends NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 56;\n        this._nSk = 56;\n        this._nDh = 56;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X448;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, LABEL_SK, EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Find code of next character\n      var charCode = source.charCodeAt(psz)\n            // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n            // Decode character\n      var carry = BASE_MAP[charCode]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\n/**\n * 4KB JS implementation of ed25519 EdDSA signatures.\n * Compliant with RFC8032, FIPS 186-5 & ZIP215.\n * @module\n * @example\n * ```js\nimport * as ed from '@noble/ed25519';\n(async () => {\n  const privKey = ed.utils.randomPrivateKey();\n  const message = Uint8Array.from([0xab, 0xbc, 0xcd, 0xde]);\n  const pubKey = await ed.getPublicKeyAsync(privKey); // Sync methods are also present\n  const signature = await ed.signAsync(message, privKey);\n  const isValid = await ed.verifyAsync(signature, message, pubKey);\n})();\n```\n */\n/**\n * Curve params. ed25519 is twisted edwards curve. Equation is −x² + y² = -a + dx²y².\n * * P = `2n**255n - 19n` // field over which calculations are done\n * * N = `2n**252n + 27742317777372353535851937790883648493n` // group order, amount of curve points\n * * h = 8 // cofactor\n * * a = `Fp.create(BigInt(-1))` // equation param\n * * d = -121665/121666 a.k.a. `Fp.neg(121665 * Fp.inv(121666))` // equation param\n * * Gx, Gy are coordinates of Generator / base point\n */\nconst ed25519_CURVE = {\n    p: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedn,\n    n: 0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3edn,\n    h: 8n,\n    a: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffecn,\n    d: 0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3n,\n    Gx: 0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51an,\n    Gy: 0x6666666666666666666666666666666666666666666666666666666666666658n,\n};\nconst { p: P, n: N, Gx, Gy, a: _a, d: _d } = ed25519_CURVE;\nconst h = 8n; // cofactor\nconst L = 32; // field / group byte length\nconst L2 = 64;\n// Helpers and Precomputes sections are reused between libraries\n// ## Helpers\n// ----------\n// error helper, messes-up stack trace\nconst err = (m = '') => {\n    throw new Error(m);\n};\nconst isBig = (n) => typeof n === 'bigint'; // is big integer\nconst isStr = (s) => typeof s === 'string'; // is string\nconst isBytes = (a) => a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n/** assert is Uint8Array (of specific length) */\nconst abytes = (a, l) => !isBytes(a) || (typeof l === 'number' && l > 0 && a.length !== l)\n    ? err('Uint8Array expected')\n    : a;\n/** create Uint8Array */\nconst u8n = (len) => new Uint8Array(len);\nconst u8fr = (buf) => Uint8Array.from(buf);\nconst padh = (n, pad) => n.toString(16).padStart(pad, '0');\nconst bytesToHex = (b) => Array.from(abytes(b))\n    .map((e) => padh(e, 2))\n    .join('');\nconst C = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 }; // ASCII characters\nconst _ch = (ch) => {\n    if (ch >= C._0 && ch <= C._9)\n        return ch - C._0; // '2' => 50-48\n    if (ch >= C.A && ch <= C.F)\n        return ch - (C.A - 10); // 'B' => 66-(65-10)\n    if (ch >= C.a && ch <= C.f)\n        return ch - (C.a - 10); // 'b' => 98-(97-10)\n    return;\n};\nconst hexToBytes = (hex) => {\n    const e = 'hex invalid';\n    if (!isStr(hex))\n        return err(e);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        return err(e);\n    const array = u8n(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        // treat each char as ASCII\n        const n1 = _ch(hex.charCodeAt(hi)); // parse first char, multiply it by 16\n        const n2 = _ch(hex.charCodeAt(hi + 1)); // parse second char\n        if (n1 === undefined || n2 === undefined)\n            return err(e);\n        array[ai] = n1 * 16 + n2; // example: 'A9' => 10*16 + 9\n    }\n    return array;\n};\n/** normalize hex or ui8a to ui8a */\nconst toU8 = (a, len) => abytes(isStr(a) ? hexToBytes(a) : u8fr(abytes(a)), len);\nconst cr = () => globalThis?.crypto; // WebCrypto is available in all modern environments\nconst subtle = () => cr()?.subtle ?? err('crypto.subtle must be defined');\n// prettier-ignore\nconst concatBytes = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + abytes(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\n/** WebCrypto OS-level CSPRNG (random number generator). Will throw when not available. */\nconst randomBytes = (len = L) => {\n    const c = cr();\n    return c.getRandomValues(u8n(len));\n};\nconst big = BigInt;\nconst arange = (n, min, max, msg = 'bad number: out of range') => isBig(n) && min <= n && n < max ? n : err(msg);\n/** modular division */\nconst M = (a, b = P) => {\n    const r = a % b;\n    return r >= 0n ? r : b + r;\n};\nconst modN = (a) => M(a, N);\n/** Modular inversion using eucledian GCD (non-CT). No negative exponent for now. */\n// prettier-ignore\nconst invert = (num, md) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md);\n    let a = M(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) {\n        const q = b / a, r = b % a;\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? M(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst callHash = (name) => {\n    // @ts-ignore\n    const fn = etc[name];\n    if (typeof fn !== 'function')\n        err('hashes.' + name + ' not set');\n    return fn;\n};\nconst apoint = (p) => (p instanceof Point ? p : err('Point expected'));\n// ## End of Helpers\n// -----------------\nconst B256 = 2n ** 256n;\n/** Point in XYZT extended coordinates. */\nclass Point {\n    static BASE;\n    static ZERO;\n    ex;\n    ey;\n    ez;\n    et;\n    constructor(ex, ey, ez, et) {\n        const max = B256;\n        this.ex = arange(ex, 0n, max);\n        this.ey = arange(ey, 0n, max);\n        this.ez = arange(ez, 1n, max);\n        this.et = arange(et, 0n, max);\n        Object.freeze(this);\n    }\n    static fromAffine(p) {\n        return new Point(p.x, p.y, 1n, M(p.x * p.y));\n    }\n    /** RFC8032 5.1.3: Uint8Array to Point. */\n    static fromBytes(hex, zip215 = false) {\n        const d = _d;\n        // Copy array to not mess it up.\n        const normed = u8fr(abytes(hex, L));\n        // adjust first LE byte = last BE byte\n        const lastByte = hex[31];\n        normed[31] = lastByte & ~0x80;\n        const y = bytesToNumLE(normed);\n        // zip215=true:           0 <= y < 2^256\n        // zip215=false, RFC8032: 0 <= y < 2^255-19\n        const max = zip215 ? B256 : P;\n        arange(y, 0n, max);\n        const y2 = M(y * y); // y²\n        const u = M(y2 - 1n); // u=y²-1\n        const v = M(d * y2 + 1n); // v=dy²+1\n        let { isValid, value: x } = uvRatio(u, v); // (uv³)(uv⁷)^(p-5)/8; square root\n        if (!isValid)\n            err('bad point: y not sqrt'); // not square root: bad point\n        const isXOdd = (x & 1n) === 1n; // adjust sign of x coordinate\n        const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n        if (!zip215 && x === 0n && isLastByteOdd)\n            err('bad point: x==0, isLastByteOdd'); // x=0, x_0=1\n        if (isLastByteOdd !== isXOdd)\n            x = M(-x);\n        return new Point(x, y, 1n, M(x * y)); // Z=1, T=xy\n    }\n    /** Checks if the point is valid and on-curve. */\n    assertValidity() {\n        const a = _a;\n        const d = _d;\n        const p = this;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = M(X * X); // X²\n        const Y2 = M(Y * Y); // Y²\n        const Z2 = M(Z * Z); // Z²\n        const Z4 = M(Z2 * Z2); // Z⁴\n        const aX2 = M(X2 * a); // aX²\n        const left = M(Z2 * M(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = M(Z4 + M(d * M(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = M(X * Y);\n        const ZT = M(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return this;\n    }\n    /** Equality check: compare points P&Q. */\n    equals(other) {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2 } = apoint(other); // checks class equality\n        const X1Z2 = M(X1 * Z2);\n        const X2Z1 = M(X2 * Z1);\n        const Y1Z2 = M(Y1 * Z2);\n        const Y2Z1 = M(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() {\n        return this.equals(I);\n    }\n    /** Flip point over y coordinate. */\n    negate() {\n        return new Point(M(-this.ex), this.ey, this.ez, M(-this.et));\n    }\n    /** Point doubling. Complete formula. Cost: `4M + 4S + 1*a + 6add + 1*2`. */\n    double() {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const a = _a;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        const A = M(X1 * X1);\n        const B = M(Y1 * Y1);\n        const C = M(2n * M(Z1 * Z1));\n        const D = M(a * A);\n        const x1y1 = X1 + Y1;\n        const E = M(M(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /** Point addition. Complete formula. Cost: `8M + 1*k + 8add + 1*2`. */\n    add(other) {\n        const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2, et: T2 } = apoint(other); // doesn't check if other on-curve\n        const a = _a;\n        const d = _d;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n        const A = M(X1 * X2);\n        const B = M(Y1 * Y2);\n        const C = M(T1 * d * T2);\n        const D = M(Z1 * Z2);\n        const E = M((X1 + Y1) * (X2 + Y2) - A - B);\n        const F = M(D - C);\n        const G = M(D + C);\n        const H = M(B - a * A);\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /**\n     * Point-by-scalar multiplication. Scalar must be in range 1 <= n < CURVE.n.\n     * Uses {@link wNAF} for base point.\n     * Uses fake point to mitigate side-channel leakage.\n     * @param n scalar by which point is multiplied\n     * @param safe safe mode guards against timing attacks; unsafe mode is faster\n     */\n    multiply(n, safe = true) {\n        if (!safe && (n === 0n || this.is0()))\n            return I;\n        arange(n, 1n, N);\n        if (n === 1n)\n            return this;\n        if (this.equals(G))\n            return wNAF(n).p;\n        // init result point & fake point\n        let p = I;\n        let f = G;\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) {\n            // if bit is present, add to point\n            // if not present, add to fake, for timing safety\n            if (n & 1n)\n                p = p.add(d);\n            else if (safe)\n                f = f.add(d);\n        }\n        return p;\n    }\n    /** Convert point to 2d xy affine point. (X, Y, Z) ∋ (x=X/Z, y=Y/Z) */\n    toAffine() {\n        const { ex: x, ey: y, ez: z } = this;\n        // fast-paths for ZERO point OR Z=1\n        if (this.equals(I))\n            return { x: 0n, y: 1n };\n        const iz = invert(z, P);\n        // (Z * Z^-1) must be 1, otherwise bad math\n        if (M(z * iz) !== 1n)\n            err('invalid inverse');\n        // x = X*Z^-1; y = Y*Z^-1\n        return { x: M(x * iz), y: M(y * iz) };\n    }\n    toBytes() {\n        const { x, y } = this.assertValidity().toAffine();\n        const b = numTo32bLE(y);\n        // store sign in first LE byte\n        b[31] |= x & 1n ? 0x80 : 0;\n        return b;\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    } // encode to hex string\n    clearCofactor() {\n        return this.multiply(big(h), false);\n    }\n    isSmallOrder() {\n        return this.clearCofactor().is0();\n    }\n    isTorsionFree() {\n        // multiply by big number CURVE.n\n        let p = this.multiply(N / 2n, false).double(); // ensures the point is not \"bad\".\n        if (N % 2n)\n            p = p.add(this); // P^(N+1) // P*N == (P*(N/2))*2+P\n        return p.is0();\n    }\n    static fromHex(hex, zip215) {\n        return Point.fromBytes(toU8(hex), zip215);\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/** Generator / base point */\nconst G = new Point(Gx, Gy, 1n, M(Gx * Gy));\n/** Identity / zero point */\nconst I = new Point(0n, 1n, 1n, 0n);\n// Static aliases\nPoint.BASE = G;\nPoint.ZERO = I;\nconst numTo32bLE = (num) => hexToBytes(padh(arange(num, 0n, B256), L2)).reverse();\nconst bytesToNumLE = (b) => big('0x' + bytesToHex(u8fr(abytes(b)).reverse()));\nconst pow2 = (x, power) => {\n    // pow2(x, 4) == x^(2^4)\n    let r = x;\n    while (power-- > 0n) {\n        r *= r;\n        r %= P;\n    }\n    return r;\n};\n// prettier-ignore\nconst pow_2_252_3 = (x) => {\n    const x2 = (x * x) % P; // x^2,       bits 1\n    const b2 = (x2 * x) % P; // x^3,       bits 11\n    const b4 = (pow2(b2, 2n) * b2) % P; // x^(2^4-1), bits 1111\n    const b5 = (pow2(b4, 1n) * x) % P; // x^(2^5-1), bits 11111\n    const b10 = (pow2(b5, 5n) * b5) % P; // x^(2^10)\n    const b20 = (pow2(b10, 10n) * b10) % P; // x^(2^20)\n    const b40 = (pow2(b20, 20n) * b20) % P; // x^(2^40)\n    const b80 = (pow2(b40, 40n) * b40) % P; // x^(2^80)\n    const b160 = (pow2(b80, 80n) * b80) % P; // x^(2^160)\n    const b240 = (pow2(b160, 80n) * b80) % P; // x^(2^240)\n    const b250 = (pow2(b240, 10n) * b10) % P; // x^(2^250)\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P; // < To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n};\nconst RM1 = 0x2b8324804fc1df0b2b4d00993dfbd7a72f431806ad2fe478c4ee1b274a0ea0b0n; // √-1\n// for sqrt comp\n// prettier-ignore\nconst uvRatio = (u, v) => {\n    const v3 = M(v * v * v); // v³\n    const v7 = M(v3 * v3 * v); // v⁷\n    const pow = pow_2_252_3(u * v7).pow_p_5_8; // (uv⁷)^(p-5)/8\n    let x = M(u * v3 * pow); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = M(v * x * x); // vx²\n    const root1 = x; // First root candidate\n    const root2 = M(x * RM1); // Second root candidate; RM1 is √-1\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === M(-u); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === M(-u * RM1); // There is no valid root, vx² = -u√-1\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((M(x) & 1n) === 1n)\n        x = M(-x); // edIsNegative\n    return { isValid: useRoot1 || useRoot2, value: x };\n};\n// N == L, just weird naming\nconst modL_LE = (hash) => modN(bytesToNumLE(hash)); // modulo L; but little-endian\nconst sha512a = (...m) => etc.sha512Async(...m); // Async SHA512\nconst sha512s = (...m) => callHash('sha512Sync')(...m);\n// RFC8032 5.1.5\nconst hash2extK = (hashed) => {\n    // slice creates a copy, unlike subarray\n    const head = hashed.slice(0, L);\n    head[0] &= 248; // Clamp bits: 0b1111_1000\n    head[31] &= 127; // 0b0111_1111\n    head[31] |= 64; // 0b0100_0000\n    const prefix = hashed.slice(L, L2); // private key \"prefix\"\n    const scalar = modL_LE(head); // modular division over curve order\n    const point = G.multiply(scalar); // public key point\n    const pointBytes = point.toBytes(); // point serialized to Uint8Array\n    return { head, prefix, scalar, point, pointBytes };\n};\n// RFC8032 5.1.5; getPublicKey async, sync. Hash priv key and extract point.\nconst getExtendedPublicKeyAsync = (priv) => sha512a(toU8(priv, L)).then(hash2extK);\nconst getExtendedPublicKey = (priv) => hash2extK(sha512s(toU8(priv, L)));\n/** Creates 32-byte ed25519 public key from 32-byte private key. Async. */\nconst getPublicKeyAsync = (priv) => getExtendedPublicKeyAsync(priv).then((p) => p.pointBytes);\n/** Creates 32-byte ed25519 public key from 32-byte private key. To use, set `etc.sha512Sync` first. */\nconst getPublicKey = (priv) => getExtendedPublicKey(priv).pointBytes;\nconst hashFinishA = (res) => sha512a(res.hashable).then(res.finish);\nconst hashFinishS = (res) => res.finish(sha512s(res.hashable));\nconst _sign = (e, rBytes, msg) => {\n    // sign() shared code\n    const { pointBytes: P, scalar: s } = e;\n    const r = modL_LE(rBytes); // r was created outside, reduce it modulo L\n    const R = G.multiply(r).toBytes(); // R = [r]B\n    const hashable = concatBytes(R, P, msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        const S = modN(r + modL_LE(hashed) * s); // S = (r + k * s) mod L; 0 <= s < l\n        return abytes(concatBytes(R, numTo32bLE(S)), L2); // 64-byte sig: 32b R.x + 32b LE(S)\n    };\n    return { hashable, finish };\n};\n/**\n * Signs message (NOT message hash) using private key. Async.\n * Follows RFC8032 5.1.6.\n */\nconst signAsync = async (msg, privKey) => {\n    const m = toU8(msg);\n    const e = await getExtendedPublicKeyAsync(privKey);\n    const rBytes = await sha512a(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishA(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\n/**\n * Signs message (NOT message hash) using private key. To use, set `hashes.sha512` first.\n * Follows RFC8032 5.1.6.\n */\nconst sign = (msg, privKey) => {\n    const m = toU8(msg);\n    const e = getExtendedPublicKey(privKey);\n    const rBytes = sha512s(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishS(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst veriOpts = { zip215: true };\nconst _verify = (sig, msg, pub, opts = veriOpts) => {\n    sig = toU8(sig, L2); // Signature hex str/Bytes, must be 64 bytes\n    msg = toU8(msg); // Message hex str/Bytes\n    pub = toU8(pub, L);\n    const { zip215 } = opts; // switch between zip215 and rfc8032 verif\n    let A;\n    let R;\n    let s;\n    let SB;\n    let hashable = Uint8Array.of();\n    try {\n        A = Point.fromHex(pub, zip215); // public key A decoded\n        R = Point.fromHex(sig.slice(0, L), zip215); // 0 <= R < 2^256: ZIP215 R can be >= P\n        s = bytesToNumLE(sig.slice(L, L2)); // Decode second half as an integer S\n        SB = G.multiply(s, false); // in the range 0 <= s < L\n        hashable = concatBytes(R.toBytes(), A.toBytes(), msg); // dom2(F, C) || R || A || PH(M)\n    }\n    catch (error) { }\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        if (SB == null)\n            return false; // false if try-catch catched an error\n        if (!zip215 && A.isSmallOrder())\n            return false; // false for SBS: Strongly Binding Signature\n        const k = modL_LE(hashed); // decode in little-endian, modulo L\n        const RkA = R.add(A.multiply(k, false)); // [8]R + [8][k]A'\n        return RkA.add(SB.negate()).clearCofactor().is0(); // [8][S]B = [8]R + [8][k]A'\n    };\n    return { hashable, finish };\n};\n/** Verifies signature on message and public key. Async. Follows RFC8032 5.1.7. */\nconst verifyAsync = async (s, m, p, opts = veriOpts) => hashFinishA(_verify(s, m, p, opts));\n/** Verifies signature on message and public key. To use, set `hashes.sha512` first. Follows RFC8032 5.1.7. */\nconst verify = (s, m, p, opts = veriOpts) => hashFinishS(_verify(s, m, p, opts));\n/** Math, hex, byte helpers. Not in `utils` because utils share API with noble-curves. */\nconst etc = {\n    sha512Async: async (...messages) => {\n        const s = subtle();\n        const m = concatBytes(...messages);\n        return u8n(await s.digest('SHA-512', m.buffer));\n    },\n    sha512Sync: undefined,\n    bytesToHex: bytesToHex,\n    hexToBytes: hexToBytes,\n    concatBytes: concatBytes,\n    mod: M,\n    invert: invert,\n    randomBytes: randomBytes,\n};\n/** ed25519-specific key utilities. */\nconst utils = {\n    getExtendedPublicKeyAsync: getExtendedPublicKeyAsync,\n    getExtendedPublicKey: getExtendedPublicKey,\n    randomPrivateKey: () => randomBytes(L),\n    precompute: (w = 8, p = G) => {\n        p.multiply(3n);\n        w;\n        return p;\n    }, // no-op\n};\n// ## Precomputes\n// --------------\nconst W = 8; // W is window size\nconst scalarBits = 256;\nconst pwindows = Math.ceil(scalarBits / W) + 1; // 33 for W=8\nconst pwindowSize = 2 ** (W - 1); // 128 for W=8\nconst precompute = () => {\n    const points = [];\n    let p = G;\n    let b = p;\n    for (let w = 0; w < pwindows; w++) {\n        b = p;\n        points.push(b);\n        for (let i = 1; i < pwindowSize; i++) {\n            b = b.add(p);\n            points.push(b);\n        } // i=1, bc we skip 0\n        p = b.double();\n    }\n    return points;\n};\nlet Gpows = undefined; // precomputes for base point G\n// const-time negate\nconst ctneg = (cnd, p) => {\n    const n = p.negate();\n    return cnd ? n : p;\n};\n/**\n * Precomputes give 12x faster getPublicKey(), 10x sign(), 2x verify() by\n * caching multiples of G (base point). Cache is stored in 32MB of RAM.\n * Any time `G.multiply` is done, precomputes are used.\n * Not used for getSharedSecret, which instead multiplies random pubkey `P.multiply`.\n *\n * w-ary non-adjacent form (wNAF) precomputation method is 10% slower than windowed method,\n * but takes 2x less RAM. RAM reduction is possible by utilizing `.subtract`.\n *\n * !! Precomputes can be disabled by commenting-out call of the wNAF() inside Point#multiply().\n */\nconst wNAF = (n) => {\n    const comp = Gpows || (Gpows = precompute());\n    let p = I;\n    let f = G; // f must be G, or could become I in the end\n    const pow_2_w = 2 ** W; // 256 for W=8\n    const maxNum = pow_2_w; // 256 for W=8\n    const mask = big(pow_2_w - 1); // 255 for W=8 == mask 0b11111111\n    const shiftBy = big(W); // 8 for W=8\n    for (let w = 0; w < pwindows; w++) {\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > pwindowSize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off = w * pwindowSize;\n        const offF = off; // offsets, evaluate both\n        const offP = off + Math.abs(wbits) - 1;\n        const isEven = w % 2 !== 0; // conditions, evaluate both\n        const isNeg = wbits < 0;\n        if (wbits === 0) {\n            // off == I: can't add it. Adding random offF instead.\n            f = f.add(ctneg(isEven, comp[offF])); // bits are 0: add garbage to fake point\n        }\n        else {\n            p = p.add(ctneg(isNeg, comp[offP])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n};\n// !! Remove the export to easily use in REPL / browser console\nexport { ed25519_CURVE as CURVE, etc, Point as ExtendedPoint, getPublicKey, getPublicKeyAsync, Point, sign, signAsync, utils, verify, verifyAsync, };\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, isBytes as isBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, bytesToUtf8, concatBytes, hexToBytes, isBytes, randomBytes, utf8ToBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// tmp name until v2\nexport function _abool2(value, title = '') {\n    if (typeof value !== 'boolean') {\n        const prefix = title && `\"${title}\"`;\n        throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n    }\n    return value;\n}\n// tmp name until v2\n/** Asserts something is Uint8Array. */\nexport function _abytes2(value, length, title = '') {\n    const bytes = isBytes_(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : '';\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n    }\n    return value;\n}\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes_(bytes);\n    return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'secret key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes_(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes_(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as utf8ToBytes for ASCII or throws.\n */\nexport function asciiToBytes(ascii) {\n    return Uint8Array.from(ascii, (c, i) => {\n        const charCode = c.charCodeAt(0);\n        if (c.length !== 1 || charCode > 127) {\n            throw new Error(`string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`);\n        }\n        return charCode;\n    });\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const u8of = (byte) => Uint8Array.of(byte); // another shortcut\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n(0)) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes_(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\nexport function isHash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(object, fields, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n    Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, anumber, bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, } from \"../utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _7n = /* @__PURE__ */ BigInt(7);\n// prettier-ignore\nconst _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction assertIsSquare(Fp, root, n) {\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    assertIsSquare(Fp, root, n);\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    assertIsSquare(Fp, root, n);\n    return root;\n}\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P) {\n    const Fp_ = Field(P);\n    const tn = tonelliShanks(P);\n    const c1 = tn(Fp_, Fp_.neg(Fp_.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    const c2 = tn(Fp_, c1); //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    const c3 = tn(Fp_, Fp_.neg(c1)); //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    const c4 = (P + _7n) / _16n; //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    return (Fp, n) => {\n        let tv1 = Fp.pow(n, c4); //  1. tv1 = x^c4\n        let tv2 = Fp.mul(tv1, c1); //  2. tv2 = c1 * tv1\n        const tv3 = Fp.mul(tv1, c2); //  3. tv3 = c2 * tv1\n        const tv4 = Fp.mul(tv1, c3); //  4. tv4 = c3 * tv1\n        const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n        const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n        tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n        const root = Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n        assertIsSquare(Fp, root, n);\n        return root;\n    };\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < _3n)\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n    if (P % _16n === _9n)\n        return sqrt9mod16(P);\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    _validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLenOrOpts, // TODO: use opts only in v2?\nisLE = false, opts = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength = undefined;\n    let _sqrt = undefined;\n    let modFromBytes = false;\n    let allowedLengths = undefined;\n    if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n        if (opts.sqrt || isLE)\n            throw new Error('cannot specify opts in two arguments');\n        const _opts = bitLenOrOpts;\n        if (_opts.BITS)\n            _nbitLength = _opts.BITS;\n        if (_opts.sqrt)\n            _sqrt = _opts.sqrt;\n        if (typeof _opts.isLE === 'boolean')\n            isLE = _opts.isLE;\n        if (typeof _opts.modFromBytes === 'boolean')\n            modFromBytes = _opts.modFromBytes;\n        allowedLengths = _opts.allowedLengths;\n    }\n    else {\n        if (typeof bitLenOrOpts === 'number')\n            _nbitLength = bitLenOrOpts;\n        if (opts.sqrt)\n            _sqrt = opts.sqrt;\n    }\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        allowedLengths: allowedLengths,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        // is valid and invertible\n        isValidNot0: (num) => !f.is0(num) && f.isValid(num),\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: _sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes, skipValidation = true) => {\n            if (allowedLengths) {\n                if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n                    throw new Error('Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length);\n                }\n                const padded = new Uint8Array(BYTES);\n                // isLE add 0 to right, !isLE to the left.\n                padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n                bytes = padded;\n            }\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n            if (modFromBytes)\n                scalar = mod(scalar, ORDER);\n            if (!skipValidation)\n                if (!f.isValid(scalar))\n                    throw new Error('invalid field element: outside of range 0..ORDER');\n            // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n            // protocol may allow non-reduced scalar that reduced later or changed some other way.\n            return scalar;\n        },\n        // TODO: we don't need it here, move out to separate fn\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // We can't move this out because Fp6, Fp12 implement it\n        // and it's unclear what to return in there.\n        cmov: (a, b, c) => (c ? b : a),\n    });\n    return Object.freeze(f);\n}\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from \"../utils.js\";\nimport { Field, FpInvertBatch, nLength, validateField } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, points) {\n    const invertedZs = FpInvertBatch(c.Fp, points.map((p) => p.Z));\n    return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    // To disable precomputes:\n    // return 1;\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF {\n    // Parametrized with a given Point class (not individual point)\n    constructor(Point, bits) {\n        this.BASE = Point.BASE;\n        this.ZERO = Point.ZERO;\n        this.Fn = Point.Fn;\n        this.bits = bits;\n    }\n    // non-const time multiplication ladder\n    _unsafeLadder(elm, n, p = this.ZERO) {\n        let d = elm;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param point Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(point, W) {\n        const { windows, windowSize } = calcWOpts(W, this.bits);\n        const points = [];\n        let p = point;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            // i=1, bc we skip 0\n            for (let i = 1; i < windowSize; i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * More compact implementation:\n     * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W, precomputes, n) {\n        // Scalar should be smaller than field order\n        if (!this.Fn.isValid(n))\n            throw new Error('invalid scalar');\n        // Accumulators\n        let p = this.ZERO;\n        let f = this.BASE;\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n            const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // bits are 0: add garbage to fake point\n                // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                f = f.add(negateCt(isNegF, precomputes[offsetF]));\n            }\n            else {\n                // bits are 1: add to result point\n                p = p.add(negateCt(isNeg, precomputes[offset]));\n            }\n        }\n        assert0(n);\n        // Return both real and fake points: JIT won't eliminate f.\n        // At this point there is a way to F be infinity-point even if p is not,\n        // which makes it less const-time: around 1 bigint multiply.\n        return { p, f };\n    }\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W, precomputes, n, acc = this.ZERO) {\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            if (n === _0n)\n                break; // Early-exit, skip 0 value\n            const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // Window bits are 0: skip processing.\n                // Move to next window.\n                continue;\n            }\n            else {\n                const item = precomputes[offset];\n                acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n            }\n        }\n        assert0(n);\n        return acc;\n    }\n    getPrecomputes(W, point, transform) {\n        // Calculate precomputes on a first run, reuse them after\n        let comp = pointPrecomputes.get(point);\n        if (!comp) {\n            comp = this.precomputeWindow(point, W);\n            if (W !== 1) {\n                // Doing transform outside of if brings 15% perf hit\n                if (typeof transform === 'function')\n                    comp = transform(comp);\n                pointPrecomputes.set(point, comp);\n            }\n        }\n        return comp;\n    }\n    cached(point, scalar, transform) {\n        const W = getW(point);\n        return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n    }\n    unsafe(point, scalar, transform, prev) {\n        const W = getW(point);\n        if (W === 1)\n            return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n        return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n    }\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    createCache(P, W) {\n        validateW(W, this.bits);\n        pointWindowSizes.set(P, W);\n        pointPrecomputes.delete(P);\n    }\n    hasCache(elm) {\n        return getW(elm) !== 1;\n    }\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(Point, point, k1, k2) {\n    let acc = point;\n    let p1 = Point.ZERO;\n    let p2 = Point.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\n// TODO: remove\n/** @deprecated */\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nfunction createField(order, field, isLE) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order, { isLE });\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields(type, CURVE, curveOpts = {}, FpFnLE) {\n    if (FpFnLE === undefined)\n        FpFnLE = type === 'edwards';\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n    const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    CURVE = Object.freeze(Object.assign({}, CURVE));\n    return { CURVE, Fp, Fn };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bytesToHex, bytesToNumberLE, concatBytes, copyBytes, ensureBytes, isBytes, memoized, notImplemented, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field } from \"./modular.js\";\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\nfunction isEdValidXY(Fp, CURVE, x, y) {\n    const x2 = Fp.sqr(x);\n    const y2 = Fp.sqr(y);\n    const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n    const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n    return Fp.eql(left, right);\n}\nexport function edwards(params, extraOpts = {}) {\n    const validated = _createCurveFields('edwards', params, extraOpts, extraOpts.FpFnLE);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor } = CURVE;\n    _validateObject(extraOpts, {}, { uvRatio: 'function' });\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n    const modP = (n) => Fp.create(n); // Function overrides\n    // sqrt(u/v)\n    const uvRatio = extraOpts.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    // Validate whether the passed curve params are valid.\n    // equation ax² + y² = 1 + dx²y² should work for generator point.\n    if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    /**\n     * Asserts coordinate is valid: 0 <= n < MASK.\n     * Coordinates >= Fp.ORDER are allowed for zip215.\n     */\n    function acoord(title, n, banZero = false) {\n        const min = banZero ? _1n : _0n;\n        aInRange('coordinate ' + title, n, min, MASK);\n        return n;\n    }\n    function aextpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(Z); // 8 was chosen arbitrarily\n        const x = modP(X * iz);\n        const y = modP(Y * iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { X, Y, Z, T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (X, Y, Z, T) ∋ (x=X/Z, y=Y/Z, T=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(X, Y, Z, T) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y);\n            this.Z = acoord('z', Z, true);\n            this.T = acoord('t', T);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            acoord('x', x);\n            acoord('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        // Uses algo from RFC8032 5.1.3.\n        static fromBytes(bytes, zip215 = false) {\n            const len = Fp.BYTES;\n            const { a, d } = CURVE;\n            bytes = copyBytes(abytes(bytes, len, 'point'));\n            abool(zip215, 'zip215');\n            const normed = copyBytes(bytes); // copy again, we'll manipulate it\n            const lastByte = bytes[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            aInRange('point.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('bad point: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('bad point: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromHex(bytes, zip215 = false) {\n            return Point.fromBytes(ensureBytes('point', bytes), zip215);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_2n); // random number\n            return this;\n        }\n        // Useful in fromAffine() - not for fromBytes(), which always created valid points.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            aextpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.X), this.Y, this.Z, modP(-this.T));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            aextpoint(other);\n            const { a, d } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1, T: T1 } = this;\n            const { X: X2, Y: Y2, Z: Z2, T: T2 } = other;\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            // 1 <= scalar < L\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: expected 1 <= sc < curve.n');\n            const { p, f } = wnaf.cached(this, scalar, (p) => normalizeZ(Point, p));\n            return normalizeZ(Point, [p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            // 0 <= scalar < L\n            if (!Fn.isValid(scalar))\n                throw new Error('invalid scalar: expected 0 <= sc < curve.n');\n            if (scalar === _0n)\n                return Point.ZERO;\n            if (this.is0() || scalar === _1n)\n                return this;\n            return wnaf.unsafe(this, scalar, (p) => normalizeZ(Point, p), acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafe(this, CURVE.n).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        clearCofactor() {\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes() {\n            const { x, y } = this.toAffine();\n            // Fp.toBytes() allows non-canonical encoding of y (>= p).\n            const bytes = Fp.toBytes(y);\n            // Each y has 2 valid points: (x, y), (x,-y).\n            // When compressing, it's enough to store y and use the last byte to encode sign of x\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0;\n            return bytes;\n        }\n        toHex() {\n            return bytesToHex(this.toBytes());\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get ex() {\n            return this.X;\n        }\n        get ey() {\n            return this.Y;\n        }\n        get ez() {\n            return this.Z;\n        }\n        get et() {\n            return this.T;\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        toRawBytes() {\n            return this.toBytes();\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    // zero / infinity / identity point\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const wnaf = new wNAF(Point, Fn.BITS);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n/**\n * Base class for prime-order points like Ristretto255 and Decaf448.\n * These points eliminate cofactor issues by representing equivalence classes\n * of Edwards curve points.\n */\nexport class PrimeEdwardsPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    // Static methods that must be implemented by subclasses\n    static fromBytes(_bytes) {\n        notImplemented();\n    }\n    static fromHex(_hex) {\n        notImplemented();\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    // Common implementations\n    clearCofactor() {\n        // no-op for prime-order groups\n        return this;\n    }\n    assertValidity() {\n        this.ep.assertValidity();\n    }\n    toAffine(invertedZ) {\n        return this.ep.toAffine(invertedZ);\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    isTorsionFree() {\n        return true;\n    }\n    isSmallOrder() {\n        return false;\n    }\n    add(other) {\n        this.assertSame(other);\n        return this.init(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        this.assertSame(other);\n        return this.init(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return this.init(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return this.init(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return this.init(this.ep.double());\n    }\n    negate() {\n        return this.init(this.ep.negate());\n    }\n    precompute(windowSize, isLazy) {\n        return this.init(this.ep.precompute(windowSize, isLazy));\n    }\n    /** @deprecated use `toBytes` */\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point, cHash, eddsaOpts = {}) {\n    if (typeof cHash !== 'function')\n        throw new Error('\"hash\" function param is required');\n    _validateObject(eddsaOpts, {}, {\n        adjustScalarBytes: 'function',\n        randomBytes: 'function',\n        domain: 'function',\n        prehash: 'function',\n        mapToCurve: 'function',\n    });\n    const { prehash } = eddsaOpts;\n    const { BASE, Fp, Fn } = Point;\n    const randomBytes = eddsaOpts.randomBytes || randomBytesWeb;\n    const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes) => bytes);\n    const domain = eddsaOpts.domain ||\n        ((data, ctx, phflag) => {\n            abool(phflag, 'phflag');\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return Fn.create(bytesToNumberLE(hash)); // Not Fn.fromBytes: it has length limit\n    }\n    // Get the hashed private scalar per RFC8032 5.1.5\n    function getPrivateScalar(key) {\n        const len = lengths.secretKey;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        return { head, prefix, scalar };\n    }\n    /** Convenience method that creates public key from scalar. RFC8032 5.1.5 */\n    function getExtendedPublicKey(secretKey) {\n        const { head, prefix, scalar } = getPrivateScalar(secretKey);\n        const point = BASE.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toBytes();\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    /** Calculates EdDSA pub key. RFC8032 5.1.5. */\n    function getPublicKey(secretKey) {\n        return getExtendedPublicKey(secretKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = Uint8Array.of(), ...msgs) {\n        const msg = concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, secretKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(secretKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = BASE.multiply(r).toBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = Fn.create(r + k * scalar); // S = (r + k * s) mod L\n        if (!Fn.isValid(s))\n            throw new Error('sign failed: invalid s'); // 0 <= s < L\n        const rs = concatBytes(R, Fn.toBytes(s));\n        return abytes(rs, lengths.signature, 'result');\n    }\n    // verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\n    const verifyOpts = { zip215: true };\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = lengths.signature;\n        sig = ensureBytes('signature', sig, len);\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, lengths.publicKey);\n        if (zip215 !== undefined)\n            abool(zip215, 'zip215');\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const mid = len / 2;\n        const r = sig.subarray(0, mid);\n        const s = bytesToNumberLE(sig.subarray(mid, len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromBytes(publicKey, zip215);\n            R = Point.fromBytes(r, zip215);\n            SB = BASE.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false; // zip215 allows public keys of small order\n        const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().is0();\n    }\n    const _size = Fp.BYTES; // 32 for ed25519, 57 for ed448\n    const lengths = {\n        secretKey: _size,\n        publicKey: _size,\n        signature: 2 * _size,\n        seed: _size,\n    };\n    function randomSecretKey(seed = randomBytes(lengths.seed)) {\n        return abytes(seed, lengths.seed, 'seed');\n    }\n    function keygen(seed) {\n        const secretKey = utils.randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    function isValidSecretKey(key) {\n        return isBytes(key) && key.length === Fn.BYTES;\n    }\n    function isValidPublicKey(key, zip215) {\n        try {\n            return !!Point.fromBytes(key, zip215);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    const utils = {\n        getExtendedPublicKey,\n        randomSecretKey,\n        isValidSecretKey,\n        isValidPublicKey,\n        /**\n         * Converts ed public key to x public key. Uses formula:\n         * - ed25519:\n         *   - `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n         *   - `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n         * - ed448:\n         *   - `(u, v) = ((y-1)/(y+1), sqrt(156324)*u/x)`\n         *   - `(x, y) = (sqrt(156324)*u/v, (1+u)/(1-u))`\n         */\n        toMontgomery(publicKey) {\n            const { y } = Point.fromBytes(publicKey);\n            const size = lengths.publicKey;\n            const is25519 = size === 32;\n            if (!is25519 && size !== 57)\n                throw new Error('only defined for 25519 and 448');\n            const u = is25519 ? Fp.div(_1n + y, _1n - y) : Fp.div(y - _1n, y + _1n);\n            return Fp.toBytes(u);\n        },\n        toMontgomerySecret(secretKey) {\n            const size = lengths.secretKey;\n            abytes(secretKey, size);\n            const hashed = cHash(secretKey.subarray(0, size));\n            return adjustScalarBytes(hashed).subarray(0, size);\n        },\n        /** @deprecated */\n        randomPrivateKey: randomSecretKey,\n        /** @deprecated */\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        sign,\n        verify,\n        utils,\n        Point,\n        lengths,\n    });\n}\nfunction _eddsa_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        d: c.d,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength, true);\n    const curveOpts = { Fp, Fn, uvRatio: c.uvRatio };\n    const eddsaOpts = {\n        randomBytes: c.randomBytes,\n        adjustScalarBytes: c.adjustScalarBytes,\n        domain: c.domain,\n        prehash: c.prehash,\n        mapToCurve: c.mapToCurve,\n    };\n    return { CURVE, curveOpts, hash: c.hash, eddsaOpts };\n}\nfunction _eddsa_new_output_to_legacy(c, eddsa) {\n    const Point = eddsa.Point;\n    const legacy = Object.assign({}, eddsa, {\n        ExtendedPoint: Point,\n        CURVE: c,\n        nBitLength: Point.Fn.BITS,\n        nByteLength: Point.Fn.BYTES,\n    });\n    return legacy;\n}\n// TODO: remove. Use eddsa\nexport function twistedEdwards(c) {\n    const { CURVE, curveOpts, hash, eddsaOpts } = _eddsa_legacy_opts_to_new(c);\n    const Point = edwards(CURVE, curveOpts);\n    const EDDSA = eddsa(Point, hash, eddsaOpts);\n    return _eddsa_new_output_to_legacy(c, EDDSA);\n}\n//# sourceMappingURL=edwards.js.map","import { _validateObject, abytes, bytesToNumberBE, concatBytes, isBytes, isHash, utf8ToBytes, } from \"../utils.js\";\nimport { FpInvertBatch, mod } from \"./modular.js\";\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    anum(value);\n    anum(length);\n    if (value < 0 || value >= 1 << (8 * length))\n        throw new Error('invalid I2OSP input: ' + value);\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\nfunction normDST(DST) {\n    if (!isBytes(DST) && typeof DST !== 'string')\n        throw new Error('DST must be Uint8Array or string');\n    return typeof DST === 'string' ? utf8ToBytes(DST) : DST;\n}\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (lenInBytes > 65535 || ell > 255)\n        throw new Error('expand_message_xmd: invalid lenInBytes');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    _validateObject(options, {\n        p: 'bigint',\n        m: 'number',\n        k: 'number',\n        hash: 'function',\n    });\n    const { p, k, m, hash, expand, DST } = options;\n    if (!isHash(options.hash))\n        throw new Error('expected valid hash');\n    abytes(msg);\n    anum(count);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const coeff = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xn, xd, yn, yd] = coeff.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        // 6.6.3\n        // Exceptional cases of iso_map are inputs that cause the denominator of\n        // either rational function to evaluate to zero; such cases MUST return\n        // the identity point on E.\n        const [xd_inv, yd_inv] = FpInvertBatch(field, [xd, yd], true);\n        x = field.mul(xn, xd_inv); // xNum / xDen\n        y = field.mul(y, field.mul(yn, yd_inv)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport const _DST_scalar = utf8ToBytes('HashToScalar-');\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. See {@link H2CHasher}. */\nexport function createHasher(Point, mapToCurve, defaults) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    function map(num) {\n        return Point.fromAffine(mapToCurve(num));\n    }\n    function clear(initial) {\n        const P = initial.clearCofactor();\n        if (P.equals(Point.ZERO))\n            return Point.ZERO; // zero will throw in assert\n        P.assertValidity();\n        return P;\n    }\n    return {\n        defaults,\n        hashToCurve(msg, options) {\n            const opts = Object.assign({}, defaults, options);\n            const u = hash_to_field(msg, 2, opts);\n            const u0 = map(u[0]);\n            const u1 = map(u[1]);\n            return clear(u0.add(u1));\n        },\n        encodeToCurve(msg, options) {\n            const optsDst = defaults.encodeDST ? { DST: defaults.encodeDST } : {};\n            const opts = Object.assign({}, defaults, optsDst, options);\n            const u = hash_to_field(msg, 1, opts);\n            const u0 = map(u[0]);\n            return clear(u0);\n        },\n        /** See {@link H2CHasher} */\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error('expected array of bigints');\n            return clear(map(scalars));\n        },\n        // hash_to_scalar can produce 0: https://www.rfc-editor.org/errata/eid8393\n        // RFC 9380, draft-irtf-cfrg-bbs-signatures-08\n        hashToScalar(msg, options) {\n            // @ts-ignore\n            const N = Point.Fn.ORDER;\n            const opts = Object.assign({}, defaults, { p: N, m: 1, DST: _DST_scalar }, options);\n            return hash_to_field(msg, 1, opts)[0][0];\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, utf8ToBytes } from '@noble/hashes/utils.js';\nimport { pippenger } from \"./abstract/curve.js\";\nimport { PrimeEdwardsPoint, twistedEdwards, } from \"./abstract/edwards.js\";\nimport { _DST_scalar, createHasher, expand_message_xmd, } from \"./abstract/hash-to-curve.js\";\nimport { Field, FpInvertBatch, FpSqrtEven, isNegativeLE, mod, pow2, } from \"./abstract/modular.js\";\nimport { montgomery } from \"./abstract/montgomery.js\";\nimport { bytesToNumberLE, ensureBytes, equalBytes } from \"./utils.js\";\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n// P = 2n**255n-19n\nconst ed25519_CURVE_p = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed');\n// N = 2n**252n + 27742317777372353535851937790883648493n\n// a = Fp.create(BigInt(-1))\n// d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\nconst ed25519_CURVE = /* @__PURE__ */ (() => ({\n    p: ed25519_CURVE_p,\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n}))();\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ed25519_CURVE_p;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ed25519_CURVE_p;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nconst Fp = /* @__PURE__ */ (() => Field(ed25519_CURVE.p, { isLE: true }))();\nconst Fn = /* @__PURE__ */ (() => Field(ed25519_CURVE.n, { isLE: true }))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    ...ed25519_CURVE,\n    Fp,\n    hash: sha512,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const { secretKey, publicKey } = ed25519.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\n/** Context of ed25519. Uses context for domain separation. */\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\n/** Prehashed version of ed25519. Accepts already-hashed messages in sign() and verify(). */\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomSecretKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => {\n    const P = Fp.ORDER;\n    return montgomery({\n        P,\n        type: 'x25519',\n        powPminus2: (x) => {\n            // x^(p-2) aka x^(2^255-21)\n            const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n            return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n        },\n        adjustScalarBytes,\n    });\n})();\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n    return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\n/** Hashing to ed25519 points / field. RFC 9380 methods. */\nexport const ed25519_hasher = /* @__PURE__ */ (() => createHasher(ed25519.Point, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: ed25519_CURVE_p,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.Point.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = (n) => Fp.create(n);\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\nfunction ristretto255_map(bytes) {\n    abytes(bytes, 64);\n    const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new _RistrettoPoint(R1.add(R2));\n}\n/**\n * Wrapper over Edwards Point for ristretto255.\n *\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass _RistrettoPoint extends PrimeEdwardsPoint {\n    constructor(ep) {\n        super(ep);\n    }\n    static fromAffine(ap) {\n        return new _RistrettoPoint(ed25519.Point.fromAffine(ap));\n    }\n    assertSame(other) {\n        if (!(other instanceof _RistrettoPoint))\n            throw new Error('RistrettoPoint expected');\n    }\n    init(ep) {\n        return new _RistrettoPoint(ep);\n    }\n    /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n    static hashToCurve(hex) {\n        return ristretto255_map(ensureBytes('ristrettoHash', hex, 64));\n    }\n    static fromBytes(bytes) {\n        abytes(bytes, 32);\n        const { a, d } = ed25519_CURVE;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const s = bytes255ToNumberLE(bytes);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(Fp.toBytes(s), bytes) || isNegativeLE(s, P))\n            throw new Error('invalid ristretto255 encoding 1');\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error('invalid ristretto255 encoding 2');\n        return new _RistrettoPoint(new ed25519.Point(x, y, _1n, t));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        return _RistrettoPoint.fromBytes(ensureBytes('ristrettoHex', hex, 32));\n    }\n    static msm(points, scalars) {\n        return pippenger(_RistrettoPoint, ed25519.Point.Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n        let { X, Y, Z, T } = this.ep;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n        const u2 = mod(X * Y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * T); // 6\n        let D; // 7\n        if (isNegativeLE(T * zInv, P)) {\n            let _x = mod(Y * SQRT_M1);\n            let _y = mod(X * SQRT_M1);\n            X = _x;\n            Y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(X * zInv, P))\n            Y = mod(-Y); // 9\n        let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return Fp.toBytes(s); // 11\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n        this.assertSame(other);\n        const { X: X1, Y: Y1 } = this.ep;\n        const { X: X2, Y: Y2 } = other.ep;\n        const mod = (n) => Fp.create(n);\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    is0() {\n        return this.equals(_RistrettoPoint.ZERO);\n    }\n}\n// Do NOT change syntax: the following gymnastics is done,\n// because typescript strips comments, which makes bundlers disable tree-shaking.\n// prettier-ignore\n_RistrettoPoint.BASE = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.BASE))();\n// prettier-ignore\n_RistrettoPoint.ZERO = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.ZERO))();\n// prettier-ignore\n_RistrettoPoint.Fp = \n/* @__PURE__ */ (() => Fp)();\n// prettier-ignore\n_RistrettoPoint.Fn = \n/* @__PURE__ */ (() => Fn)();\nexport const ristretto255 = { Point: _RistrettoPoint };\n/** Hashing to ristretto255 points / field. RFC 9380 methods. */\nexport const ristretto255_hasher = {\n    hashToCurve(msg, options) {\n        const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n        const xmd = expand_message_xmd(msg, DST, 64, sha512);\n        return ristretto255_map(xmd);\n    },\n    hashToScalar(msg, options = { DST: _DST_scalar }) {\n        const xmd = expand_message_xmd(msg, options.DST, 64, sha512);\n        return Fn.create(bytesToNumberLE(xmd));\n    },\n};\n// export const ristretto255_oprf: OPRF = createORPF({\n//   name: 'ristretto255-SHA512',\n//   Point: RistrettoPoint,\n//   hash: sha512,\n//   hashToGroup: ristretto255_hasher.hashToCurve,\n//   hashToScalar: ristretto255_hasher.hashToScalar,\n// });\n/**\n * Weird / bogus points, useful for debugging.\n * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n * ⟨T⟩ = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n */\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    return ed25519.utils.toMontgomery(ensureBytes('pub', edwardsPub));\n}\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport const edwardsToMontgomery = edwardsToMontgomeryPub;\n/** @deprecated use `ed25519.utils.toMontgomerySecret` */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    return ed25519.utils.toMontgomerySecret(ensureBytes('pub', edwardsPriv));\n}\n/** @deprecated use `ristretto255.Point` */\nexport const RistrettoPoint = _RistrettoPoint;\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => ed25519_hasher.hashToCurve)();\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => ed25519_hasher.encodeToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToRistretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hash_to_ristretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n//# sourceMappingURL=ed25519.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR = 10;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS = 2800011;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT = 5663019;\nvar SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT = 5663020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD = 8100003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED = 9900004;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS]: \"$putativeOffCurveAddress is not a base58-encoded off-curve address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED]: \"Invariant violation: This data publisher does not publish to the channel named `$channelName`. Supported channels include $supportedChannelNames.\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR]: \"$message\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN]: \"The notification name must end in 'Notifications' and the API must supply a subscription plan creator function for the notification '$notificationName'.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD]: \"Could not find an API plan for RPC method: `$method`\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `TransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-(2n ** 63n), (2n ** 63n) - 1]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT]: \"Transaction size $transactionSize exceeds limit of $transactionSizeLimit bytes\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT]: \"Transaction failed when it was simulated in order to estimate the compute unit consumption. The compute unit estimate provided is for a transaction that failed when simulated and may not be representative of the compute units this transaction would consume if successful. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? (\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `${context[variableName]}`\n        ) : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  /**\n   * Indicates the root cause of this {@link SolanaError}, if any.\n   *\n   * For example, a transaction error might have an instruction error as its root cause. In this\n   * case, you will be able to access the instruction error on the transaction error as `cause`.\n   */\n  cause = this.cause;\n  /**\n   * Contains context that can assist in understanding or recovering from a {@link SolanaError}.\n   */\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  const numberIndex = Number(index);\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index: numberIndex,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: Number(rpcErrorContext),\n            index: numberIndex\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index: numberIndex\n          };\n        }\n        return { index: numberIndex };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: Number(rpcErrorContext)\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: Number(rpcErrorContext.account_index)\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError(putativeErrorResponse) {\n  let out;\n  if (isRpcErrorResponse(putativeErrorResponse)) {\n    const { code: rawCode, data, message } = putativeErrorResponse;\n    const code = Number(rawCode);\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n      const { err, ...preflightErrorContext } = data;\n      const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n      out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n        ...preflightErrorContext,\n        ...causeObject\n      });\n    } else {\n      let errorContext;\n      switch (code) {\n        case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n        case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n        case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n        case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n        case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n          errorContext = { __serverMessage: message };\n          break;\n        default:\n          if (typeof data === \"object\" && !Array.isArray(data)) {\n            errorContext = data;\n          }\n      }\n      out = new SolanaError(code, errorContext);\n    }\n  } else {\n    const message = typeof putativeErrorResponse === \"object\" && putativeErrorResponse !== null && \"message\" in putativeErrorResponse && typeof putativeErrorResponse.message === \"string\" ? putativeErrorResponse.message : \"Malformed JSON-RPC error with no message attribute\";\n    out = new SolanaError(SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, { error: putativeErrorResponse, message });\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\nfunction isRpcErrorResponse(value) {\n  return typeof value === \"object\" && value !== null && \"code\" in value && \"message\" in value && (typeof value.code === \"number\" || typeof value.code === \"bigint\") && typeof value.message === \"string\";\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL } from '@solana/errors';\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexport { addCodecSentinel, addCodecSizePrefix, addDecoderSentinel, addDecoderSizePrefix, addEncoderSentinel, addEncoderSizePrefix, assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, containsBytes, createCodec, createDecoder, createEncoder, fixBytes, fixCodecSize, fixDecoderSize, fixEncoderSize, getEncodedSize, isFixedSize, isVariableSize, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder, transformCodec, transformDecoder, transformEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createDecoder, createEncoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n    return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch, mask };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema. Masking applies recursively to\n     * props of `object` structs only.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `coerce` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful. Also, `mask` will turn on\n     * masking of the unknown `object` props recursively if passed.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value, ctx) {\n            if (!isNonArrayObject(value)) {\n                return value;\n            }\n            const coerced = { ...value };\n            // The `object` struct has special behaviour enabled by the mask flag.\n            // When masking, properties that are not in the schema are deleted from\n            // the coerced object instead of eventually failing validaiton.\n            if (ctx.mask && schema) {\n                for (const key in coerced) {\n                    if (schema[key] === undefined) {\n                        delete coerced[key];\n                    }\n                }\n            }\n            return coerced;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value, ctx) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, {\n                    coerce: true,\n                    mask: ctx.mask,\n                });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils';\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bitLen, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes, inRange, isBytes, memoized, numberToHexUnpadded, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, mulEndoUnsafe, negateCt, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field, FpInvertBatch, getMinHashLength, mapHashToField, nLength, validateField, } from \"./modular.js\";\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num, den) => (num + (num >= 0 ? den : -den) / _2n) / den;\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k, basis, n) {\n    // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n    // Since part can be negative, we need to do this on point.\n    // TODO: verifyScalar function which consumes lambda\n    const [[a1, b1], [a2, b2]] = basis;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    // |k1|/|k2| is < sqrt(N), but can be negative.\n    // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n    let k1 = k - c1 * a1 - c2 * a2;\n    let k2 = -c1 * b1 - c2 * b2;\n    const k1neg = k1 < _0n;\n    const k2neg = k2 < _0n;\n    if (k1neg)\n        k1 = -k1;\n    if (k2neg)\n        k2 = -k2;\n    // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n    // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n    const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n    if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n        throw new Error('splitScalar (endomorphism): failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction validateSigFormat(format) {\n    if (!['compact', 'recovered', 'der'].includes(format))\n        throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n    return format;\n}\nfunction validateSigOpts(opts, def) {\n    const optsn = {};\n    for (let optName of Object.keys(def)) {\n        // @ts-ignore\n        optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n    }\n    abool(optsn.lowS, 'lowS');\n    abool(optsn.prehash, 'prehash');\n    if (optsn.format !== undefined)\n        validateSigFormat(optsn.format);\n    return optsn;\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = ensureBytes('signature', hex);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function _normFnElement(Fn, key) {\n    const { BYTES: expected } = Fn;\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else {\n        let bytes = ensureBytes('private key', key);\n        try {\n            num = Fn.fromBytes(bytes);\n        }\n        catch (error) {\n            throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n        }\n    }\n    if (!Fn.isValidNot0(num))\n        throw new Error('invalid private key: out of range [1..N-1]');\n    return num;\n}\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * @example\n```js\nconst opts = {\n  p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n  n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n  h: BigInt(1),\n  a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n  b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n  Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n  Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\nconst p256_Point = weierstrass(opts);\n```\n */\nexport function weierstrassN(params, extraOpts = {}) {\n    const validated = _createCurveFields('weierstrass', params, extraOpts);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(extraOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n        wrapPrivateKey: 'boolean',\n    });\n    const { endo } = extraOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n        }\n    }\n    const lengths = getWLengths(Fp, Fn);\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool(isCompressed, 'isCompressed');\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes, undefined, 'Point');\n        const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === comp && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const isYOdd = Fp.isOdd(y); // (y & _1n) === _1n;\n            const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n            if (isHeadOdd !== isYOdd)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === uncomp && head === 0x04) {\n            // TODO: more checks\n            const L = Fp.BYTES;\n            const x = Fp.fromBytes(tail.subarray(0, L));\n            const y = Fp.fromBytes(tail.subarray(L, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`);\n        }\n    }\n    const encodePoint = extraOpts.toBytes || pointToBytes;\n    const decodePoint = extraOpts.fromBytes || pointFromBytes;\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x³ + a * x + b\n    }\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    function splitEndoScalarN(k) {\n        if (!endo || !endo.basises)\n            throw new Error('no endo');\n        return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(Z, Fp.ONE))\n            return { x: X, y: Y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(Z);\n        const x = Fp.mul(X, iz);\n        const y = Fp.mul(Y, iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(X, Y, Z) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y, true);\n            this.Z = acoord('z', Z);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        static fromBytes(bytes) {\n            const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n            P.assertValidity();\n            return P;\n        }\n        static fromHex(hex) {\n            return Point.fromBytes(ensureBytes('pointHex', hex));\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.X, Fp.neg(this.Y), this.Z);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = extraOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return normalizeZ(Point, [point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed secret key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = extraOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO;\n            if (sc === _1n)\n                return p; // fast-path\n            if (wnaf.hasCache(this))\n                return this.multiply(sc);\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.unsafe(p, sc);\n            }\n        }\n        multiplyAndAddUnsafe(Q, a, b) {\n            const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n            return sum.is0() ? undefined : sum;\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = extraOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.unsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = extraOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        isSmallOrder() {\n            // can we use this.clearCofactor()?\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        toBytes(isCompressed = true) {\n            abool(isCompressed, 'isCompressed');\n            this.assertValidity();\n            return encodePoint(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get px() {\n            return this.X;\n        }\n        get py() {\n            return this.X;\n        }\n        get pz() {\n            return this.Z;\n        }\n        toRawBytes(isCompressed = true) {\n            return this.toBytes(isCompressed);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(_normFnElement(Fn, privateKey));\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const bits = Fn.BITS;\n    const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nfunction getWLengths(Fp, Fn) {\n    return {\n        secretKey: Fn.BYTES,\n        publicKey: 1 + Fp.BYTES,\n        publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n        publicKeyHasPrefix: true,\n        signature: 2 * Fn.BYTES,\n    };\n}\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(Point, ecdhOpts = {}) {\n    const { Fn } = Point;\n    const randomBytes_ = ecdhOpts.randomBytes || randomBytesWeb;\n    const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n    function isValidSecretKey(secretKey) {\n        try {\n            return !!_normFnElement(Fn, secretKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    function isValidPublicKey(publicKey, isCompressed) {\n        const { publicKey: comp, publicKeyUncompressed } = lengths;\n        try {\n            const l = publicKey.length;\n            if (isCompressed === true && l !== comp)\n                return false;\n            if (isCompressed === false && l !== publicKeyUncompressed)\n                return false;\n            return !!Point.fromBytes(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Produces cryptographically secure secret key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    function randomSecretKey(seed = randomBytes_(lengths.seed)) {\n        return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n    }\n    /**\n     * Computes public key for a secret key. Checks for validity of the secret key.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(secretKey, isCompressed = true) {\n        return Point.BASE.multiply(_normFnElement(Fn, secretKey)).toBytes(isCompressed);\n    }\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        if (typeof item === 'bigint')\n            return false;\n        if (item instanceof Point)\n            return true;\n        const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n        if (Fn.allowedLengths || secretKey === publicKey)\n            return undefined;\n        const l = ensureBytes('key', item).length;\n        return l === publicKey || l === publicKeyUncompressed;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from secret key A and public key B.\n     * Checks: 1) secret key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(secretKeyA, publicKeyB, isCompressed = true) {\n        if (isProbPub(secretKeyA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicKeyB) === false)\n            throw new Error('second arg must be public key');\n        const s = _normFnElement(Fn, secretKeyA);\n        const b = Point.fromHex(publicKeyB); // checks for being on-curve\n        return b.multiply(s).toBytes(isCompressed);\n    }\n    const utils = {\n        isValidSecretKey,\n        isValidPublicKey,\n        randomSecretKey,\n        // TODO: remove\n        isValidPrivateKey: isValidSecretKey,\n        randomPrivateKey: randomSecretKey,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n * We need `hash` for 2 features:\n * 1. Message prehash-ing. NOT used if `sign` / `verify` are called with `prehash: false`\n * 2. k generation in `sign`, using HMAC-drbg(hash)\n *\n * ECDSAOpts are only rarely needed.\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(Point, hash, ecdsaOpts = {}) {\n    ahash(hash);\n    _validateObject(ecdsaOpts, {}, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    const randomBytes = ecdsaOpts.randomBytes || randomBytesWeb;\n    const hmac = ecdsaOpts.hmac ||\n        ((key, ...msgs) => nobleHmac(hash, key, concatBytes(...msgs)));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n    const defaultSigOpts = {\n        prehash: false,\n        lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : false,\n        format: undefined, //'compact' as ECDSASigFormat,\n        extraEntropy: false,\n    };\n    const defaultSigOpts_format = 'compact';\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function validateRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n        return num;\n    }\n    function validateSigLength(bytes, format) {\n        validateSigFormat(format);\n        const size = lengths.signature;\n        const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n        return abytes(bytes, sizer, `${format} signature`);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = validateRS('r', r); // r in [1..N-1];\n            this.s = validateRS('s', s); // s in [1..N-1];\n            if (recovery != null)\n                this.recovery = recovery;\n            Object.freeze(this);\n        }\n        static fromBytes(bytes, format = defaultSigOpts_format) {\n            validateSigLength(bytes, format);\n            let recid;\n            if (format === 'der') {\n                const { r, s } = DER.toSig(abytes(bytes));\n                return new Signature(r, s);\n            }\n            if (format === 'recovered') {\n                recid = bytes[0];\n                format = 'compact';\n                bytes = bytes.subarray(1);\n            }\n            const L = Fn.BYTES;\n            const r = bytes.subarray(0, L);\n            const s = bytes.subarray(L, L * 2);\n            return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n        }\n        static fromHex(hex, format) {\n            return this.fromBytes(hexToBytes(hex), format);\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(messageHash) {\n            const FIELD_ORDER = Fp.ORDER;\n            const { r, s, recovery: rec } = this;\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            // ECDSA recovery is hard for cofactor > 1 curves.\n            // In sign, `r = q.x mod n`, and here we recover q.x from r.\n            // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n            // However, for cofactor>1, r+n may not get q.x:\n            // r+n*i would need to be done instead where i is unknown.\n            // To easily get i, we either need to:\n            // a. increase amount of valid recid values (4, 5...); OR\n            // b. prohibit non-prime-order signatures (recid > 1).\n            const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n            if (hasCofactor && rec > 1)\n                throw new Error('recovery id is ambiguous for h>1 curve');\n            const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('recovery id 2 or 3 invalid');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromBytes(concatBytes(pprefix((rec & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(ensureBytes('msgHash', messageHash)); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        toBytes(format = defaultSigOpts_format) {\n            validateSigFormat(format);\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            const r = Fn.toBytes(this.r);\n            const s = Fn.toBytes(this.s);\n            if (format === 'recovered') {\n                if (this.recovery == null)\n                    throw new Error('recovery bit must be present');\n                return concatBytes(Uint8Array.of(this.recovery), r, s);\n            }\n            return concatBytes(r, s);\n        }\n        toHex(format) {\n            return bytesToHex(this.toBytes(format));\n        }\n        // TODO: remove\n        assertValidity() { }\n        static fromCompact(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'compact');\n        }\n        static fromDER(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'der');\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n        }\n        toDERRawBytes() {\n            return this.toBytes('der');\n        }\n        toDERHex() {\n            return bytesToHex(this.toBytes('der'));\n        }\n        toCompactRawBytes() {\n            return this.toBytes('compact');\n        }\n        toCompactHex() {\n            return bytesToHex(this.toBytes('compact'));\n        }\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function bits2int_def(bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function bits2int_modN_def(bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // Pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    function validateMsgAndHash(message, prehash) {\n        abytes(message, undefined, 'message');\n        return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n    }\n    /**\n     * Steps A, D of RFC6979 3.2.\n     * Creates RFC6979 seed; converts msg/privKey to numbers.\n     * Used only in sign, not in verify.\n     *\n     * Warning: we cannot assume here that message has same amount of bytes as curve order,\n     * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n     */\n    function prepSig(message, privateKey, opts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(message);\n        const d = _normFnElement(Fn, privateKey); // validate secret key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (extraEntropy != null && extraEntropy !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            // gen random bytes OR pass as-is\n            const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // To transform k => Signature:\n        // q = k⋅G\n        // r = q.x mod n\n        // s = k^-1(m + rd) mod n\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // mod n, not mod p\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = k⋅G\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = Fn.neg(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    /**\n     * Signs message hash with a secret key.\n     *\n     * ```\n     * sign(m, d) where\n     *   k = rfc6979_hmac_drbg(m, d)\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr) / k mod n\n     * ```\n     */\n    function sign(message, secretKey, opts = {}) {\n        message = ensureBytes('message', message);\n        const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(hash.outputLen, Fn.BYTES, hmac);\n        const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n        return sig;\n    }\n    function tryParsingSig(sg) {\n        // Try to deduce format\n        let sig = undefined;\n        const isHex = typeof sg === 'string' || isBytes(sg);\n        const isObj = !isHex &&\n            sg !== null &&\n            typeof sg === 'object' &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        if (isObj) {\n            sig = new Signature(sg.r, sg.s);\n        }\n        else if (isHex) {\n            try {\n                sig = Signature.fromBytes(ensureBytes('sig', sg), 'der');\n            }\n            catch (derError) {\n                if (!(derError instanceof DER.Err))\n                    throw derError;\n            }\n            if (!sig) {\n                try {\n                    sig = Signature.fromBytes(ensureBytes('sig', sg), 'compact');\n                }\n                catch (error) {\n                    return false;\n                }\n            }\n        }\n        if (!sig)\n            return false;\n        return sig;\n    }\n    /**\n     * Verifies a signature against message and public key.\n     * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n     * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   u1 = hs^-1 mod n\n     *   u2 = rs^-1 mod n\n     *   R = u1⋅G + u2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, message, publicKey, opts = {}) {\n        const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n        publicKey = ensureBytes('publicKey', publicKey);\n        message = validateMsgAndHash(ensureBytes('message', message), prehash);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const sig = format === undefined\n            ? tryParsingSig(signature)\n            : Signature.fromBytes(ensureBytes('sig', signature), format);\n        if (sig === false)\n            return false;\n        try {\n            const P = Point.fromBytes(publicKey);\n            if (lowS && sig.hasHighS())\n                return false;\n            const { r, s } = sig;\n            const h = bits2int_modN(message); // mod n, not mod p\n            const is = Fn.inv(s); // s^-1 mod n\n            const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n            const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n            const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1⋅G + u2⋅P\n            if (R.is0())\n                return false;\n            const v = Fn.create(R.x); // v = r.x mod n\n            return v === r;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    function recoverPublicKey(signature, message, opts = {}) {\n        const { prehash } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash);\n        return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n    }\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        getSharedSecret,\n        utils,\n        lengths,\n        Point,\n        sign,\n        verify,\n        recoverPublicKey,\n        Signature,\n        hash,\n    });\n}\n/** @deprecated use `weierstrass` in newer releases */\nexport function weierstrassPoints(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    return _weierstrass_new_output_to_legacy(c, Point);\n}\nfunction _weierstrass_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        b: c.b,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    let allowedLengths = c.allowedPrivateKeyLengths\n        ? Array.from(new Set(c.allowedPrivateKeyLengths.map((l) => Math.ceil(l / 2))))\n        : undefined;\n    const Fn = Field(CURVE.n, {\n        BITS: c.nBitLength,\n        allowedLengths: allowedLengths,\n        modFromBytes: c.wrapPrivateKey,\n    });\n    const curveOpts = {\n        Fp,\n        Fn,\n        allowInfinityPoint: c.allowInfinityPoint,\n        endo: c.endo,\n        isTorsionFree: c.isTorsionFree,\n        clearCofactor: c.clearCofactor,\n        fromBytes: c.fromBytes,\n        toBytes: c.toBytes,\n    };\n    return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const ecdsaOpts = {\n        hmac: c.hmac,\n        randomBytes: c.randomBytes,\n        lowS: c.lowS,\n        bits2int: c.bits2int,\n        bits2int_modN: c.bits2int_modN,\n    };\n    return { CURVE, curveOpts, hash: c.hash, ecdsaOpts };\n}\nexport function _legacyHelperEquat(Fp, a, b) {\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n    }\n    return weierstrassEquation;\n}\nfunction _weierstrass_new_output_to_legacy(c, Point) {\n    const { Fp, Fn } = Point;\n    function isWithinCurveOrder(num) {\n        return inRange(num, _1n, Fn.ORDER);\n    }\n    const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n    return Object.assign({}, {\n        CURVE: c,\n        Point: Point,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        weierstrassEquation,\n        isWithinCurveOrder,\n    });\n}\nfunction _ecdsa_new_output_to_legacy(c, _ecdsa) {\n    const Point = _ecdsa.Point;\n    return Object.assign({}, _ecdsa, {\n        ProjectivePoint: Point,\n        CURVE: Object.assign({}, c, nLength(Point.Fn.ORDER, Point.Fn.BITS)),\n    });\n}\n// _ecdsa_legacy\nexport function weierstrass(c) {\n    const { CURVE, curveOpts, hash, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    const signs = ecdsa(Point, hash, ecdsaOpts);\n    return _ecdsa_new_output_to_legacy(c, signs);\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher, isogenyMap, } from \"./abstract/hash-to-curve.js\";\nimport { Field, mapHashToField, mod, pow2 } from \"./abstract/modular.js\";\nimport { _normFnElement, mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\nimport { bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, utf8ToBytes, } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Point.BASE.multiply(Point.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst secp256k1_ENDO = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    basises: [\n        [BigInt('0x3086d221a7d46bcde86c90e49284eb15'), -BigInt('0xe4437ed6010e88286f547fa90abfe4c3')],\n        [BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'), BigInt('0x3086d221a7d46bcde86c90e49284eb15')],\n    ],\n};\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, { sqrt: sqrtMod });\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = secp256k1.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = secp256k1.sign(msg, secretKey);\n * const isValid = secp256k1.verify(sig, msg, publicKey) === true;\n * ```\n */\nexport const secp256k1 = createCurve({ ...secp256k1_CURVE, Fp: Fpk1, lowS: true, endo: secp256k1_ENDO }, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(utf8ToBytes(tag));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst Pointk1 = /* @__PURE__ */ (() => secp256k1.Point)();\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    const { Fn, BASE } = Pointk1;\n    const d_ = _normFnElement(Fn, priv);\n    const p = BASE.multiply(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : Fn.neg(d_);\n    return { scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    const Fp = Fpk1;\n    if (!Fp.isValidNot0(x))\n        throw new Error('invalid x: Fail if x ≥ p');\n    const xx = Fp.create(x * x);\n    const c = Fp.create(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = Fp.sqrt(c); // Let y = c^(p+1)/4 mod p. Same as sqrt().\n    // Return the unique point P such that x(P) = x and\n    // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    if (!hasEven(y))\n        y = Fp.neg(y);\n    const p = Pointk1.fromAffine({ x, y });\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return Pointk1.Fn.create(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(secretKey) {\n    return schnorrGetExtPubKey(secretKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, secretKey, auxRand = randomBytes(32)) {\n    const { Fn } = Pointk1;\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(secretKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = Fn.toBytes(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    // Let k' = int(rand) mod n. Fail if k' = 0. Let R = k'⋅G\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(rand);\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(Fn.toBytes(Fn.create(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const { Fn, BASE } = Pointk1;\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1_CURVE.p))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1_CURVE.n))\n            return false;\n        // int(challenge(bytes(r)||bytes(P)||m))%n\n        const e = challenge(Fn.toBytes(r), pointToBytes(P), m);\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(Fn.neg(e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = schnorr.keygen();\n * // const publicKey = schnorr.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, secretKey);\n * const isValid = schnorr.verify(sig, msg, publicKey);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => {\n    const size = 32;\n    const seedLength = 48;\n    const randomSecretKey = (seed = randomBytes(seedLength)) => {\n        return mapHashToField(seed, secp256k1_CURVE.n);\n    };\n    // TODO: remove\n    secp256k1.utils.randomSecretKey;\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: schnorrGetPublicKey(secretKey) };\n    }\n    return {\n        keygen,\n        getPublicKey: schnorrGetPublicKey,\n        sign: schnorrSign,\n        verify: schnorrVerify,\n        Point: Pointk1,\n        utils: {\n            randomSecretKey: randomSecretKey,\n            randomPrivateKey: randomSecretKey,\n            taggedHash,\n            // TODO: remove\n            lift_x,\n            pointToBytes,\n            numberToBytesBE,\n            bytesToNumberBE,\n            mod,\n        },\n        lengths: {\n            secretKey: size,\n            publicKey: size,\n            publicKeyHasPrefix: false,\n            signature: size * 2,\n            seed: seedLength,\n        },\n    };\n})();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(secp256k1.Point, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => secp256k1_hasher.hashToCurve)();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => secp256k1_hasher.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { weierstrass } from \"./abstract/weierstrass.js\";\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return { hash };\n}\n/** @deprecated use new `weierstrass()` and `ecdsa()` methods */\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, hash: hash });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { getU64Codec, getU64Encoder } from '@solana/codecs-numbers';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport { CommonClient, WebSocket } from 'rpc-websockets';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs\n  }) {\n    const maybeLogsOutput = logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '';\n    const guideText = '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + maybeLogsOutput + guideText;\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + maybeLogsOutput + guideText;\n        break;\n      default:\n        {\n          message = `Unknown action '${(a => a)(action)}'`;\n        }\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.transactionLogs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs) ? this.transactionLogs : undefined\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs() {\n    const cachedLogs = this.transactionLogs;\n    if (cachedLogs != null && typeof cachedLogs === 'object' && 'then' in cachedLogs) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.transactionLogs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nfunction u64(property) {\n  const layout = blob(8 /* bytes */, property);\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  const bigIntLayout = layout;\n  const codec = getU64Codec();\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return codec.decode(src);\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = codec.encode(bigInt);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar fastStableStringify$1;\nvar hasRequiredFastStableStringify;\n\nfunction requireFastStableStringify () {\n\tif (hasRequiredFastStableStringify) return fastStableStringify$1;\n\thasRequiredFastStableStringify = 1;\n\tvar objToString = Object.prototype.toString;\n\tvar objKeys = Object.keys || function(obj) {\n\t\t\tvar keys = [];\n\t\t\tfor (var name in obj) {\n\t\t\t\tkeys.push(name);\n\t\t\t}\n\t\t\treturn keys;\n\t\t};\n\n\tfunction stringify(val, isArrayProp) {\n\t\tvar i, max, str, keys, key, propVal, toStr;\n\t\tif (val === true) {\n\t\t\treturn \"true\";\n\t\t}\n\t\tif (val === false) {\n\t\t\treturn \"false\";\n\t\t}\n\t\tswitch (typeof val) {\n\t\t\tcase \"object\":\n\t\t\t\tif (val === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t\t} else {\n\t\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\t\tstr = '[';\n\t\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + ']';\n\t\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t\t// only object is left\n\t\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\t\tmax = keys.length;\n\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase \"function\":\n\t\t\tcase \"undefined\":\n\t\t\t\treturn isArrayProp ? null : undefined;\n\t\t\tcase \"string\":\n\t\t\t\treturn JSON.stringify(val);\n\t\t\tdefault:\n\t\t\t\treturn isFinite(val) ? val : null;\n\t\t}\n\t}\n\n\tfastStableStringify$1 = function(val) {\n\t\tvar returnVal = stringify(val, false);\n\t\tif (returnVal !== undefined) {\n\t\t\treturn ''+ returnVal;\n\t\t}\n\t};\n\treturn fastStableStringify$1;\n}\n\nvar fastStableStringifyExports = /*@__PURE__*/ requireFastStableStringify();\nvar fastStableStringify = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringifyExports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends CommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = WebSocket(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(filters) {\n  return filters.map(filter => 'memcmp' in filter ? {\n    ...filter,\n    memcmp: {\n      ...filter.memcmp,\n      encoding: filter.memcmp.encoding ?? 'base58'\n    }\n  } : filter);\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst ParsedInstructionStruct = type({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown()\n});\nconst PartiallyDecodedInstructionStruct = type({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string()\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  }))),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(union([ParsedInstructionStruct, PartiallyDecodedInstructionStruct]))\n  }))))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"1.0.0-maintenance\"}`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', {\n      ...configWithoutEncoding,\n      ...(configWithoutEncoding.filters ? {\n        filters: applyDefaultMemcmpEncodingToFilters(configWithoutEncoding.filters)\n      } : null)\n    });\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const {\n      context,\n      value: {\n        blockhash\n      }\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature() {\n        throw new Error('The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' + 'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' + 'for a given message.');\n      },\n      toJSON() {\n        return {};\n      }\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator\n      }\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              console.error(`Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``, {\n                args,\n                error: e\n              });\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(publicKey, callback, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64', config);\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(programId, callback, commitmentOrConfig, maybeFilters) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, config ? config : maybeFilters ? {\n      filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), getU64Encoder().encode(params.recentSlot)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["uuid","generateRequest","ClientBrowser","callServer","options","this","reviver","replacer","generator","version","notificationIdNull","module","exports","prototype","request","method","params","id","callback","self","isBatch","Array","isArray","TypeError","undefined","hasCallback","err","message","JSON","stringify","response","_parseResponse","responseText","parse","length","isError","res","error","isNotError","filter","result","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","inRange","a","min","max","ToDictionary","o","Object","Stream","tokens","slice","call","endOfStream","shift","prepend","token","unshift","pop","push","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","String","toLowerCase","Error","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","defineProperty","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","bytes","temp","decode","input","ArrayBuffer","Uint8Array","byteOffset","byteLength","input_stream","code_points","apply","indexOf","cp","fromCharCode","codePointsToString","encode","opt_string","string","n","u","charCodeAt","b","stringToCodePoints","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","from","isEncoding","actual","fromString","isView","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","jsonrpc","HpkeError","EncapError","DecapError","ExportError","SealError","OpenError","MessageLimitReachedError","DeriveKeyPairError","dntGlobalThis","baseObj","globalThis","extObj","Proxy","_target","prop","_receiver","deleteProperty","success","ownKeys","baseKeys","Reflect","extKeys","extKeysSet","Set","k","has","desc","getOwnPropertyDescriptor","NativeAlgorithm","_setup","_api","async","crypto","subtle","webcrypto","loadSubtleCrypto","INPUT_LENGTH_LIMIT","privateKey","publicKey","w","LABEL_EAE_PRK","LABEL_SHARED_SECRET","Dhkem","prim","kdf","_prim","_kdf","suiteId","init","serializePublicKey","key","deserializePublicKey","serializePrivateKey","deserializePrivateKey","importKey","format","isPublic","generateKeyPair","deriveKeyPair","ikm","encap","ke","ekm","enc","pkrm","recipientPublicKey","dh","kemContext","senderKey","sks","pks","derivePublicKey","pksm","concat3","sharedSecret","_generateSharedSecret","decap","pke","skr","recipientKey","pkr","senderPublicKey","labeledIkm","buildLabeledIkm","labeledInfo","buildLabeledInfo","secretSize","extractAndExpand","KEM_USAGES","Bignum","_num","reset","isZero","lessThan","v","LABEL_CANDIDATE","ORDER_P_256","ORDER_P_384","ORDER_P_521","PKCS8_ALG_ID_P_256","PKCS8_ALG_ID_P_384","PKCS8_ALG_ID_P_521","Ec","kem","hkdf","_hkdf","_alg","namedCurve","_nPk","_nSk","_nDh","_order","_bitmask","_pkcs8AlgId","exportKey","_importRawKey","jwk","byteString","atob","base64UrlToBytes","_importJWK","generateKey","dkpPrk","labeledExtract","bn","counter","labeledExpand","sk","_deserializePkcs8Key","pk","deriveBits","public","crv","pkcs8Key","HPKE_VERSION","HkdfNative","hash","_suiteId","label","_checkInit","info","extract","salt","hashSize","algHash","sign","expand","prk","okm","p","prev","mid","tail","tmp","cur","baseKey","HkdfSha256Native","AEAD_USAGES","AesGcmContext","_rawKey","seal","iv","aad","_setupKey","alg","additionalData","encrypt","_key","open","decrypt","_importKey","Aes128Gcm","createEncryptionContext","Aes256Gcm","emitNotSupported","Promise","_resolve","reject","LABEL_SEC","ExporterContextImpl","api","exporterSecret","_data","_aad","exporterContext","RecipientExporterContextImpl","SenderExporterContextImpl","EncryptionContextImpl","baseNonce","seq","_aead","aead","_nK","keySize","_nN","nonceSize","_nT","tagSize","_ctx","computeNonce","seqBytes","xor","incrementSeq","MAX_SAFE_INTEGER","RecipientContextImpl","pt","SenderContextImpl","ct","LABEL_BASE_NONCE","LABEL_EXP","LABEL_INFO_HASH","LABEL_KEY","LABEL_PSK_ID_HASH","LABEL_SECRET","SUITE_ID_HEADER_HPKE","CipherSuiteNative","_kem","createSenderContext","_validateInputLength","mode","psk","_keyScheduleS","createRecipientContext","_keyScheduleR","ctx","_keySchedule","pskId","pskIdHash","infoHash","keyScheduleContext","exporterSecretInfo","keyInfo","baseNonceInfo","DhkemP256HkdfSha256Native","CipherSuite","DhkemP256HkdfSha256","HkdfSha256","getRandomValues","rnds8","rng","bind","msCrypto","byteToHex","test","rnds","random","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","charCode","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","root","f","nacl","util","validateBase64","decodeUTF8","unescape","encodeURIComponent","encodeUTF8","decodeURIComponent","escape","join","encodeBase64","decodeBase64","btoa","assert","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","move","dest","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","padding","groupSize","groupBase","modrn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","tripletToBase64","P","Gx","Gy","_d","isStr","abytes","isBytes","u8n","u8fr","padh","pad","padStart","bytesToHex","map","_ch","ch","hexToBytes","hex","hl","al","ai","n1","n2","toU8","cr","concatBytes","arrs","reduce","sum","forEach","big","arange","isBig","M","invert","md","apoint","Point","B256","static","ex","ey","ez","et","freeze","fromAffine","fromBytes","zip215","normed","lastByte","bytesToNumLE","y2","isValid","uvRatio","isXOdd","isLastByteOdd","assertValidity","_a","is0","X","Y","Z","T","X2","Y2","Z2","Z4","aX2","other","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","I","negate","double","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","multiply","safe","wNAF","toAffine","iz","toBytes","numTo32bLE","toHex","clearCofactor","isSmallOrder","isTorsionFree","fromHex","toRawBytes","ZERO","reverse","pow2","power","RM1","v3","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","modL_LE","modN","getExtendedPublicKey","priv","hashed","head","prefix","scalar","point","pointBytes","hash2extK","etc","callHash","sha512s","getPublicKey","sha512Async","messages","digest","sha512Sync","randomBytes","pwindows","scalarBits","Gpows","ctneg","cnd","comp","points","precompute","pow_2_w","shiftBy","wbits","offF","offP","u8","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","span","property","makeDestinationObject","getSpan","replicate","rv","create","assign","fromArray","values","nameWithProperty","ExternalLayout","isCount","OffsetLayout","layout","UInt","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearInt64","Sequence","elementLayout","idx","elo","Structure","fields","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","Blob","srcBuffer","hasOwnProperty","Events","EE","context","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","args","removeListener","on","removeAllListeners","prefixed","__createBinding","k2","__setModuleDefault","__decorate","decorators","decorate","__importStar","__esModule","__importDefault","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","default","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","serializeStruct","borshSerialize","structSchema","field","deserializeField","reader","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","copyProps","SafeBuffer","anumber","isSafeInteger","lengths","ahash","outputLen","blockLen","aexists","instance","checkFinished","destroyed","aoutput","clean","arrays","createView","DataView","rotr","byteSwap","swap32IfBE","Uint32Array","hasHexBuiltin","hexes","asciiToBase16","char","Hash","hashCons","hashC","update","bytesLength","Chi","Maj","HashMD","padOffset","view","take","dataView","process","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","state","destroy","_cloneInto","to","SHA256_IV","SHA512_IV","U32_MASK64","fromBig","le","lst","Ah","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA256_K","SHA256_W","SHA256","getUint32","W15","W2","s0","s1","K512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","_0n","_1n","_abool2","title","_abytes2","needsLen","numberToHexUnpadded","hexToNumber","numberToBytesLE","expectedLength","copyBytes","isPosBig","aInRange","bitLen","object","optFields","checkField","expectedType","isOpt","entries","notImplemented","memoized","WeakMap","computed","_2n","_3n","_4n","_5n","_7n","_8n","_9n","_16n","modulo","assertIsSquare","Fp","eql","sqrt3mod4","p1div4","ORDER","sqrt5mod8","p5div8","nv","ONE","tonelliShanks","Q","S","_Fp","Field","FpLegendre","cc","Q1div2","R","t_tmp","exponent","isNegativeLE","FIELD_FIELDS","nums","passZero","inverted","multipliedAcc","invertedAcc","reduceRight","p1mod2","powered","yes","zero","no","nBitLength","_nBitLength","nByteLength","bitLenOrOpts","opts","_nbitLength","_sqrt","allowedLengths","modFromBytes","_opts","BITS","BYTES","sqrtP","MASK","isValidNot0","lhs","rhs","FpPow","sqrN","addN","subN","mulN","Fp_","tn","c1","c2","c3","c4","tv1","tv2","tv3","tv4","e1","e2","cmov","e3","sqrt9mod16","skipValidation","padded","invertBatch","getFieldBytesLength","fieldOrder","getMinHashLength","negateCt","condition","normalizeZ","invertedZs","validateW","W","calcWOpts","maxNumber","windows","windowSize","calcOffsets","wOpts","nextN","offsetStart","isNegF","offsetF","pointPrecomputes","pointWindowSizes","getW","assert0","Fn","_unsafeLadder","elm","precomputeWindow","precomputes","wo","wNAFUnsafe","getPrecomputes","cached","unsafe","createCache","delete","hasCache","pippenger","fieldN","scalars","validateMSMPoints","validateMSMScalars","plength","slength","buckets","resI","sumI","createField","order","_createCurveFields","CURVE","curveOpts","FpFnLE","PrimeEdwardsPoint","ep","_bytes","_hex","invertedZ","assertSame","subtract","multiplyUnsafe","isLazy","eddsaOpts","adjustScalarBytes","domain","prehash","mapToCurve","_eddsa_legacy_opts_to_new","extraOpts","validated","cofactor","modP","isEdValidXY","acoord","banZero","aextpoint","toAffineMemo","zz","assertValidMemo","wnaf","msm","_setWindowSize","edwards","eddsa","ExtendedPoint","_eddsa_new_output_to_legacy","cHash","phflag","modN_LE","secretKey","getPrivateScalar","hashDomainToScalar","of","msgs","verifyOpts","_size","signature","seed","randomSecretKey","utils","isValidSecretKey","isValidPublicKey","toMontgomery","is25519","toMontgomerySecret","randomPrivateKey","keygen","verify","sig","SB","ed25519_CURVE_p","ed25519_CURVE","ED25519_SQRT_M1","v7","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","ed25519Defaults","ed25519","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W3","_RistrettoPoint","ap","hashToCurve","R1","R2","ristretto255_map","equalBytes","u1","u2","u1_2","u2_2","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","two","encodeValue","getPrototypeOf","encodeObjectContextEntry","cause","contextAndErrorOptions","errorOptions","contextRest","keys","decodingAdviceMessage","searchParamsString","encodeContextObject","getErrorMessage","__code","isFixedSize","codec","fixedSize","isLittleEndian","config","numberEncoderFactory","encoder","codecDescription","assertNumberIsBetweenForCodec","arrayBuffer","getSizeFromValue","getEncodedSize","numberDecoderFactory","decoder","assertByteArrayIsNotEmptyForCodec","expected","assertByteArrayHasEnoughBytesForCodec","bytesOffset","toArrayBuffer","getU64Encoder","getU64Codec","decoderFixedSize","encoderFixedSize","maxSize","decoderMaxSize","encoderMaxSize","getBigUint64","getU64Decoder","StructError","failure","failures","explanation","rest","path","isObject","isNonArrayObject","print","toFailure","struct","branch","refinement","toFailures","iterator","run","coerce","coercer","status","validator","ts","refiner","Struct","props","validate","is","tuples","tuple","done","shiftIterator","Element","Class","literal","constant","description","optional","record","Key","Value","Structs","Never","union","coerced","unknown","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","IOTAS","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","suffix","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","finish","writeInto","bufferOut","xofInto","xof","keccak_256","gen","HMAC","iHash","oHash","divNearest","den","validateSigFormat","validateSigOpts","def","optsn","optName","lowS","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","lengthBytes","_int","toSig","int","tlv","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","pprefix","hasEvenY","getWLengths","publicKeyUncompressed","publicKeyHasPrefix","ecdsa","ecdsaOpts","hmac","bits2int","bits2int_modN","CURVE_ORDER","fnBits","getSharedSecret","ecdhOpts","randomBytes_","fieldLen","minLen","reduced","isCompressed","isProbPub","isValidPrivateKey","normPrivateKeyToScalar","secretKeyA","publicKeyB","ecdh","defaultSigOpts","extraEntropy","defaultSigOpts_format","isBiggerThanHalfOrder","validateRS","Signature","recovery","recid","validateSigLength","L","addRecoveryBit","recoverPublicKey","messageHash","FIELD_ORDER","rec","radj","ir","hasHighS","fromCompact","fromDER","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","ORDER_MASK","int2octets","validateMsgAndHash","k2sig","some","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","hashLen","qByteLen","hmacFn","u8of","byte","reseed","sl","pred","createHmacDrbg","sg","isHex","isObj","derError","tryParsingSig","weierstrass","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","_weierstrass_legacy_opts_to_new","_ecdsa_legacy_opts_to_new","_ecdsa","ProjectivePoint","_ecdsa_new_output_to_legacy","beta","basises","assertCompressionIsSupported","encodePoint","_c","bx","decodePoint","uncomp","isValidXY","weierstrassEquation","sqrtError","x3","_4a3","_27b2","aprjpoint","splitEndoScalarN","basis","k1","k1neg","k2neg","MAX_NUM","_splitEndoScalar","finishEndo","endoBeta","k1p","k2p","U1","U2","t0","t1","t2","t3","t4","t5","fake","k1f","k2f","sc","p1","p2","mulEndoUnsafe","multiplyAndAddUnsafe","px","py","pz","fromPrivateKey","weierstrassN","secp256k1_CURVE","secp256k1_ENDO","Fpk1","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","curveDef","defHash","createCurve","generateKeypair","privateScalar","isOnCurve","properties","SOLANA_SCHEMA","decodeUnchecked","_PublicKey","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","unique","toBase58","zeroPad","toStringTag","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","address","nonce","seedsWithNonce","findProgramAddress","pubkeyData","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","maskedPrefix","addressTableLookupsCount","VersionedMessage","deserializeMessageVersion","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_getMessageSignednessErrors","missing","invalid","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","transactionLogs","transactionError","cachedLogs","getLogs","resolve","getTransaction","then","tx","logMessages","catch","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NONCE_ACCOUNT_LENGTH","bigIntLayout","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","createAccount","lamports","space","fromPubkey","newAccountPubkey","transfer","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","createNonceAccount","noncePubkey","initParams","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","newAuthorizedPubkey","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","getSlot","slot","MS_PER_SLOT","fetch","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetRecentPrioritizationFeesResult","epoch","effectiveSlot","amount","postBalance","commission","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","ParsedInstructionStruct","PartiallyDecodedInstructionStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","byIdentity","firstSlot","lastSlot","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","ConfirmationStatus","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","costUnits","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","LogsResult","previousBlockhash","parentSlot","rewards","numTransactions","numSlots","samplePeriodSecs","feeCalculator","lamportsPerSignature","Keypair","keypair","_keypair","generate","fromSecretKey","computedPublicKey","ii","fromSeed","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","publicKeyCreate","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","startsWith","ethAddressOffset","ethAddressInstructionIndex","pkey","msgHash","privKey","ecdsaSign","_Lockup","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","initialize","stakePubkey","maybeLockup","staker","withdrawer","delegate","authorize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorizeWithSeed","authorityBase","authoritySeed","authorityOwner","splitInstruction","splitStakePubkey","rentExemptReserve","splitWithSeed","merge","sourceStakePubKey","withdraw","deactivate","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteInit","UpdateValidatorIdentity","voteAuthorizeWithSeedArgs","Voter","VoteProgram","initializeAccount","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","website","details","iconUrl","keybaseUsername","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","th","tl","Int32Array","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den2","den4","den6","unpackneg","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","seedLength","signatureLength","hashLength","setPRNG"],"sourceRoot":""}