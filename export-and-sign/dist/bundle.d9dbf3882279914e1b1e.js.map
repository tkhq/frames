{"version":3,"file":"bundle.d9dbf3882279914e1b1e.js","mappings":"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","sources":["webpack://export-tests/webpack/runtime/chunk loaded","webpack://export-tests/webpack/runtime/create fake namespace object","webpack://export-tests/webpack/runtime/load script","webpack://export-tests/./src/turnkey-core.js","webpack://export-tests/./src/event-handlers.js","webpack://export-tests/./src/crypto-utils.js","webpack://export-tests/./src/index.js","webpack://export-tests/webpack/bootstrap","webpack://export-tests/webpack/runtime/compat get default export","webpack://export-tests/webpack/runtime/define property getters","webpack://export-tests/webpack/runtime/ensure chunk","webpack://export-tests/webpack/runtime/get javascript chunk filename","webpack://export-tests/webpack/runtime/get mini-css chunk filename","webpack://export-tests/webpack/runtime/hasOwnProperty shorthand","webpack://export-tests/webpack/runtime/make namespace object","webpack://export-tests/webpack/runtime/node module decorator","webpack://export-tests/webpack/runtime/publicPath","webpack://export-tests/webpack/runtime/jsonp chunk loading","webpack://export-tests/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"export-tests:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/**\n * Turnkey Core Module\n * Contains all the core cryptographic and utility functions\n */\n\n/** constant for LocalStorage */\nconst TURNKEY_EMBEDDED_KEY = \"TURNKEY_EMBEDDED_KEY\";\nconst TURNKEY_SETTINGS = \"TURNKEY_SETTINGS\";\n/** 48 hours in milliseconds */\nconst TURNKEY_EMBEDDED_KEY_TTL_IN_MILLIS = 1000 * 60 * 60 * 48;\nconst TURNKEY_EMBEDDED_KEY_ORIGIN = \"TURNKEY_EMBEDDED_KEY_ORIGIN\";\n\nlet parentFrameMessageChannelPort = null;\n\n/* Security functions */\n\nfunction isDoublyIframed() {\n  if (window.location.ancestorOrigins !== undefined) {\n    // Does not exist in IE and firefox.\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Location/ancestorOrigins for how this works\n    return window.location.ancestorOrigins.length > 1;\n  } else {\n    return window.parent !== window.top;\n  }\n}\n\nfunction setOrigin(\n  origin,\n  ttl = TURNKEY_EMBEDDED_KEY_TTL_IN_MILLIS\n) {\n  setItemWithExpiry(TURNKEY_EMBEDDED_KEY_ORIGIN, origin, ttl);\n}\n\nfunction getOrigin() {\n  return getItemWithExpiry(TURNKEY_EMBEDDED_KEY_ORIGIN);\n}\n\nfunction checkOrigin(origin) {\n  const storedOrigin = getOrigin();\n  if (storedOrigin !== origin) {\n    throw new Error(\n      `Origin mismatch. Expected: ${origin}. Found: ${storedOrigin}.`\n    );\n  }\n}\n\n// Helper to parse a private key into a Solana base58 private key\n// This shouldn't be needed in the case that a Turnkey wallet account is exported with the address format \"SOLANA\"\nfunction parsePrivateKey(privateKey) {\n  if (Array.isArray(privateKey)) {\n    return new Uint8Array(privateKey);\n  }\n\n  if (typeof privateKey === \"string\") {\n    // Remove 0x prefix if present\n    if (privateKey.startsWith(\"0x\")) {\n      privateKey = privateKey.slice(2);\n    }\n\n    // Check if it's hex format (64 characters, only hex chars)\n    if (privateKey.length === 64 && /^[0-9a-fA-F]+$/.test(privateKey)) {\n      // Hex format\n      return uint8arrayFromHexString(privateKey);\n    }\n\n    // Assume it's base58 format\n    try {\n      return base58Decode(privateKey);\n    } catch (error) {\n      throw new Error(\n        \"Invalid private key format. Use hex (64 chars) or base58 format.\"\n      );\n    }\n  }\n\n  throw new Error(\n    \"Private key must be a string (hex/base58) or number array\"\n  );\n}\n\n/*\n * Loads the quorum public key as a CryptoKey.\n */\nasync function loadQuorumKey(quorumPublic) {\n  return await crypto.subtle.importKey(\n    \"raw\",\n    quorumPublic,\n    {\n      name: \"ECDSA\",\n      namedCurve: \"P-256\",\n    },\n    true,\n    [\"verify\"]\n  );\n}\n\n/**\n * Creates a new public/private key pair and persists it in localStorage\n */\nasync function initEmbeddedKey(origin = null) {\n  if (isDoublyIframed()) {\n    throw new Error(\"Doubly iframed\");\n  }\n  const retrievedKey = await getEmbeddedKey();\n  if (retrievedKey === null) {\n    const targetKey = await generateTargetKey();\n    setEmbeddedKey(targetKey);\n  }\n  // Nothing to do, key is correctly initialized!\n}\n\n/*\n * Generate a key to encrypt to and export it as a JSON Web Key.\n */\nasync function generateTargetKey() {\n  const p256key = await crypto.subtle.generateKey(\n    {\n      name: \"ECDH\",\n      namedCurve: \"P-256\",\n    },\n    true,\n    [\"deriveBits\"]\n  );\n\n  return await crypto.subtle.exportKey(\"jwk\", p256key.privateKey);\n}\n\n/**\n * Gets the current embedded private key JWK. Returns `null` if not found.\n */\nfunction getEmbeddedKey() {\n  const jwtKey = getItemWithExpiry(TURNKEY_EMBEDDED_KEY);\n  return jwtKey ? JSON.parse(jwtKey) : null;\n}\n\n/**\n * Sets the embedded private key JWK with the default expiration time.\n * @param {JsonWebKey} targetKey\n */\nfunction setEmbeddedKey(targetKey) {\n  setItemWithExpiry(\n    TURNKEY_EMBEDDED_KEY,\n    JSON.stringify(targetKey),\n    TURNKEY_EMBEDDED_KEY_TTL_IN_MILLIS\n  );\n}\n\nfunction setParentFrameMessageChannelPort(port) {\n  parentFrameMessageChannelPort = port;\n}\n\n/**\n * Resets the current embedded private key JWK.\n */\nfunction onResetEmbeddedKey() {\n  window.localStorage.removeItem(TURNKEY_EMBEDDED_KEY);\n  window.localStorage.removeItem(TURNKEY_EMBEDDED_KEY_ORIGIN);\n}\n\n/**\n * Gets the current settings.\n */\nfunction getSettings() {\n  const settings = window.localStorage.getItem(TURNKEY_SETTINGS);\n  return settings ? JSON.parse(settings) : null;\n}\n\n/**\n * Sets the settings object.\n * @param {Object} settings\n */\nfunction setSettings(settings) {\n  window.localStorage.setItem(\n    TURNKEY_SETTINGS,\n    JSON.stringify(settings)\n  );\n}\n\n/**\n * Set an item in localStorage with an expiration time\n * @param {string} key\n * @param {string} value\n * @param {number} ttl expiration time in milliseconds\n */\nfunction setItemWithExpiry(key, value, ttl) {\n  const now = new Date();\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttl,\n  };\n  window.localStorage.setItem(key, JSON.stringify(item));\n}\n\n/**\n * Get an item from localStorage. Returns `null` and\n * removes the item from localStorage if expired or\n * expiry time is missing.\n * @param {string} key\n */\nfunction getItemWithExpiry(key) {\n  const itemStr = window.localStorage.getItem(key);\n  if (!itemStr) {\n    return null;\n  }\n  const item = JSON.parse(itemStr);\n  if (!item.hasOwnProperty(\"expiry\") || !item.hasOwnProperty(\"value\")) {\n    window.localStorage.removeItem(key);\n    return null;\n  }\n  const now = new Date();\n  if (now.getTime() > item.expiry) {\n    window.localStorage.removeItem(key);\n    return null;\n  }\n  return item.value;\n}\n\n/**\n * Takes a hex string (e.g. \"e4567ab\") and returns an array buffer (Uint8Array)\n * @param {string} hexString\n * @returns {Uint8Array}\n */\nfunction uint8arrayFromHexString(hexString) {\n  var hexRegex = /^[0-9A-Fa-f]+$/;\n  if (\n    !hexString ||\n    hexString.length % 2 != 0 ||\n    !hexRegex.test(hexString)\n  ) {\n    throw new Error(\"cannot create uint8array from invalid hex string\");\n  }\n  return new Uint8Array(\n    hexString.match(/../g).map((h) => parseInt(h, 16))\n  );\n}\n\n/**\n * Takes a Uint8Array and returns a hex string\n * @param {Uint8Array} buffer\n * @return {string}\n */\nfunction uint8arrayToHexString(buffer) {\n  return [...buffer]\n    .map((x) => x.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n}\n\n/**\n * Function to normalize padding of byte array with 0's to a target length\n */\nfunction normalizePadding(byteArray, targetLength) {\n  const paddingLength = targetLength - byteArray.length;\n\n  // Add leading 0's to array\n  if (paddingLength > 0) {\n    const padding = new Uint8Array(paddingLength).fill(0);\n    return new Uint8Array([...padding, ...byteArray]);\n  }\n\n  // Remove leading 0's from array\n  if (paddingLength < 0) {\n    const expectedZeroCount = paddingLength * -1;\n    let zeroCount = 0;\n    for (\n      let i = 0;\n      i < expectedZeroCount && i < byteArray.length;\n      i++\n    ) {\n      if (byteArray[i] === 0) {\n        zeroCount++;\n      }\n    }\n    // Check if the number of zeros found equals the number of zeroes expected\n    if (zeroCount !== expectedZeroCount) {\n      throw new Error(\n        `invalid number of starting zeroes. Expected number of zeroes: ${expectedZeroCount}. Found: ${zeroCount}.`\n      );\n    }\n    return byteArray.slice(\n      expectedZeroCount,\n      expectedZeroCount + targetLength\n    );\n  }\n  return byteArray;\n}\n\n/**\n * Additional Associated Data (AAD) in the format dictated by the enclave_encrypt crate.\n */\nfunction additionalAssociatedData(senderPubBuf, receiverPubBuf) {\n  const s = Array.from(new Uint8Array(senderPubBuf));\n  const r = Array.from(new Uint8Array(receiverPubBuf));\n  return new Uint8Array([...s, ...r]);\n}\n\n/**\n * Converts an ASN.1 DER-encoded ECDSA signature to the raw format that WebCrypto uses.\n */\nfunction fromDerSignature(derSignature) {\n  const derSignatureBuf = uint8arrayFromHexString(derSignature);\n\n  // Check and skip the sequence tag (0x30)\n  let index = 2;\n\n  // Parse 'r' and check for integer tag (0x02)\n  if (derSignatureBuf[index] !== 0x02) {\n    throw new Error(\n      \"failed to convert DER-encoded signature: invalid tag for r\"\n    );\n  }\n  index++; // Move past the INTEGER tag\n  const rLength = derSignatureBuf[index];\n  index++; // Move past the length byte\n  const r = derSignatureBuf.slice(index, index + rLength);\n  index += rLength; // Move to the start of s\n\n  // Parse 's' and check for integer tag (0x02)\n  if (derSignatureBuf[index] !== 0x02) {\n    throw new Error(\n      \"failed to convert DER-encoded signature: invalid tag for s\"\n    );\n  }\n  index++; // Move past the INTEGER tag\n  const sLength = derSignatureBuf[index];\n  index++; // Move past the length byte\n  const s = derSignatureBuf.slice(index, index + sLength);\n\n  // Normalize 'r' and 's' to 32 bytes each\n  const rPadded = normalizePadding(r, 32);\n  const sPadded = normalizePadding(s, 32);\n\n  // Concatenate and return the raw signature\n  return new Uint8Array([...rPadded, ...sPadded]);\n}\n\n/**\n * Function to verify enclave signature on import bundle received from the server.\n * @param {string} enclaveQuorumPublic uncompressed public key for the quorum key which produced the signature\n * @param {string} publicSignature signature bytes encoded as a hexadecimal string\n * @param {string} signedData signed bytes encoded as a hexadecimal string. This could be public key bytes directly, or JSON-encoded bytes\n */\nasync function verifyEnclaveSignature(\n  enclaveQuorumPublic,\n  publicSignature,\n  signedData\n) {\n  /** Turnkey Signer enclave's public keys */\n  const TURNKEY_SIGNERS_ENCLAVES = {\n    prod: \"04cf288fe433cc4e1aa0ce1632feac4ea26bf2f5a09dcfe5a42c398e06898710330f0572882f4dbdf0f5304b8fc8703acd69adca9a4bbf7f5d00d20a5e364b2569\",\n    preprod:\n      \"04f3422b8afbe425d6ece77b8d2469954715a2ff273ab7ac89f1ed70e0a9325eaa1698b4351fd1b23734e65c0b6a86b62dd49d70b37c94606aac402cbd84353212\",\n  };\n  const TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY =\n    TURNKEY_SIGNERS_ENCLAVES[\"__TURNKEY_SIGNERS_ENCLAVES__\"];\n  if (TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY === undefined) {\n    throw new Error(\n      \"Configuration error: TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY is undefined\"\n    );\n  }\n\n  // todo(olivia): throw error if enclave quorum public is null once server changes are deployed\n  if (enclaveQuorumPublic) {\n    if (\n      enclaveQuorumPublic !== TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY\n    ) {\n      throw new Error(\n        `enclave quorum public keys from client and bundle do not match. Client: ${TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY}. Bundle: ${enclaveQuorumPublic}.`\n      );\n    }\n  }\n\n  const encryptionQuorumPublicBuf = new Uint8Array(\n    uint8arrayFromHexString(TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY)\n  );\n  const quorumKey = await loadQuorumKey(encryptionQuorumPublicBuf);\n  if (!quorumKey) {\n    throw new Error(\"failed to load quorum key\");\n  }\n\n  // The ECDSA signature is ASN.1 DER encoded but WebCrypto uses raw format\n  const publicSignatureBuf = fromDerSignature(publicSignature);\n  const signedDataBuf = uint8arrayFromHexString(signedData);\n  return await crypto.subtle.verify(\n    { name: \"ECDSA\", hash: \"SHA-256\" },\n    quorumKey,\n    publicSignatureBuf,\n    signedDataBuf\n  );\n}\n\n/**\n * Function to send a message.\n *\n * If this page is embedded as an iframe we'll send a postMessage\n * in one of two ways depending on the version of @turnkey/iframe-stamper:\n *   1. newer versions (>=v2.1.0) pass a MessageChannel MessagePort from the parent frame for postMessages.\n *   2. older versions (<v2.1.0) still use the contentWindow so we will postMessage to the window.parent for backwards compatibility.\n *\n * Otherwise we'll display it in the DOM.\n * @param type message type. Can be \"PUBLIC_KEY_CREATED\" or \"BUNDLE_INJECTED\"\n * @param value message value\n * @param requestId serves as an idempotency key to match incoming requests. Backwards compatible: if not provided, it isn't passed in.\n */\nfunction sendMessageUp(type, value, requestId) {\n  const message = {\n    type: type,\n    value: value,\n  };\n\n  // Only include requestId if it was provided\n  if (requestId) {\n    message.requestId = requestId;\n  }\n\n  if (parentFrameMessageChannelPort) {\n    parentFrameMessageChannelPort.postMessage(message);\n  } else if (window.parent !== window) {\n    window.parent.postMessage(\n      {\n        type: type,\n        value: value,\n      },\n      \"*\"\n    );\n  }\n  logMessage(`⬆️ Sent message ${type}: ${value}`);\n}\n\n/**\n * Function to log a message and persist it in the page's DOM.\n */\nfunction logMessage(content) {\n  const messageLog = document.getElementById(\"message-log\");\n  const message = document.createElement(\"p\");\n  message.innerText = content;\n  messageLog.appendChild(message);\n}\n\n/**\n * Convert a JSON Web Key private key to a public key and export the public\n * key in raw format.\n * @return {Uint8array}\n */\nasync function p256JWKPrivateToPublic(jwkPrivate) {\n  // make a copy so we don't modify the underlying object\n  const jwkPrivateCopy = { ...jwkPrivate };\n  // change jwk so it will be imported as a public key\n  delete jwkPrivateCopy.d;\n  jwkPrivateCopy.key_ops = [\"verify\"];\n\n  const publicKey = await window.crypto.subtle.importKey(\n    \"jwk\",\n    jwkPrivateCopy,\n    { name: \"ECDSA\", namedCurve: \"P-256\" },\n    true,\n    [\"verify\"]\n  );\n  const buffer = await crypto.subtle.exportKey(\"raw\", publicKey);\n  return new Uint8Array(buffer);\n}\n\n/**\n * Encodes a buffer into a base58-encoded string.\n * @param {Uint8Array} bytes The buffer to encode.\n * @return {string} The base58-encoded string.\n */\nfunction base58Encode(bytes) {\n  // See https://en.bitcoin.it/wiki/Base58Check_encoding\n  const alphabet =\n    \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n  let result = \"\";\n  let digits = [0];\n  for (let i = 0; i < bytes.length; i++) {\n    let carry = bytes[i];\n    for (let j = 0; j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % 58;\n      carry = (carry / 58) | 0;\n    }\n\n    while (carry > 0) {\n      digits.push(carry % 58);\n      carry = (carry / 58) | 0;\n    }\n  }\n  // Convert digits to a base58 string\n  for (let k = 0; k < digits.length; k++) {\n    result = alphabet[digits[k]] + result;\n  }\n\n  // Add '1' for each leading 0 byte\n  for (let i = 0; bytes[i] === 0 && i < bytes.length - 1; i++) {\n    result = \"1\" + result;\n  }\n  return result;\n}\n\n/**\n * Decodes a base58-encoded string into a buffer\n * This function throws an error when the string contains invalid characters.\n * @param {string} s The base58-encoded string.\n * @return {Uint8Array} The decoded buffer.\n */\nfunction base58Decode(s) {\n  // See https://en.bitcoin.it/wiki/Base58Check_encoding\n  var alphabet =\n    \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n  var decoded = BigInt(0);\n  var decodedBytes = [];\n  var leadingZeros = [];\n  for (var i = 0; i < s.length; i++) {\n    if (alphabet.indexOf(s[i]) === -1) {\n      throw new Error(\n        `cannot base58-decode: ${s[i]} isn't a valid character`\n      );\n    }\n    var carry = alphabet.indexOf(s[i]);\n\n    // If the current base58 digit is 0, append a 0 byte.\n    // \"i == leadingZeros.length\" can only be true if we have not seen non-zero bytes so far.\n    // If we had seen a non-zero byte, carry wouldn't be 0, and i would be strictly more than `leadingZeros.length`\n    if (carry == 0 && i === leadingZeros.length) {\n      leadingZeros.push(0);\n    }\n\n    var j = 0;\n    while (j < decodedBytes.length || carry > 0) {\n      var currentByte = decodedBytes[j];\n\n      // shift the current byte 58 units and add the carry amount\n      // (or just add the carry amount if this is a new byte -- undefined case)\n      if (currentByte === undefined) {\n        currentByte = carry;\n      } else {\n        currentByte = currentByte * 58 + carry;\n      }\n\n      // find the new carry amount (1-byte shift of current byte value)\n      carry = currentByte >> 8;\n      // reset the current byte to the remainder (the carry amount will pass on the overflow)\n      decodedBytes[j] = currentByte % 256;\n      j++;\n    }\n  }\n\n  var result = leadingZeros.concat(decodedBytes.reverse());\n  return new Uint8Array(result);\n}\n\n/**\n * Returns a private key from private key bytes, represented in\n * the encoding and format specified by `keyFormat`. Defaults to\n * hex-encoding if `keyFormat` isn't passed.\n * @param {Uint8Array} privateKeyBytes\n * @param {string} keyFormat Can be \"HEXADECIMAL\" or \"SOLANA\"\n */\nasync function encodeKey(privateKeyBytes, keyFormat, publicKeyBytes) {\n  switch (keyFormat) {\n    case \"SOLANA\":\n      if (!publicKeyBytes) {\n        throw new Error(\n          \"public key must be specified for SOLANA key format\"\n        );\n      }\n      if (privateKeyBytes.length !== 32) {\n        throw new Error(\n          `invalid private key length. Expected 32 bytes. Got ${privateKeyBytes.length}.`\n        );\n      }\n      if (publicKeyBytes.length !== 32) {\n        throw new Error(\n          `invalid public key length. Expected 32 bytes. Got ${publicKeyBytes.length}.`\n        );\n      }\n      const concatenatedBytes = new Uint8Array(64);\n      concatenatedBytes.set(privateKeyBytes, 0);\n      concatenatedBytes.set(publicKeyBytes, 32);\n      return base58Encode(concatenatedBytes);\n    case \"HEXADECIMAL\":\n      return \"0x\" + uint8arrayToHexString(privateKeyBytes);\n    default:\n      console.warn(\n        `invalid key format: ${keyFormat}. Defaulting to HEXADECIMAL.`\n      );\n      return \"0x\" + uint8arrayToHexString(privateKeyBytes);\n  }\n}\n\n/**\n * Returns a UTF-8 encoded wallet mnemonic + newline optional passphrase\n * from wallet bytes.\n * @param {Uint8Array} walletBytes\n */\nfunction encodeWallet(walletBytes) {\n  const decoder = new TextDecoder(\"utf-8\");\n  const wallet = decoder.decode(walletBytes);\n  let mnemonic;\n  let passphrase = null;\n\n  if (wallet.includes(\"\\n\")) {\n    const parts = wallet.split(\"\\n\");\n    mnemonic = parts[0];\n    passphrase = parts[1];\n  } else {\n    mnemonic = wallet;\n  }\n\n  return {\n    mnemonic: mnemonic,\n    passphrase: passphrase,\n  };\n}\n\n/**\n * Returns the public key bytes for a hex-encoded Ed25519 private key.\n * @param {string} privateKeyHex\n */\nfunction getEd25519PublicKey(privateKeyHex) {\n  window.nobleEd25519.etc.sha512Sync = (...m) =>\n    window.nobleHashes.sha512(window.nobleEd25519.etc.concatBytes(...m));\n  return window.nobleEd25519.getPublicKey(privateKeyHex);\n}\n\n/**\n * Function to validate and sanitize the styles object using the accepted map of style keys and values (as regular expressions).\n * Any invalid style throws an error. Returns an object of valid styles.\n * @param {Object} styles\n * @return {Object}\n */\nfunction validateStyles(styles, element) {\n  const validStyles = {};\n\n  const cssValidationRegex = {\n    padding: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    margin: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    borderWidth: \"^(\\\\d+(px|em|rem) ?){1,4}$\",\n    borderStyle:\n      \"^(none|solid|dashed|dotted|double|groove|ridge|inset|outset)$\",\n    borderColor:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    borderRadius: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    fontSize:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax))$\",\n    fontWeight: \"^(normal|bold|bolder|lighter|\\\\d{3})$\",\n    fontFamily: '^[^\";<>]*$', // checks for the absence of some characters that could lead to CSS/HTML injection\n    color:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    backgroundColor:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    width:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|auto)$\",\n    height:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|auto)$\",\n    maxWidth:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|none)$\",\n    maxHeight:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|none)$\",\n    lineHeight:\n      \"^(\\\\d+(\\\\.\\\\d+)?(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|normal)$\",\n    boxShadow:\n      \"^(none|(\\\\d+(px|em|rem) ?){2,4} (#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)) ?(inset)?)$\",\n    textAlign: \"^(left|right|center|justify|initial|inherit)$\",\n    overflowWrap: \"^(normal|break-word|anywhere)$\",\n    wordWrap: \"^(normal|break-word)$\",\n    resize: \"^(none|both|horizontal|vertical|block|inline)$\",\n  };\n\n  Object.entries(styles).forEach(([property, value]) => {\n    const styleProperty = property.trim();\n    if (styleProperty.length === 0) {\n      throw new Error(\"css style property cannot be empty\");\n    }\n    const styleRegexStr = cssValidationRegex[styleProperty];\n    if (!styleRegexStr) {\n      throw new Error(\n        `invalid or unsupported css style property: \"${styleProperty}\"`\n      );\n    }\n    const styleRegex = new RegExp(styleRegexStr);\n    const styleValue = value.trim();\n    if (styleValue.length == 0) {\n      throw new Error(`css style for \"${styleProperty}\" is empty`);\n    }\n    const isValidStyle = styleRegex.test(styleValue);\n    if (!isValidStyle) {\n      throw new Error(\n        `invalid css style value for property \"${styleProperty}\"`\n      );\n    }\n    validStyles[styleProperty] = styleValue;\n  });\n\n  return validStyles;\n}\n\n/**\n * Function to apply settings on this page. For now, the only settings that can be applied\n * are for \"styles\". Upon successful application, return the valid, sanitized settings JSON string.\n * @param {string} settings\n * @return {string}\n */\nfunction applySettings(settings) {\n  const validSettings = {};\n  if (!settings) {\n    return JSON.stringify(validSettings);\n  }\n  const settingsObj = JSON.parse(settings);\n  if (settingsObj.styles) {\n    // Valid styles will be applied the \"key-div\" div HTML element.\n    const keyDivTextarea = document.getElementById(\"key-div\");\n    if (!keyDivTextarea) {\n      throw new Error(\n        \"no key-div HTML element found to apply settings to.\"\n      );\n    }\n\n    // Validate, sanitize, and apply the styles to the \"key-div\" div element.\n    const validStyles = validateStyles(settingsObj.styles);\n    Object.entries(validStyles).forEach(([key, value]) => {\n      keyDivTextarea.style[key] = value;\n    });\n\n    validSettings[\"styles\"] = validStyles;\n  }\n\n  return JSON.stringify(validSettings);\n}\n\nexport const TKHQ = {\n  initEmbeddedKey,\n  generateTargetKey,\n  setItemWithExpiry,\n  getItemWithExpiry,\n  getEmbeddedKey,\n  setEmbeddedKey,\n  onResetEmbeddedKey,\n  p256JWKPrivateToPublic,\n  base58Encode,\n  base58Decode,\n  encodeKey,\n  encodeWallet,\n  sendMessageUp,\n  logMessage,\n  uint8arrayFromHexString,\n  uint8arrayToHexString,\n  setParentFrameMessageChannelPort,\n  normalizePadding,\n  fromDerSignature,\n  additionalAssociatedData,\n  verifyEnclaveSignature,\n  getEd25519PublicKey,\n  applySettings,\n  validateStyles,\n  getSettings,\n  setSettings,\n  parsePrivateKey,\n};\n","import { TKHQ } from './turnkey-core.js';\nimport {\n  Keypair,\n  Transaction,\n  SystemProgram,\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Connection,\n  sendAndConfirmTransaction,\n  VersionedTransaction,\n} from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport naclUtil from 'tweetnacl-util';\n\n// persist the decrypted key in memory\nlet decryptedKey = null;\n\nconst DEFAULT_TTL = 24 * 60 * 60; // 24 hours\n\n/**\n * Hide every HTML element in <body> except any <script> elements.\n * Then append an element containing the hex-encoded raw private key.\n * @param {string} key\n */\nfunction displayKey(key) {\n  Array.from(document.body.children).forEach((child) => {\n    if (child.tagName !== \"SCRIPT\" && child.id !== \"key-div\") {\n      child.style.display = \"none\";\n    }\n  });\n\n  const style = {\n    border: \"none\",\n    color: \"#555b64\",\n    fontSize: \".875rem\",\n    lineHeight: \"1.25rem\",\n    overflowWrap: \"break-word\",\n    textAlign: \"left\",\n  };\n\n  // Create a new div with the key material and append the new div to the body\n  const keyDiv = document.getElementById(\"key-div\");\n  keyDiv.innerText = key;\n  for (let styleKey in style) {\n    keyDiv.style[styleKey] = style[styleKey];\n  }\n  document.body.appendChild(keyDiv);\n  TKHQ.applySettings(TKHQ.getSettings());\n}\n\n/**\n * Parse and decrypt the export bundle.\n * The `bundle` param is a JSON string of the encapsulated public\n * key, encapsulated public key signature, and the ciphertext.\n * @param {string} bundle\n * @param {string} organizationId\n * @param {Function} HpkeDecrypt\n */\nasync function decryptBundle(bundle, organizationId, HpkeDecrypt) {\n  let encappedKeyBuf;\n  let ciphertextBuf;\n  let verified;\n\n  // Parse the import bundle\n  const bundleObj = JSON.parse(bundle);\n  switch (bundleObj.version) {\n    case \"v1.0.0\":\n      // Validate fields exist\n      if (!bundleObj.data) {\n        throw new Error('missing \"data\" in bundle');\n      }\n      if (!bundleObj.dataSignature) {\n        throw new Error('missing \"dataSignature\" in bundle');\n      }\n      if (!bundleObj.enclaveQuorumPublic) {\n        throw new Error('missing \"enclaveQuorumPublic\" in bundle');\n      }\n\n      // Verify enclave signature\n      if (!TKHQ.verifyEnclaveSignature) {\n        throw new Error(\"method not loaded\");\n      }\n      verified = await TKHQ.verifyEnclaveSignature(\n        bundleObj.enclaveQuorumPublic,\n        bundleObj.dataSignature,\n        bundleObj.data\n      );\n      if (!verified) {\n        throw new Error(`failed to verify enclave signature: ${bundle}`);\n      }\n\n      // Parse the signed data. The data is produced by JSON encoding followed by hex encoding. We reverse this here.\n      const signedData = JSON.parse(\n        new TextDecoder().decode(\n          TKHQ.uint8arrayFromHexString(bundleObj.data)\n        )\n      );\n\n      // Validate fields match\n      if (!organizationId) {\n        // todo: throw error if organization id is undefined once we've fully transitioned to v1.0.0 server messages and v2.0.0 iframe-stamper\n        console.warn(\n          'we highly recommend a version of @turnkey/iframe-stamper >= v2.0.0 to pass \"organizationId\" for security purposes.'\n        );\n      } else if (\n        !signedData.organizationId ||\n        signedData.organizationId !== organizationId\n      ) {\n        throw new Error(\n          `organization id does not match expected value. Expected: ${organizationId}. Found: ${signedData.organizationId}.`\n        );\n      }\n\n      if (!signedData.encappedPublic) {\n        throw new Error('missing \"encappedPublic\" in bundle signed data');\n      }\n      if (!signedData.ciphertext) {\n        throw new Error('missing \"ciphertext\" in bundle signed data');\n      }\n      encappedKeyBuf = TKHQ.uint8arrayFromHexString(\n        signedData.encappedPublic\n      );\n      ciphertextBuf = TKHQ.uint8arrayFromHexString(signedData.ciphertext);\n      break;\n    default:\n      throw new Error(`unsupported version: ${bundleObj.version}`);\n  }\n\n  // Decrypt the ciphertext\n  const embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n  return await HpkeDecrypt({\n    ciphertextBuf,\n    encappedKeyBuf,\n    receiverPrivJwk: embeddedKeyJwk,\n  });\n}\n\n/**\n * Function triggered when INJECT_KEY_EXPORT_BUNDLE event is received.\n * @param {string} bundle\n * @param {string} keyFormat\n * @param {string} organizationId\n * @param {string} requestId\n * @param {Function} HpkeDecrypt\n */\nasync function onInjectKeyBundle(\n  bundle,\n  keyFormat,\n  organizationId,\n  requestId,\n  HpkeDecrypt\n) {\n  // Decrypt the export bundle\n  const keyBytes = await decryptBundle(bundle, organizationId, HpkeDecrypt);\n\n  // Reset embedded key after using for decryption\n  TKHQ.onResetEmbeddedKey();\n\n  // Parse the decrypted key bytes\n  var key;\n  const privateKeyBytes = new Uint8Array(keyBytes);\n  if (keyFormat === \"SOLANA\") {\n    const privateKeyHex = TKHQ.uint8arrayToHexString(\n      privateKeyBytes.subarray(0, 32)\n    );\n    const publicKeyBytes = TKHQ.getEd25519PublicKey(privateKeyHex);\n    key = await TKHQ.encodeKey(\n      privateKeyBytes,\n      keyFormat,\n      publicKeyBytes\n    );\n  } else {\n    key = await TKHQ.encodeKey(privateKeyBytes, keyFormat);\n  }\n\n  // Display only the key\n  displayKey(key);\n\n  // Set in memory\n  decryptedKey = {\n    rawBytes: keyBytes,\n    format: keyFormat,\n    expiry: new Date().getTime() + DEFAULT_TTL,\n  };\n\n  // Send up BUNDLE_INJECTED message\n  TKHQ.sendMessageUp(\"BUNDLE_INJECTED\", true, requestId);\n}\n\n/**\n * Function triggered when INJECT_WALLET_EXPORT_BUNDLE event is received.\n * @param {string} bundle\n * @param {string} organizationId\n * @param {string} requestId\n * @param {Function} HpkeDecrypt\n */\nasync function onInjectWalletBundle(bundle, organizationId, requestId, HpkeDecrypt) {\n  // Decrypt the export bundle\n  const walletBytes = await decryptBundle(bundle, organizationId, HpkeDecrypt);\n\n  // Reset embedded key after using for decryption\n  TKHQ.onResetEmbeddedKey();\n\n  // Parse the decrypted wallet bytes\n  const wallet = TKHQ.encodeWallet(new Uint8Array(walletBytes));\n\n  // Display only the wallet's mnemonic\n  displayKey(wallet.mnemonic);\n\n  // Send up BUNDLE_INJECTED message\n  TKHQ.sendMessageUp(\"BUNDLE_INJECTED\", true, requestId);\n}\n\n/**\n * Function triggered when APPLY_SETTINGS event is received.\n * For now, the only settings that can be applied are for \"styles\".\n * Persist them in local storage so they can be applied on every\n * page load.\n * @param {string} settings: JSON-stringified settings\n * @param {string} requestId\n */\nasync function onApplySettings(settings, requestId) {\n  // Apply settings\n  const validSettings = TKHQ.applySettings(settings);\n\n  // Persist in local storage\n  TKHQ.setSettings(validSettings);\n\n  // Send up SETTINGS_APPLIED message\n  TKHQ.sendMessageUp(\"SETTINGS_APPLIED\", true, requestId);\n}\n\n/**\n * Function triggered when SIGN_TRANSACTION event is received.\n * @param {string} transaction (serialized)\n * @param {string} requestId\n */\nasync function onSignTransaction(serializedTransaction, requestId) {\n  if (!decryptedKey) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key bytes not found. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n  }\n\n  // Create a keypair from the decrypted key bytes\n  const keypair = await createSolanaKeypair(\n    Array.from(new Uint8Array(decryptedKey.rawBytes))\n  );\n\n  const transactionWrapper = JSON.parse(serializedTransaction);\n  const transactionToSign = transactionWrapper.transaction;\n  const transactionType = transactionWrapper.type;\n\n  var signedTransaction;\n\n  if (transactionType === \"SOLANA\") {\n    const transaction = VersionedTransaction.deserialize(\n      TKHQ.uint8arrayFromHexString(transactionToSign)\n    );\n\n    // Sign the transaction\n    transaction.sign([keypair]);\n\n    // Serialize the signed transaction\n    signedTransaction = transaction.serialize();\n  } else {\n    // not yet supported\n    throw new Error(\"unsupported transaction type\");\n  }\n\n  const signedTransactionHex =\n    TKHQ.uint8arrayToHexString(signedTransaction);\n\n  // Send up TRANSACTION_SIGNED message\n  TKHQ.sendMessageUp(\n    \"TRANSACTION_SIGNED\",\n    signedTransactionHex,\n    requestId\n  );\n}\n\n/**\n * Function triggered when SIGN_MESSAGE event is received.\n * @param {string} message (serialized, JSON-stringified)\n * @param {string} requestId\n */\nasync function onSignMessage(serializedMessage, requestId) {\n  if (!decryptedKey) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key bytes not found. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n  }\n\n  const messageWrapper = JSON.parse(serializedMessage);\n  const messageToSign = messageWrapper.message;\n  const messageType = messageWrapper.type;\n  const messageBytes = new TextEncoder().encode(messageToSign);\n\n  var signatureHex;\n\n  if (messageType === \"SOLANA\") {\n    // Create a keypair from the decrypted key bytes\n    const keypair = await createSolanaKeypair(\n      Array.from(new Uint8Array(decryptedKey.rawBytes))\n    );\n\n    const signature = nacl.sign.detached(messageBytes, keypair.secretKey);\n    const result = nacl.sign.detached.verify(\n      messageBytes,\n      signature,\n      keypair.publicKey.toBytes()\n    );\n\n    signatureHex = TKHQ.uint8arrayToHexString(signature);\n  } else {\n    // not yet supported\n    throw new Error(\"unsupported message type\");\n  }\n\n  // Send up MESSAGE_SIGNED message\n  TKHQ.sendMessageUp(\"MESSAGE_SIGNED\", signatureHex, requestId);\n}\n\n/**\n * Function triggered when CLEAR_EMBEDDED_PRIVATE_KEY event is received.\n * @param {string} requestId\n */\nasync function onClearEmbeddedPrivateKey(requestId) {\n  decryptedKey = {}; // blank out the in-memory key\n\n  TKHQ.sendMessageUp(\"EMBEDDED_PRIVATE_KEY_CLEARED\", true, requestId);\n}\n\n// Solana utility functions\nasync function createSolanaKeypair(privateKey) {\n  const privateKeyBytes = TKHQ.parsePrivateKey(privateKey);\n\n  let keypair;\n  if (privateKeyBytes.length === 32) {\n    // 32-byte private key (seed)\n    keypair = Keypair.fromSeed(privateKeyBytes);\n  } else if (privateKeyBytes.length === 64) {\n    // 64-byte secret key (private + public)\n    keypair = Keypair.fromSecretKey(privateKeyBytes);\n  } else {\n    throw new Error(\n      `Invalid private key length: ${privateKeyBytes.length}. Expected 32 or 64 bytes.`\n    );\n  }\n\n  return keypair;\n}\n\nasync function createTransferTransaction(\n  fromKeypair,\n  toAddress,\n  amountLamports,\n  connection\n) {\n  const transaction = new Transaction().add(\n    SystemProgram.transfer({\n      fromPubkey: fromKeypair.publicKey,\n      toPubkey: new PublicKey(toAddress),\n      lamports: amountLamports,\n    })\n  );\n\n  transaction.feePayer = fromKeypair.publicKey;\n  const { blockhash } = await connection.getRecentBlockhash();\n\n  transaction.recentBlockhash = blockhash;\n\n  return transaction;\n}\n\nasync function getAccountBalance(connection, publicKey) {\n  const balance = await connection.getBalance(publicKey);\n  return balance;\n}\n\n/**\n * Attempts to create a valid transaction from potentially incomplete transaction data\n * @param {Uint8Array} transactionBytes - Raw transaction bytes\n * @param {Keypair} keypair - The keypair to use for signing\n * @returns {Transaction} - A valid transaction object\n */\nasync function createValidTransactionFromBytes(\n  transactionBytes,\n  keypair\n) {\n  try {\n    // First, try to deserialize as-is\n    return Transaction.from(transactionBytes);\n  } catch (error) {\n    TKHQ.logMessage(`⚠️ Direct deserialization failed: ${error.message}`);\n\n    // If that fails, try to create a new transaction and copy over what we can\n    const newTransaction = new Transaction();\n\n    try {\n      // Try to extract what we can from the original bytes\n      // This is a fallback approach for incomplete transactions\n      TKHQ.logMessage(\n        `🔄 Attempting to create valid transaction from incomplete data...`\n      );\n\n      // Set the fee payer to the keypair's public key\n      newTransaction.feePayer = keypair.publicKey;\n\n      // Try to get a recent blockhash (this requires RPC connection)\n      // For now, we'll create a placeholder\n      newTransaction.recentBlockhash = \"11111111111111111111111111111111\";\n\n      TKHQ.logMessage(\n        `✅ Created transaction with fee payer: ${newTransaction.feePayer.toBase58()}`\n      );\n      TKHQ.logMessage(\n        `⚠️ Note: This is a minimal transaction. You may need to add instructions manually.`\n      );\n\n      return newTransaction;\n    } catch (fallbackError) {\n      throw new Error(\n        `Unable to create valid transaction: ${fallbackError.message}`\n      );\n    }\n  }\n}\n\n/**\n * DOM Event handlers to power the export flow in standalone mode\n * Instead of receiving events from the parent page, forms trigger them.\n * This is useful for debugging as well.\n */\nfunction addDOMEventListeners() {\n  // only support injected keys, not wallets\n  document.getElementById(\"inject-key\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"INJECT_KEY_EXPORT_BUNDLE\",\n        value: document.getElementById(\"key-export-bundle\").value,\n        keyFormat: document.getElementById(\"key-export-format\").value,\n        organizationId: document.getElementById(\"key-organization-id\")\n          .value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"sign-transaction\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"SIGN_TRANSACTION\",\n        value: document.getElementById(\"transaction-to-sign\").value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"sign-message\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"SIGN_MESSAGE\",\n        value: document.getElementById(\"message-to-sign\").value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"reset\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({ type: \"RESET_EMBEDDED_KEY\" });\n    },\n    false\n  );\n\n  // Add wallet injection support\n  const injectWalletBtn = document.getElementById(\"inject-wallet\");\n  if (injectWalletBtn) {\n    injectWalletBtn.addEventListener(\n      \"click\",\n      async (e) => {\n        e.preventDefault();\n        window.postMessage({\n          type: \"INJECT_WALLET_EXPORT_BUNDLE\",\n          value: document.getElementById(\"wallet-export-bundle\").value,\n          organizationId: document.getElementById(\"wallet-organization-id\")\n            .value,\n        });\n      },\n      false\n    );\n  }\n}\n\n/**\n * Message Event Handlers to process messages from the parent frame\n */\nfunction createMessageEventListener(HpkeDecrypt) {\n  return async function messageEventListener(event) {\n    if (event.data && event.data[\"type\"] == \"INJECT_KEY_EXPORT_BUNDLE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}, ${event.data[\"keyFormat\"]}, ${event.data[\"organizationId\"]}`\n      );\n      try {\n        await onInjectKeyBundle(\n          event.data[\"value\"],\n          event.data[\"keyFormat\"],\n          event.data[\"organizationId\"],\n          event.data[\"requestId\"],\n          HpkeDecrypt\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"INJECT_WALLET_EXPORT_BUNDLE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}, ${event.data[\"organizationId\"]}`\n      );\n      try {\n        await onInjectWalletBundle(\n          event.data[\"value\"],\n          event.data[\"organizationId\"],\n          event.data[\"requestId\"],\n          HpkeDecrypt\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"APPLY_SETTINGS\") {\n      try {\n        await onApplySettings(event.data[\"value\"], event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"RESET_EMBEDDED_KEY\") {\n      TKHQ.logMessage(`⬇️ Received message ${event.data[\"type\"]}`);\n      try {\n        TKHQ.onResetEmbeddedKey();\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString());\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"SIGN_TRANSACTION\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}`\n      );\n      try {\n        await onSignTransaction(\n          event.data[\"value\"],\n          event.data[\"requestId\"]\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"SIGN_MESSAGE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}`\n      );\n      try {\n        await onSignMessage(event.data[\"value\"], event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"CLEAR_EMBEDDED_PRIVATE_KEY\") {\n      TKHQ.logMessage(`⬇️ Received message ${event.data[\"type\"]}`);\n      try {\n        await onClearEmbeddedPrivateKey(event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n  };\n}\n\n/**\n * Set up event handlers for both DOM and message events\n * @param {Function} HpkeDecrypt\n */\nexport function setupEventHandlers(HpkeDecrypt) {\n  const messageEventListener = createMessageEventListener(HpkeDecrypt);\n\n  // controllers to remove event listeners\n  const messageListenerController = new AbortController();\n  const turnkeyInitController = new AbortController();\n\n  // Add DOM event listeners for standalone mode\n  addDOMEventListeners();\n\n  // Add window message listener for iframe mode\n  window.addEventListener(\"message\", messageEventListener, {\n    capture: false,\n    signal: messageListenerController.signal,\n  });\n\n  // Handle MessageChannel initialization for iframe communication\n  window.addEventListener(\n    \"message\",\n    async function (event) {\n      /**\n       * @turnkey/iframe-stamper >= v2.1.0 is using a MessageChannel to communicate with the parent frame.\n       * The parent frame sends a TURNKEY_INIT_MESSAGE_CHANNEL event with the MessagePort.\n       * If we receive this event, we want to remove the message event listener that was added in the DOMContentLoaded event to avoid processing messages twice.\n       * We persist the MessagePort so we can use it to communicate with the parent window in subsequent calls to TKHQ.sendMessageUp\n       */\n      if (\n        event.data &&\n        event.data[\"type\"] == \"TURNKEY_INIT_MESSAGE_CHANNEL\" &&\n        event.ports?.[0]\n      ) {\n        // remove the message event listener that was added in the DOMContentLoaded event\n        messageListenerController.abort();\n\n        const iframeMessagePort = event.ports[0];\n        iframeMessagePort.onmessage = messageEventListener;\n\n        TKHQ.setParentFrameMessageChannelPort(iframeMessagePort);\n\n        await TKHQ.initEmbeddedKey(event.origin);\n        var embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n        var targetPubBuf = await TKHQ.p256JWKPrivateToPublic(\n          embeddedKeyJwk\n        );\n        var targetPubHex = TKHQ.uint8arrayToHexString(targetPubBuf);\n        document.getElementById(\"embedded-key\").value = targetPubHex;\n\n        TKHQ.sendMessageUp(\"PUBLIC_KEY_READY\", targetPubHex);\n\n        // remove the listener for TURNKEY_INIT_MESSAGE_CHANNEL after it's been processed\n        turnkeyInitController.abort();\n      }\n    },\n    { signal: turnkeyInitController.signal }\n  );\n\n  return { messageEventListener };\n}\n","import { TKHQ } from './turnkey-core.js';\n\n/**\n * Decrypt the ciphertext (ArrayBuffer) given an encapsulation key (ArrayBuffer)\n * and the receivers private key (JSON Web Key).\n */\nexport async function HpkeDecrypt({\n  ciphertextBuf,\n  encappedKeyBuf,\n  receiverPrivJwk,\n}) {\n  const kemContext = new window.hpke.DhkemP256HkdfSha256();\n  var receiverPriv = await kemContext.importKey(\n    \"jwk\",\n    { ...receiverPrivJwk },\n    false\n  );\n\n  var suite = new window.hpke.CipherSuite({\n    kem: kemContext,\n    kdf: new window.hpke.HkdfSha256(),\n    aead: new window.hpke.Aes256Gcm(),\n  });\n\n  var recipientCtx = await suite.createRecipientContext({\n    recipientKey: receiverPriv,\n    enc: encappedKeyBuf,\n    info: new TextEncoder().encode(\"turnkey_hpke\"),\n  });\n\n  var receiverPubBuf = await TKHQ.p256JWKPrivateToPublic(receiverPrivJwk);\n  var aad = TKHQ.additionalAssociatedData(encappedKeyBuf, receiverPubBuf);\n  var res;\n  try {\n    res = await recipientCtx.open(ciphertextBuf, aad);\n  } catch (e) {\n    throw new Error(\n      \"unable to decrypt bundle using embedded key. the bundle may be incorrect. failed with error: \" +\n        e.toString()\n    );\n  }\n  return res;\n}\n","// Import dependencies that will be managed by webpack\nimport * as hpke from '@hpke/core';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { getPublicKey } from '@noble/ed25519';\n\n// Import our modules\nimport { TKHQ } from './turnkey-core.js';\nimport { setupEventHandlers } from './event-handlers.js';\nimport { HpkeDecrypt } from './crypto-utils.js';\nimport './styles.css';\n\n// Make dependencies available globally for the TKHQ module\nwindow.hpke = hpke;\nwindow.nobleHashes = { sha512 };\nwindow.nobleEd25519 = { getPublicKey, etc: { sha512Sync: undefined } };\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', async function() {\n  // Set up noble-ed25519 sync function\n  window.nobleEd25519.etc.sha512Sync = sha512;\n\n  await TKHQ.initEmbeddedKey();\n  const embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n  const targetPubBuf = await TKHQ.p256JWKPrivateToPublic(embeddedKeyJwk);\n  const targetPubHex = TKHQ.uint8arrayToHexString(targetPubBuf);\n  document.getElementById('embedded-key').value = targetPubHex;\n\n  // Set up event handlers\n  setupEventHandlers(HpkeDecrypt);\n\n  // If styles are saved in local storage, sanitize and apply them\n  const styleSettings = TKHQ.getSettings();\n  if (styleSettings) {\n    TKHQ.applySettings(styleSettings);\n  }\n\n  TKHQ.sendMessageUp('PUBLIC_KEY_READY', targetPubHex);\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + {\"291\":\"7a021a78b825e05e9dc5\",\"825\":\"cc79276508bd3ade610e\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexport_tests\"] = self[\"webpackChunkexport_tests\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(758)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","_OverloadYield","k","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","toString","slice","constructor","name","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","TURNKEY_EMBEDDED_KEY","TURNKEY_SETTINGS","parentFrameMessageChannelPort","isDoublyIframed","undefined","window","location","ancestorOrigins","parent","top","loadQuorumKey","_x","_loadQuorumKey","_regeneratorRuntime","mark","_callee","quorumPublic","wrap","_context","prev","crypto","subtle","importKey","namedCurve","abrupt","sent","stop","_initEmbeddedKey","_callee2","_context2","Error","getEmbeddedKey","generateTargetKey","setEmbeddedKey","_generateTargetKey","_callee3","p256key","_context3","generateKey","exportKey","privateKey","jwtKey","getItemWithExpiry","JSON","parse","targetKey","setItemWithExpiry","stringify","key","ttl","item","expiry","Date","getTime","localStorage","setItem","itemStr","getItem","hasOwnProperty","removeItem","uint8arrayFromHexString","hexString","Uint8Array","match","map","h","parseInt","uint8arrayToHexString","buffer","x","padStart","join","normalizePadding","byteArray","targetLength","paddingLength","padding","fill","concat","expectedZeroCount","zeroCount","fromDerSignature","derSignature","derSignatureBuf","index","rLength","sLength","s","rPadded","sPadded","_verifyEnclaveSignature","_callee4","enclaveQuorumPublic","publicSignature","signedData","TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY","encryptionQuorumPublicBuf","quorumKey","publicSignatureBuf","signedDataBuf","_context4","prod","preprod","verify","hash","logMessage","content","messageLog","document","getElementById","message","createElement","innerText","appendChild","_p256JWKPrivateToPublic","_callee5","jwkPrivate","jwkPrivateCopy","publicKey","_context5","_objectSpread","key_ops","base58Encode","bytes","result","digits","carry","j","base58Decode","alphabet","decodedBytes","BigInt","leadingZeros","indexOf","currentByte","reverse","_encodeKey","_callee6","privateKeyBytes","keyFormat","publicKeyBytes","concatenatedBytes","_context6","t0","set","console","warn","validateStyles","styles","element","validStyles","cssValidationRegex","margin","borderWidth","borderStyle","borderColor","borderRadius","fontSize","fontWeight","fontFamily","color","backgroundColor","width","height","maxWidth","maxHeight","lineHeight","boxShadow","textAlign","overflowWrap","wordWrap","resize","entries","forEach","_ref","_ref2","property","styleProperty","trim","styleRegexStr","styleRegex","RegExp","styleValue","TKHQ","initEmbeddedKey","onResetEmbeddedKey","p256JWKPrivateToPublic","_x5","encodeKey","_x6","_x7","_x8","encodeWallet","walletBytes","mnemonic","wallet","TextDecoder","decode","passphrase","includes","parts","split","sendMessageUp","type","requestId","postMessage","setParentFrameMessageChannelPort","port","additionalAssociatedData","senderPubBuf","receiverPubBuf","verifyEnclaveSignature","_x2","_x3","_x4","getEd25519PublicKey","privateKeyHex","nobleEd25519","etc","sha512Sync","_window$nobleEd25519$","nobleHashes","sha512","concatBytes","getPublicKey","applySettings","settings","validSettings","settingsObj","keyDivTextarea","_ref3","_ref4","style","getSettings","setSettings","parsePrivateKey","startsWith","error","decryptedKey","displayKey","body","children","child","tagName","id","display","border","keyDiv","styleKey","decryptBundle","_decryptBundle","_callee8","bundle","organizationId","HpkeDecrypt","encappedKeyBuf","ciphertextBuf","bundleObj","embeddedKeyJwk","_context8","version","data","dataSignature","encappedPublic","ciphertext","receiverPrivJwk","onInjectKeyBundle","_onInjectKeyBundle","_callee9","keyBytes","_context9","subarray","rawBytes","format","onInjectWalletBundle","_x9","_x10","_x11","_x12","_onInjectWalletBundle","_callee10","_context10","onApplySettings","_x13","_x14","_onApplySettings","_callee11","_context11","onSignTransaction","_x15","_x16","_onSignTransaction","_callee12","serializedTransaction","keypair","transactionWrapper","transactionToSign","signedTransaction","transaction","signedTransactionHex","_context12","createSolanaKeypair","VersionedTransaction","deserialize","sign","serialize","onSignMessage","_x17","_x18","_onSignMessage","_callee13","serializedMessage","messageWrapper","messageToSign","messageType","messageBytes","signatureHex","signature","_context13","TextEncoder","encode","nacl","detached","secretKey","toBytes","onClearEmbeddedPrivateKey","_x19","_onClearEmbeddedPrivateKey","_callee14","_context14","_x20","_createSolanaKeypair","_callee15","_context15","Keypair","fromSeed","fromSecretKey","setupEventHandlers","messageEventListener","_messageEventListener","event","t1","t2","t3","t4","t5","_x34","createMessageEventListener","messageListenerController","AbortController","turnkeyInitController","addEventListener","preventDefault","_x29","_x30","_x31","_x32","injectWalletBtn","_ref5","_x33","addDOMEventListeners","capture","signal","_ref6","_callee7","_event$ports","iframeMessagePort","targetPubBuf","targetPubHex","_context7","ports","abort","onmessage","origin","_x35","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","_HpkeDecrypt","kemContext","receiverPriv","suite","recipientCtx","aad","res","hpke","DhkemP256HkdfSha256","CipherSuite","kem","kdf","HkdfSha256","aead","Aes256Gcm","createRecipientContext","recipientKey","enc","info","open","styleSettings","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","getter","__esModule","obj","mode","this","ns","def","current","getOwnPropertyNames","definition","get","chunkId","all","reduce","promises","miniCssF","prop","url","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","setAttribute","src","onScriptComplete","onerror","onload","clearTimeout","timeout","doneFns","parentNode","removeChild","setTimeout","target","head","nmd","paths","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}