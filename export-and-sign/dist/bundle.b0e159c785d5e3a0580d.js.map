{"version":3,"file":"bundle.b0e159c785d5e3a0580d.js","mappings":"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","sources":["webpack://export-and-sign/webpack/runtime/chunk loaded","webpack://export-and-sign/webpack/runtime/create fake namespace object","webpack://export-and-sign/webpack/runtime/load script","webpack://export-and-sign/./src/turnkey-core.js","webpack://export-and-sign/./src/event-handlers.js","webpack://export-and-sign/./src/crypto-utils.js","webpack://export-and-sign/./src/index.js","webpack://export-and-sign/webpack/bootstrap","webpack://export-and-sign/webpack/runtime/compat get default export","webpack://export-and-sign/webpack/runtime/define property getters","webpack://export-and-sign/webpack/runtime/ensure chunk","webpack://export-and-sign/webpack/runtime/get javascript chunk filename","webpack://export-and-sign/webpack/runtime/get mini-css chunk filename","webpack://export-and-sign/webpack/runtime/hasOwnProperty shorthand","webpack://export-and-sign/webpack/runtime/make namespace object","webpack://export-and-sign/webpack/runtime/node module decorator","webpack://export-and-sign/webpack/runtime/publicPath","webpack://export-and-sign/webpack/runtime/jsonp chunk loading","webpack://export-and-sign/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"export-and-sign:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/**\n * Turnkey Core Module\n * Contains all the core cryptographic and utility functions\n */\n\nimport * as nobleEd25519 from \"@noble/ed25519\";\n\n/** constant for LocalStorage */\nconst TURNKEY_EMBEDDED_KEY = \"TURNKEY_EMBEDDED_KEY\";\nconst TURNKEY_SETTINGS = \"TURNKEY_SETTINGS\";\n/** 48 hours in milliseconds */\nconst TURNKEY_EMBEDDED_KEY_TTL_IN_MILLIS = 1000 * 60 * 60 * 48;\nconst TURNKEY_EMBEDDED_KEY_ORIGIN = \"TURNKEY_EMBEDDED_KEY_ORIGIN\";\n\nlet parentFrameMessageChannelPort = null;\n\n/* Security functions */\n\nfunction isDoublyIframed() {\n  if (window.location.ancestorOrigins !== undefined) {\n    // Does not exist in IE and firefox.\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Location/ancestorOrigins for how this works\n    return window.location.ancestorOrigins.length > 1;\n  } else {\n    return window.parent !== window.top;\n  }\n}\n\n// Helper to parse a private key into a Solana base58 private key\n// This shouldn't be needed in the case that a Turnkey wallet account is exported with the address format \"SOLANA\"\nfunction parsePrivateKey(privateKey) {\n  if (Array.isArray(privateKey)) {\n    return new Uint8Array(privateKey);\n  }\n\n  if (typeof privateKey === \"string\") {\n    // Remove 0x prefix if present\n    if (privateKey.startsWith(\"0x\")) {\n      privateKey = privateKey.slice(2);\n    }\n\n    // Check if it's hex format (64 characters, only hex chars)\n    if (privateKey.length === 64 && /^[0-9a-fA-F]+$/.test(privateKey)) {\n      // Hex format\n      return uint8arrayFromHexString(privateKey);\n    }\n\n    // Assume it's base58 format\n    try {\n      return base58Decode(privateKey);\n    } catch (error) {\n      throw new Error(\n        \"Invalid private key format. Use hex (64 chars) or base58 format.\"\n      );\n    }\n  }\n\n  throw new Error(\n    \"Private key must be a string (hex/base58) or number array\"\n  );\n}\n\n/*\n * Loads the quorum public key as a CryptoKey.\n */\nasync function loadQuorumKey(quorumPublic) {\n  return await crypto.subtle.importKey(\n    \"raw\",\n    quorumPublic,\n    {\n      name: \"ECDSA\",\n      namedCurve: \"P-256\",\n    },\n    true,\n    [\"verify\"]\n  );\n}\n\n/**\n * Creates a new public/private key pair and persists it in localStorage\n */\nasync function initEmbeddedKey() {\n  if (isDoublyIframed()) {\n    throw new Error(\"Doubly iframed\");\n  }\n  const retrievedKey = await getEmbeddedKey();\n  if (retrievedKey === null) {\n    const targetKey = await generateTargetKey();\n    setEmbeddedKey(targetKey);\n  }\n  // Nothing to do, key is correctly initialized!\n}\n\n/*\n * Generate a key to encrypt to and export it as a JSON Web Key.\n */\nasync function generateTargetKey() {\n  const p256key = await crypto.subtle.generateKey(\n    {\n      name: \"ECDH\",\n      namedCurve: \"P-256\",\n    },\n    true,\n    [\"deriveBits\"]\n  );\n\n  return await crypto.subtle.exportKey(\"jwk\", p256key.privateKey);\n}\n\n/**\n * Gets the current embedded private key JWK. Returns `null` if not found.\n */\nfunction getEmbeddedKey() {\n  const jwtKey = getItemWithExpiry(TURNKEY_EMBEDDED_KEY);\n  return jwtKey ? JSON.parse(jwtKey) : null;\n}\n\n/**\n * Sets the embedded private key JWK with the default expiration time.\n * @param {JsonWebKey} targetKey\n */\nfunction setEmbeddedKey(targetKey) {\n  setItemWithExpiry(\n    TURNKEY_EMBEDDED_KEY,\n    JSON.stringify(targetKey),\n    TURNKEY_EMBEDDED_KEY_TTL_IN_MILLIS\n  );\n}\n\nfunction setParentFrameMessageChannelPort(port) {\n  parentFrameMessageChannelPort = port;\n}\n\n/**\n * Resets the current embedded private key JWK.\n */\nfunction onResetEmbeddedKey() {\n  window.localStorage.removeItem(TURNKEY_EMBEDDED_KEY);\n  window.localStorage.removeItem(TURNKEY_EMBEDDED_KEY_ORIGIN);\n}\n\n/**\n * Gets the current settings.\n */\nfunction getSettings() {\n  const settings = window.localStorage.getItem(TURNKEY_SETTINGS);\n  return settings ? JSON.parse(settings) : null;\n}\n\n/**\n * Sets the settings object.\n * @param {Object} settings\n */\nfunction setSettings(settings) {\n  window.localStorage.setItem(\n    TURNKEY_SETTINGS,\n    JSON.stringify(settings)\n  );\n}\n\n/**\n * Set an item in localStorage with an expiration time\n * @param {string} key\n * @param {string} value\n * @param {number} ttl expiration time in milliseconds\n */\nfunction setItemWithExpiry(key, value, ttl) {\n  const now = new Date();\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttl,\n  };\n  window.localStorage.setItem(key, JSON.stringify(item));\n}\n\n/**\n * Get an item from localStorage. Returns `null` and\n * removes the item from localStorage if expired or\n * expiry time is missing.\n * @param {string} key\n */\nfunction getItemWithExpiry(key) {\n  const itemStr = window.localStorage.getItem(key);\n  if (!itemStr) {\n    return null;\n  }\n  const item = JSON.parse(itemStr);\n  if (!item.hasOwnProperty(\"expiry\") || !item.hasOwnProperty(\"value\")) {\n    window.localStorage.removeItem(key);\n    return null;\n  }\n  const now = new Date();\n  if (now.getTime() > item.expiry) {\n    window.localStorage.removeItem(key);\n    return null;\n  }\n  return item.value;\n}\n\n/**\n * Takes a hex string (e.g. \"e4567ab\") and returns an array buffer (Uint8Array)\n * @param {string} hexString\n * @returns {Uint8Array}\n */\nfunction uint8arrayFromHexString(hexString) {\n  var hexRegex = /^[0-9A-Fa-f]+$/;\n  if (\n    !hexString ||\n    hexString.length % 2 != 0 ||\n    !hexRegex.test(hexString)\n  ) {\n    throw new Error(\"cannot create uint8array from invalid hex string\");\n  }\n  return new Uint8Array(\n    hexString.match(/../g).map((h) => parseInt(h, 16))\n  );\n}\n\n/**\n * Takes a Uint8Array and returns a hex string\n * @param {Uint8Array} buffer\n * @return {string}\n */\nfunction uint8arrayToHexString(buffer) {\n  return [...buffer]\n    .map((x) => x.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n}\n\n/**\n * Function to normalize padding of byte array with 0's to a target length\n */\nfunction normalizePadding(byteArray, targetLength) {\n  const paddingLength = targetLength - byteArray.length;\n\n  // Add leading 0's to array\n  if (paddingLength > 0) {\n    const padding = new Uint8Array(paddingLength).fill(0);\n    return new Uint8Array([...padding, ...byteArray]);\n  }\n\n  // Remove leading 0's from array\n  if (paddingLength < 0) {\n    const expectedZeroCount = paddingLength * -1;\n    let zeroCount = 0;\n    for (\n      let i = 0;\n      i < expectedZeroCount && i < byteArray.length;\n      i++\n    ) {\n      if (byteArray[i] === 0) {\n        zeroCount++;\n      }\n    }\n    // Check if the number of zeros found equals the number of zeroes expected\n    if (zeroCount !== expectedZeroCount) {\n      throw new Error(\n        `invalid number of starting zeroes. Expected number of zeroes: ${expectedZeroCount}. Found: ${zeroCount}.`\n      );\n    }\n    return byteArray.slice(\n      expectedZeroCount,\n      expectedZeroCount + targetLength\n    );\n  }\n  return byteArray;\n}\n\n/**\n * Additional Associated Data (AAD) in the format dictated by the enclave_encrypt crate.\n */\nfunction additionalAssociatedData(senderPubBuf, receiverPubBuf) {\n  const s = Array.from(new Uint8Array(senderPubBuf));\n  const r = Array.from(new Uint8Array(receiverPubBuf));\n  return new Uint8Array([...s, ...r]);\n}\n\n/**\n * Converts an ASN.1 DER-encoded ECDSA signature to the raw format that WebCrypto uses.\n */\nfunction fromDerSignature(derSignature) {\n  const derSignatureBuf = uint8arrayFromHexString(derSignature);\n\n  // Check and skip the sequence tag (0x30)\n  let index = 2;\n\n  // Parse 'r' and check for integer tag (0x02)\n  if (derSignatureBuf[index] !== 0x02) {\n    throw new Error(\n      \"failed to convert DER-encoded signature: invalid tag for r\"\n    );\n  }\n  index++; // Move past the INTEGER tag\n  const rLength = derSignatureBuf[index];\n  index++; // Move past the length byte\n  const r = derSignatureBuf.slice(index, index + rLength);\n  index += rLength; // Move to the start of s\n\n  // Parse 's' and check for integer tag (0x02)\n  if (derSignatureBuf[index] !== 0x02) {\n    throw new Error(\n      \"failed to convert DER-encoded signature: invalid tag for s\"\n    );\n  }\n  index++; // Move past the INTEGER tag\n  const sLength = derSignatureBuf[index];\n  index++; // Move past the length byte\n  const s = derSignatureBuf.slice(index, index + sLength);\n\n  // Normalize 'r' and 's' to 32 bytes each\n  const rPadded = normalizePadding(r, 32);\n  const sPadded = normalizePadding(s, 32);\n\n  // Concatenate and return the raw signature\n  return new Uint8Array([...rPadded, ...sPadded]);\n}\n\n/**\n * Function to verify enclave signature on import bundle received from the server.\n * @param {string} enclaveQuorumPublic uncompressed public key for the quorum key which produced the signature\n * @param {string} publicSignature signature bytes encoded as a hexadecimal string\n * @param {string} signedData signed bytes encoded as a hexadecimal string. This could be public key bytes directly, or JSON-encoded bytes\n */\nasync function verifyEnclaveSignature(\n  enclaveQuorumPublic,\n  publicSignature,\n  signedData\n) {\n  /** Turnkey Signer enclave's public keys */\n  const TURNKEY_SIGNERS_ENCLAVES = {\n    prod: \"04cf288fe433cc4e1aa0ce1632feac4ea26bf2f5a09dcfe5a42c398e06898710330f0572882f4dbdf0f5304b8fc8703acd69adca9a4bbf7f5d00d20a5e364b2569\",\n    preprod:\n      \"04f3422b8afbe425d6ece77b8d2469954715a2ff273ab7ac89f1ed70e0a9325eaa1698b4351fd1b23734e65c0b6a86b62dd49d70b37c94606aac402cbd84353212\",\n  };\n\n  // Use window.__TURNKEY_SIGNER_ENVIRONMENT__ if available (for testing), otherwise use the webpack replacement\n  const environment =\n    (typeof window !== \"undefined\" && window.__TURNKEY_SIGNER_ENVIRONMENT__) ||\n    \"__TURNKEY_SIGNER_ENVIRONMENT__\";\n  const TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY =\n    TURNKEY_SIGNERS_ENCLAVES[\"prod\"];\n  \n    if (TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY === undefined) {\n    throw new Error(\n      `Configuration error: TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY is undefined`\n    );\n  }\n\n  // todo(olivia): throw error if enclave quorum public is null once server changes are deployed\n  if (enclaveQuorumPublic) {\n    if (\n      enclaveQuorumPublic !== TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY\n    ) {\n      throw new Error(\n        `enclave quorum public keys from client and bundle do not match. Client: ${TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY}. Bundle: ${enclaveQuorumPublic}.`\n      );\n    }\n  }\n\n  const encryptionQuorumPublicBuf = new Uint8Array(\n    uint8arrayFromHexString(TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY)\n  );\n  const quorumKey = await loadQuorumKey(encryptionQuorumPublicBuf);\n  if (!quorumKey) {\n    throw new Error(\"failed to load quorum key\");\n  }\n\n  // The ECDSA signature is ASN.1 DER encoded but WebCrypto uses raw format\n  const publicSignatureBuf = fromDerSignature(publicSignature);\n  const signedDataBuf = uint8arrayFromHexString(signedData);\n  return await crypto.subtle.verify(\n    { name: \"ECDSA\", hash: \"SHA-256\" },\n    quorumKey,\n    publicSignatureBuf,\n    signedDataBuf\n  );\n}\n\n/**\n * Function to send a message.\n *\n * If this page is embedded as an iframe we'll send a postMessage\n * in one of two ways depending on the version of @turnkey/iframe-stamper:\n *   1. newer versions (>=v2.1.0) pass a MessageChannel MessagePort from the parent frame for postMessages.\n *   2. older versions (<v2.1.0) still use the contentWindow so we will postMessage to the window.parent for backwards compatibility.\n *\n * Otherwise we'll display it in the DOM.\n * @param type message type. Can be \"PUBLIC_KEY_CREATED\" or \"BUNDLE_INJECTED\"\n * @param value message value\n * @param requestId serves as an idempotency key to match incoming requests. Backwards compatible: if not provided, it isn't passed in.\n */\nfunction sendMessageUp(type, value, requestId) {\n  const message = {\n    type: type,\n    value: value,\n  };\n\n  // Only include requestId if it was provided\n  if (requestId) {\n    message.requestId = requestId;\n  }\n\n  if (parentFrameMessageChannelPort) {\n    parentFrameMessageChannelPort.postMessage(message);\n  } else if (window.parent !== window) {\n    window.parent.postMessage(\n      {\n        type: type,\n        value: value,\n      },\n      \"*\"\n    );\n  }\n  logMessage(`⬆️ Sent message ${type}: ${value}`);\n}\n\n/**\n * Function to log a message and persist it in the page's DOM.\n */\nfunction logMessage(content) {\n  const messageLog = document.getElementById(\"message-log\");\n  const message = document.createElement(\"p\");\n  message.innerText = content;\n  messageLog.appendChild(message);\n}\n\n/**\n * Convert a JSON Web Key private key to a public key and export the public\n * key in raw format.\n * @return {Uint8array}\n */\nasync function p256JWKPrivateToPublic(jwkPrivate) {\n  // make a copy so we don't modify the underlying object\n  const jwkPrivateCopy = { ...jwkPrivate };\n  // change jwk so it will be imported as a public key\n  delete jwkPrivateCopy.d;\n  jwkPrivateCopy.key_ops = [\"verify\"];\n\n  const publicKey = await window.crypto.subtle.importKey(\n    \"jwk\",\n    jwkPrivateCopy,\n    { name: \"ECDSA\", namedCurve: \"P-256\" },\n    true,\n    [\"verify\"]\n  );\n  const buffer = await crypto.subtle.exportKey(\"raw\", publicKey);\n  return new Uint8Array(buffer);\n}\n\n/**\n * Encodes a buffer into a base58-encoded string.\n * @param {Uint8Array} bytes The buffer to encode.\n * @return {string} The base58-encoded string.\n */\nfunction base58Encode(bytes) {\n  // See https://en.bitcoin.it/wiki/Base58Check_encoding\n  const alphabet =\n    \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n  let result = \"\";\n  let digits = [0];\n  for (let i = 0; i < bytes.length; i++) {\n    let carry = bytes[i];\n    for (let j = 0; j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % 58;\n      carry = (carry / 58) | 0;\n    }\n\n    while (carry > 0) {\n      digits.push(carry % 58);\n      carry = (carry / 58) | 0;\n    }\n  }\n  // Convert digits to a base58 string\n  for (let k = 0; k < digits.length; k++) {\n    result = alphabet[digits[k]] + result;\n  }\n\n  // Add '1' for each leading 0 byte\n  for (let i = 0; bytes[i] === 0 && i < bytes.length - 1; i++) {\n    result = \"1\" + result;\n  }\n  return result;\n}\n\n/**\n * Decodes a base58-encoded string into a buffer\n * This function throws an error when the string contains invalid characters.\n * @param {string} s The base58-encoded string.\n * @return {Uint8Array} The decoded buffer.\n */\nfunction base58Decode(s) {\n  // See https://en.bitcoin.it/wiki/Base58Check_encoding\n  var alphabet =\n    \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n  var decoded = BigInt(0);\n  var decodedBytes = [];\n  var leadingZeros = [];\n  for (var i = 0; i < s.length; i++) {\n    if (alphabet.indexOf(s[i]) === -1) {\n      throw new Error(\n        `cannot base58-decode: ${s[i]} isn't a valid character`\n      );\n    }\n    var carry = alphabet.indexOf(s[i]);\n\n    // If the current base58 digit is 0, append a 0 byte.\n    // \"i == leadingZeros.length\" can only be true if we have not seen non-zero bytes so far.\n    // If we had seen a non-zero byte, carry wouldn't be 0, and i would be strictly more than `leadingZeros.length`\n    if (carry == 0 && i === leadingZeros.length) {\n      leadingZeros.push(0);\n    }\n\n    var j = 0;\n    while (j < decodedBytes.length || carry > 0) {\n      var currentByte = decodedBytes[j];\n\n      // shift the current byte 58 units and add the carry amount\n      // (or just add the carry amount if this is a new byte -- undefined case)\n      if (currentByte === undefined) {\n        currentByte = carry;\n      } else {\n        currentByte = currentByte * 58 + carry;\n      }\n\n      // find the new carry amount (1-byte shift of current byte value)\n      carry = currentByte >> 8;\n      // reset the current byte to the remainder (the carry amount will pass on the overflow)\n      decodedBytes[j] = currentByte % 256;\n      j++;\n    }\n  }\n\n  var result = leadingZeros.concat(decodedBytes.reverse());\n  return new Uint8Array(result);\n}\n\n/**\n * Returns a private key from private key bytes, represented in\n * the encoding and format specified by `keyFormat`. Defaults to\n * hex-encoding if `keyFormat` isn't passed.\n * @param {Uint8Array} privateKeyBytes\n * @param {string} keyFormat Can be \"HEXADECIMAL\" or \"SOLANA\"\n */\nasync function encodeKey(privateKeyBytes, keyFormat, publicKeyBytes) {\n  switch (keyFormat) {\n    case \"SOLANA\":\n      if (!publicKeyBytes) {\n        throw new Error(\n          \"public key must be specified for SOLANA key format\"\n        );\n      }\n      if (privateKeyBytes.length !== 32) {\n        throw new Error(\n          `invalid private key length. Expected 32 bytes. Got ${privateKeyBytes.length}.`\n        );\n      }\n      if (publicKeyBytes.length !== 32) {\n        throw new Error(\n          `invalid public key length. Expected 32 bytes. Got ${publicKeyBytes.length}.`\n        );\n      }\n      const concatenatedBytes = new Uint8Array(64);\n      concatenatedBytes.set(privateKeyBytes, 0);\n      concatenatedBytes.set(publicKeyBytes, 32);\n      return base58Encode(concatenatedBytes);\n    case \"HEXADECIMAL\":\n      return \"0x\" + uint8arrayToHexString(privateKeyBytes);\n    default:\n      console.warn(\n        `invalid key format: ${keyFormat}. Defaulting to HEXADECIMAL.`\n      );\n      return \"0x\" + uint8arrayToHexString(privateKeyBytes);\n  }\n}\n\n/**\n * Returns a UTF-8 encoded wallet mnemonic + newline optional passphrase\n * from wallet bytes.\n * @param {Uint8Array} walletBytes\n */\nfunction encodeWallet(walletBytes) {\n  const decoder = new TextDecoder(\"utf-8\");\n  const wallet = decoder.decode(walletBytes);\n  let mnemonic;\n  let passphrase = null;\n\n  if (wallet.includes(\"\\n\")) {\n    const parts = wallet.split(\"\\n\");\n    mnemonic = parts[0];\n    passphrase = parts[1];\n  } else {\n    mnemonic = wallet;\n  }\n\n  return {\n    mnemonic: mnemonic,\n    passphrase: passphrase,\n  };\n}\n\n/**\n * Returns the public key bytes for a hex-encoded Ed25519 private key.\n * @param {string} privateKeyHex\n */\nfunction getEd25519PublicKey(privateKeyHex) {\n  nobleEd25519.etc.sha512Sync = (...m) =>\n    nobleHashes.sha512(nobleEd25519.etc.concatBytes(...m));\n  return nobleEd25519.getPublicKey(privateKeyHex);\n}\n\n/**\n * Function to validate and sanitize the styles object using the accepted map of style keys and values (as regular expressions).\n * Any invalid style throws an error. Returns an object of valid styles.\n * @param {Object} styles\n * @return {Object}\n */\nfunction validateStyles(styles, element) {\n  const validStyles = {};\n\n  const cssValidationRegex = {\n    padding: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    margin: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    borderWidth: \"^(\\\\d+(px|em|rem) ?){1,4}$\",\n    borderStyle:\n      \"^(none|solid|dashed|dotted|double|groove|ridge|inset|outset)$\",\n    borderColor:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    borderRadius: \"^(\\\\d+(px|em|%|rem) ?){1,4}$\",\n    fontSize:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax))$\",\n    fontWeight: \"^(normal|bold|bolder|lighter|\\\\d{3})$\",\n    fontFamily: '^[^\";<>]*$', // checks for the absence of some characters that could lead to CSS/HTML injection\n    color:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    backgroundColor:\n      \"^(transparent|inherit|initial|#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)|hsla?\\\\(\\\\d{1,3}, \\\\d{1,3}%, \\\\d{1,3}%(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\))$\",\n    width:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|auto)$\",\n    height:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|auto)$\",\n    maxWidth:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|none)$\",\n    maxHeight:\n      \"^(\\\\d+(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|none)$\",\n    lineHeight:\n      \"^(\\\\d+(\\\\.\\\\d+)?(px|em|rem|%|vh|vw|in|cm|mm|pt|pc|ex|ch|vmin|vmax)|normal)$\",\n    boxShadow:\n      \"^(none|(\\\\d+(px|em|rem) ?){2,4} (#[0-9a-f]{3,8}|rgba?\\\\(\\\\d{1,3}, \\\\d{1,3}, \\\\d{1,3}(, \\\\d?(\\\\.\\\\d{1,2})?)?\\\\)) ?(inset)?)$\",\n    textAlign: \"^(left|right|center|justify|initial|inherit)$\",\n    overflowWrap: \"^(normal|break-word|anywhere)$\",\n    wordWrap: \"^(normal|break-word)$\",\n    resize: \"^(none|both|horizontal|vertical|block|inline)$\",\n  };\n\n  Object.entries(styles).forEach(([property, value]) => {\n    const styleProperty = property.trim();\n    if (styleProperty.length === 0) {\n      throw new Error(\"css style property cannot be empty\");\n    }\n    const styleRegexStr = cssValidationRegex[styleProperty];\n    if (!styleRegexStr) {\n      throw new Error(\n        `invalid or unsupported css style property: \"${styleProperty}\"`\n      );\n    }\n    const styleRegex = new RegExp(styleRegexStr);\n    const styleValue = value.trim();\n    if (styleValue.length == 0) {\n      throw new Error(`css style for \"${styleProperty}\" is empty`);\n    }\n    const isValidStyle = styleRegex.test(styleValue);\n    if (!isValidStyle) {\n      throw new Error(\n        `invalid css style value for property \"${styleProperty}\"`\n      );\n    }\n    validStyles[styleProperty] = styleValue;\n  });\n\n  return validStyles;\n}\n\n/**\n * Function to apply settings on this page. For now, the only settings that can be applied\n * are for \"styles\". Upon successful application, return the valid, sanitized settings JSON string.\n * @param {string} settings\n * @return {string}\n */\nfunction applySettings(settings) {\n  const validSettings = {};\n  if (!settings) {\n    return JSON.stringify(validSettings);\n  }\n  const settingsObj = JSON.parse(settings);\n  if (settingsObj.styles) {\n    // Valid styles will be applied the \"key-div\" div HTML element.\n    const keyDivTextarea = document.getElementById(\"key-div\");\n    if (!keyDivTextarea) {\n      throw new Error(\n        \"no key-div HTML element found to apply settings to.\"\n      );\n    }\n\n    // Validate, sanitize, and apply the styles to the \"key-div\" div element.\n    const validStyles = validateStyles(settingsObj.styles);\n    Object.entries(validStyles).forEach(([key, value]) => {\n      keyDivTextarea.style[key] = value;\n    });\n\n    validSettings[\"styles\"] = validStyles;\n  }\n\n  return JSON.stringify(validSettings);\n}\n\nexport const TKHQ = {\n  initEmbeddedKey,\n  generateTargetKey,\n  setItemWithExpiry,\n  getItemWithExpiry,\n  getEmbeddedKey,\n  setEmbeddedKey,\n  onResetEmbeddedKey,\n  p256JWKPrivateToPublic,\n  base58Encode,\n  base58Decode,\n  encodeKey,\n  encodeWallet,\n  sendMessageUp,\n  logMessage,\n  uint8arrayFromHexString,\n  uint8arrayToHexString,\n  setParentFrameMessageChannelPort,\n  normalizePadding,\n  fromDerSignature,\n  additionalAssociatedData,\n  verifyEnclaveSignature,\n  getEd25519PublicKey,\n  applySettings,\n  validateStyles,\n  getSettings,\n  setSettings,\n  parsePrivateKey,\n};\n","import { TKHQ } from './turnkey-core.js';\nimport {\n  Keypair,\n  Transaction,\n  SystemProgram,\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  Connection,\n  sendAndConfirmTransaction,\n  VersionedTransaction,\n} from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport naclUtil from 'tweetnacl-util';\n\n// persist the decrypted key in memory\nlet decryptedKey = null;\n\nconst DEFAULT_TTL_SECONDS = 24 * 60 * 60; // 24 hours\n\n/**\n * Hide every HTML element in <body> except any <script> elements.\n * Then append an element containing the hex-encoded raw private key.\n * @param {string} key\n */\nfunction displayKey(key) {\n  Array.from(document.body.children).forEach((child) => {\n    if (child.tagName !== \"SCRIPT\" && child.id !== \"key-div\") {\n      child.style.display = \"none\";\n    }\n  });\n\n  const style = {\n    border: \"none\",\n    color: \"#555b64\",\n    fontSize: \".875rem\",\n    lineHeight: \"1.25rem\",\n    overflowWrap: \"break-word\",\n    textAlign: \"left\",\n  };\n\n  // Create a new div with the key material and append the new div to the body\n  const keyDiv = document.getElementById(\"key-div\");\n  keyDiv.innerText = key;\n  for (let styleKey in style) {\n    keyDiv.style[styleKey] = style[styleKey];\n  }\n  document.body.appendChild(keyDiv);\n  TKHQ.applySettings(TKHQ.getSettings());\n}\n\n/**\n * Parse and decrypt the export bundle.\n * The `bundle` param is a JSON string of the encapsulated public\n * key, encapsulated public key signature, and the ciphertext.\n * @param {string} bundle\n * @param {string} organizationId\n * @param {Function} HpkeDecrypt\n */\nasync function decryptBundle(bundle, organizationId, HpkeDecrypt) {\n  let encappedKeyBuf;\n  let ciphertextBuf;\n  let verified;\n\n  // Parse the import bundle\n  const bundleObj = JSON.parse(bundle);\n  switch (bundleObj.version) {\n    case \"v1.0.0\":\n      // Validate fields exist\n      if (!bundleObj.data) {\n        throw new Error('missing \"data\" in bundle');\n      }\n      if (!bundleObj.dataSignature) {\n        throw new Error('missing \"dataSignature\" in bundle');\n      }\n      if (!bundleObj.enclaveQuorumPublic) {\n        throw new Error('missing \"enclaveQuorumPublic\" in bundle');\n      }\n\n      // Verify enclave signature\n      if (!TKHQ.verifyEnclaveSignature) {\n        throw new Error(\"method not loaded\");\n      }\n      verified = await TKHQ.verifyEnclaveSignature(\n        bundleObj.enclaveQuorumPublic,\n        bundleObj.dataSignature,\n        bundleObj.data\n      );\n      if (!verified) {\n        throw new Error(`failed to verify enclave signature: ${bundle}`);\n      }\n\n      // Parse the signed data. The data is produced by JSON encoding followed by hex encoding. We reverse this here.\n      const signedData = JSON.parse(\n        new TextDecoder().decode(\n          TKHQ.uint8arrayFromHexString(bundleObj.data)\n        )\n      );\n\n      // Validate fields match\n      if (!organizationId) {\n        // todo: throw error if organization id is undefined once we've fully transitioned to v1.0.0 server messages and v2.0.0 iframe-stamper\n        console.warn(\n          'we highly recommend a version of @turnkey/iframe-stamper >= v2.0.0 to pass \"organizationId\" for security purposes.'\n        );\n      } else if (\n        !signedData.organizationId ||\n        signedData.organizationId !== organizationId\n      ) {\n        throw new Error(\n          `organization id does not match expected value. Expected: ${organizationId}. Found: ${signedData.organizationId}.`\n        );\n      }\n\n      if (!signedData.encappedPublic) {\n        throw new Error('missing \"encappedPublic\" in bundle signed data');\n      }\n      if (!signedData.ciphertext) {\n        throw new Error('missing \"ciphertext\" in bundle signed data');\n      }\n      encappedKeyBuf = TKHQ.uint8arrayFromHexString(\n        signedData.encappedPublic\n      );\n      ciphertextBuf = TKHQ.uint8arrayFromHexString(signedData.ciphertext);\n      break;\n    default:\n      throw new Error(`unsupported version: ${bundleObj.version}`);\n  }\n\n  // Decrypt the ciphertext\n  const embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n  return await HpkeDecrypt({\n    ciphertextBuf,\n    encappedKeyBuf,\n    receiverPrivJwk: embeddedKeyJwk,\n  });\n}\n\n/**\n * Function triggered when INJECT_KEY_EXPORT_BUNDLE event is received.\n * @param {string} bundle\n * @param {string} keyFormat\n * @param {string} organizationId\n * @param {string} requestId\n * @param {Function} HpkeDecrypt\n */\nasync function onInjectKeyBundle(\n  bundle,\n  keyFormat,\n  organizationId,\n  requestId,\n  HpkeDecrypt\n) {\n  // Decrypt the export bundle\n  const keyBytes = await decryptBundle(bundle, organizationId, HpkeDecrypt);\n\n  // Reset embedded key after using for decryption\n  TKHQ.onResetEmbeddedKey();\n\n  // Parse the decrypted key bytes\n  var key;\n  const privateKeyBytes = new Uint8Array(keyBytes);\n  if (keyFormat === \"SOLANA\") {\n    const privateKeyHex = TKHQ.uint8arrayToHexString(\n      privateKeyBytes.subarray(0, 32)\n    );\n    const publicKeyBytes = TKHQ.getEd25519PublicKey(privateKeyHex);\n    key = await TKHQ.encodeKey(\n      privateKeyBytes,\n      keyFormat,\n      publicKeyBytes\n    );\n  } else {\n    key = await TKHQ.encodeKey(privateKeyBytes, keyFormat);\n  }\n\n  // Display only the key\n  displayKey(key);\n\n  // Set in memory\n  decryptedKey = {\n    rawBytes: keyBytes,\n    format: keyFormat,\n    expiry: new Date().getTime() + DEFAULT_TTL_SECONDS,\n  };\n\n  // Send up BUNDLE_INJECTED message\n  TKHQ.sendMessageUp(\"BUNDLE_INJECTED\", true, requestId);\n}\n\n/**\n * Function triggered when INJECT_WALLET_EXPORT_BUNDLE event is received.\n * @param {string} bundle\n * @param {string} organizationId\n * @param {string} requestId\n * @param {Function} HpkeDecrypt\n */\nasync function onInjectWalletBundle(bundle, organizationId, requestId, HpkeDecrypt) {\n  // Decrypt the export bundle\n  const walletBytes = await decryptBundle(bundle, organizationId, HpkeDecrypt);\n\n  // Reset embedded key after using for decryption\n  TKHQ.onResetEmbeddedKey();\n\n  // Parse the decrypted wallet bytes\n  const wallet = TKHQ.encodeWallet(new Uint8Array(walletBytes));\n\n  // Display only the wallet's mnemonic\n  displayKey(wallet.mnemonic);\n\n  // Send up BUNDLE_INJECTED message\n  TKHQ.sendMessageUp(\"BUNDLE_INJECTED\", true, requestId);\n}\n\n/**\n * Function triggered when APPLY_SETTINGS event is received.\n * For now, the only settings that can be applied are for \"styles\".\n * Persist them in local storage so they can be applied on every\n * page load.\n * @param {string} settings: JSON-stringified settings\n * @param {string} requestId\n */\nasync function onApplySettings(settings, requestId) {\n  // Apply settings\n  const validSettings = TKHQ.applySettings(settings);\n\n  // Persist in local storage\n  TKHQ.setSettings(validSettings);\n\n  // Send up SETTINGS_APPLIED message\n  TKHQ.sendMessageUp(\"SETTINGS_APPLIED\", true, requestId);\n}\n\n/**\n * Function triggered when SIGN_TRANSACTION event is received.\n * @param {string} transaction (serialized)\n * @param {string} requestId\n */\nasync function onSignTransaction(serializedTransaction, requestId) {\n  if (!decryptedKey) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key bytes not found. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n\n    return;\n  }\n\n  // Return error if key has expired\n  const now = new Date().getTime();\n  if (now >= decryptedKey.expiry) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key has expired. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n\n    return;\n  }\n\n  // Create a keypair from the decrypted key bytes\n  const keypair = await createSolanaKeypair(\n    Array.from(new Uint8Array(decryptedKey.rawBytes))\n  );\n\n  const transactionWrapper = JSON.parse(serializedTransaction);\n  const transactionToSign = transactionWrapper.transaction;\n  const transactionType = transactionWrapper.type;\n\n  var signedTransaction;\n\n  if (transactionType === \"SOLANA\") {\n    const transaction = VersionedTransaction.deserialize(\n      TKHQ.uint8arrayFromHexString(transactionToSign)\n    );\n\n    // Sign the transaction\n    transaction.sign([keypair]);\n\n    // Serialize the signed transaction\n    signedTransaction = transaction.serialize();\n  } else {\n    // not yet supported\n    throw new Error(\"unsupported transaction type\");\n  }\n\n  const signedTransactionHex =\n    TKHQ.uint8arrayToHexString(signedTransaction);\n\n  // Send up TRANSACTION_SIGNED message\n  TKHQ.sendMessageUp(\n    \"TRANSACTION_SIGNED\",\n    signedTransactionHex,\n    requestId\n  );\n}\n\n/**\n * Function triggered when SIGN_MESSAGE event is received.\n * @param {string} message (serialized, JSON-stringified)\n * @param {string} requestId\n */\nasync function onSignMessage(serializedMessage, requestId) {\n  if (!decryptedKey) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key bytes not found. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n\n    return;\n  }\n\n  // Return error if key has expired\n  const now = new Date().getTime();\n  if (now >= decryptedKey.expiry) {\n    TKHQ.sendMessageUp(\n      \"ERROR\",\n      new Error(\n        \"key has expired. Please re-inject export bundle into iframe.\"\n      ).toString(),\n      requestId\n    );\n    \n    return;\n  }\n\n  const messageWrapper = JSON.parse(serializedMessage);\n  const messageToSign = messageWrapper.message;\n  const messageType = messageWrapper.type;\n  const messageBytes = new TextEncoder().encode(messageToSign);\n\n  var signatureHex;\n\n  if (messageType === \"SOLANA\") {\n    // Create a keypair from the decrypted key bytes\n    const keypair = await createSolanaKeypair(\n      Array.from(new Uint8Array(decryptedKey.rawBytes))\n    );\n\n    const signature = nacl.sign.detached(messageBytes, keypair.secretKey);\n    const result = nacl.sign.detached.verify(\n      messageBytes,\n      signature,\n      keypair.publicKey.toBytes()\n    );\n\n    signatureHex = TKHQ.uint8arrayToHexString(signature);\n  } else {\n    // not yet supported\n    throw new Error(\"unsupported message type\");\n  }\n\n  // Send up MESSAGE_SIGNED message\n  TKHQ.sendMessageUp(\"MESSAGE_SIGNED\", signatureHex, requestId);\n}\n\n/**\n * Function triggered when CLEAR_EMBEDDED_PRIVATE_KEY event is received.\n * @param {string} requestId\n */\nasync function onClearEmbeddedPrivateKey(requestId) {\n  // Clear reference and memory\n  if (decryptedKey && decryptedKey.rawBytes) {\n    if (decryptedKey.rawBytes instanceof ArrayBuffer) {\n      new Uint8Array(decryptedKey.rawBytes).fill(0);\n    } else if (ArrayBuffer.isView(decryptedKey.rawBytes)) {\n      decryptedKey.rawBytes.fill(0);\n    }\n  }\n\n  decryptedKey = null;\n\n  TKHQ.sendMessageUp(\"EMBEDDED_PRIVATE_KEY_CLEARED\", true, requestId);\n}\n\n// Solana utility functions\nasync function createSolanaKeypair(privateKey) {\n  const privateKeyBytes = TKHQ.parsePrivateKey(privateKey);\n\n  let keypair;\n  if (privateKeyBytes.length === 32) {\n    // 32-byte private key (seed)\n    keypair = Keypair.fromSeed(privateKeyBytes);\n  } else if (privateKeyBytes.length === 64) {\n    // 64-byte secret key (private + public)\n    keypair = Keypair.fromSecretKey(privateKeyBytes);\n  } else {\n    throw new Error(\n      `Invalid private key length: ${privateKeyBytes.length}. Expected 32 or 64 bytes.`\n    );\n  }\n\n  return keypair;\n}\n\n/**\n * DOM Event handlers to power the export flow in standalone mode\n * Instead of receiving events from the parent page, forms trigger them.\n * This is useful for debugging as well.\n */\nfunction addDOMEventListeners() {\n  // only support injected keys, not wallets\n  document.getElementById(\"inject-key\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"INJECT_KEY_EXPORT_BUNDLE\",\n        value: document.getElementById(\"key-export-bundle\").value,\n        keyFormat: document.getElementById(\"key-export-format\").value,\n        organizationId: document.getElementById(\"key-organization-id\")\n          .value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"sign-transaction\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"SIGN_TRANSACTION\",\n        value: document.getElementById(\"transaction-to-sign\").value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"sign-message\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({\n        type: \"SIGN_MESSAGE\",\n        value: document.getElementById(\"message-to-sign\").value,\n      });\n    },\n    false\n  );\n  document.getElementById(\"reset\").addEventListener(\n    \"click\",\n    async (e) => {\n      e.preventDefault();\n      window.postMessage({ type: \"RESET_EMBEDDED_KEY\" });\n    },\n    false\n  );\n\n  // Add wallet injection support\n  const injectWalletBtn = document.getElementById(\"inject-wallet\");\n  if (injectWalletBtn) {\n    injectWalletBtn.addEventListener(\n      \"click\",\n      async (e) => {\n        e.preventDefault();\n        window.postMessage({\n          type: \"INJECT_WALLET_EXPORT_BUNDLE\",\n          value: document.getElementById(\"wallet-export-bundle\").value,\n          organizationId: document.getElementById(\"wallet-organization-id\")\n            .value,\n        });\n      },\n      false\n    );\n  }\n}\n\n/**\n * Message Event Handlers to process messages from the parent frame\n */\nfunction initMessageEventListener(HpkeDecrypt) {\n  return async function messageEventListener(event) {\n    if (event.data && event.data[\"type\"] == \"INJECT_KEY_EXPORT_BUNDLE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}, ${event.data[\"keyFormat\"]}, ${event.data[\"organizationId\"]}`\n      );\n      try {\n        await onInjectKeyBundle(\n          event.data[\"value\"],\n          event.data[\"keyFormat\"],\n          event.data[\"organizationId\"],\n          event.data[\"requestId\"],\n          HpkeDecrypt\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"INJECT_WALLET_EXPORT_BUNDLE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}, ${event.data[\"organizationId\"]}`\n      );\n      try {\n        await onInjectWalletBundle(\n          event.data[\"value\"],\n          event.data[\"organizationId\"],\n          event.data[\"requestId\"],\n          HpkeDecrypt\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"APPLY_SETTINGS\") {\n      try {\n        await onApplySettings(event.data[\"value\"], event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"RESET_EMBEDDED_KEY\") {\n      TKHQ.logMessage(`⬇️ Received message ${event.data[\"type\"]}`);\n      try {\n        TKHQ.onResetEmbeddedKey();\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString());\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"SIGN_TRANSACTION\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}`\n      );\n      try {\n        await onSignTransaction(\n          event.data[\"value\"],\n          event.data[\"requestId\"]\n        );\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"SIGN_MESSAGE\") {\n      TKHQ.logMessage(\n        `⬇️ Received message ${event.data[\"type\"]}: ${event.data[\"value\"]}`\n      );\n      try {\n        await onSignMessage(event.data[\"value\"], event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n    if (event.data && event.data[\"type\"] == \"CLEAR_EMBEDDED_PRIVATE_KEY\") {\n      TKHQ.logMessage(`⬇️ Received message ${event.data[\"type\"]}`);\n      try {\n        await onClearEmbeddedPrivateKey(event.data[\"requestId\"]);\n      } catch (e) {\n        TKHQ.sendMessageUp(\"ERROR\", e.toString(), event.data[\"requestId\"]);\n      }\n    }\n  };\n}\n\n/**\n * Set up event handlers for both DOM and message events\n * @param {Function} HpkeDecrypt\n */\nexport function initEventHandlers(HpkeDecrypt) {\n  const messageEventListener = initMessageEventListener(HpkeDecrypt);\n\n  // controllers to remove event listeners\n  const messageListenerController = new AbortController();\n  const turnkeyInitController = new AbortController();\n\n  // Add DOM event listeners for standalone mode\n  addDOMEventListeners();\n\n  // Add window message listener for iframe mode\n  window.addEventListener(\"message\", messageEventListener, {\n    capture: false,\n    signal: messageListenerController.signal,\n  });\n\n  // Handle MessageChannel initialization for iframe communication\n  window.addEventListener(\n    \"message\",\n    async function (event) {\n      /**\n       * @turnkey/iframe-stamper >= v2.1.0 is using a MessageChannel to communicate with the parent frame.\n       * The parent frame sends a TURNKEY_INIT_MESSAGE_CHANNEL event with the MessagePort.\n       * If we receive this event, we want to remove the message event listener that was added in the DOMContentLoaded event to avoid processing messages twice.\n       * We persist the MessagePort so we can use it to communicate with the parent window in subsequent calls to TKHQ.sendMessageUp\n       */\n      if (\n        event.data &&\n        event.data[\"type\"] == \"TURNKEY_INIT_MESSAGE_CHANNEL\" &&\n        event.ports?.[0]\n      ) {\n        // remove the message event listener that was added in the DOMContentLoaded event\n        messageListenerController.abort();\n\n        const iframeMessagePort = event.ports[0];\n        iframeMessagePort.onmessage = messageEventListener;\n\n        TKHQ.setParentFrameMessageChannelPort(iframeMessagePort);\n\n        await TKHQ.initEmbeddedKey(event.origin);\n        var embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n        var targetPubBuf = await TKHQ.p256JWKPrivateToPublic(\n          embeddedKeyJwk\n        );\n        var targetPubHex = TKHQ.uint8arrayToHexString(targetPubBuf);\n        document.getElementById(\"embedded-key\").value = targetPubHex;\n\n        TKHQ.sendMessageUp(\"PUBLIC_KEY_READY\", targetPubHex);\n\n        // remove the listener for TURNKEY_INIT_MESSAGE_CHANNEL after it's been processed\n        turnkeyInitController.abort();\n      }\n    },\n    { signal: turnkeyInitController.signal }\n  );\n\n  return { messageEventListener };\n}\n","import { TKHQ } from './turnkey-core.js';\nimport {\n  CipherSuite,\n  DhkemP256HkdfSha256,\n  HkdfSha256,\n  Aes256Gcm,\n} from '@hpke/core';\n\n/**\n * Decrypt the ciphertext (ArrayBuffer) given an encapsulation key (ArrayBuffer)\n * and the receivers private key (JSON Web Key).\n */\nexport async function HpkeDecrypt({\n  ciphertextBuf,\n  encappedKeyBuf,\n  receiverPrivJwk,\n}) {\n  const kemContext = new DhkemP256HkdfSha256();\n  var receiverPriv = await kemContext.importKey(\n    \"jwk\",\n    { ...receiverPrivJwk },\n    false\n  );\n\n  var suite = new CipherSuite({\n    kem: kemContext,\n    kdf: new HkdfSha256(),\n    aead: new Aes256Gcm(),\n  });\n\n  var recipientCtx = await suite.createRecipientContext({\n    recipientKey: receiverPriv,\n    enc: encappedKeyBuf,\n    info: new TextEncoder().encode(\"turnkey_hpke\"),\n  });\n\n  var receiverPubBuf = await TKHQ.p256JWKPrivateToPublic(receiverPrivJwk);\n  var aad = TKHQ.additionalAssociatedData(encappedKeyBuf, receiverPubBuf);\n  var res;\n  try {\n    res = await recipientCtx.open(ciphertextBuf, aad);\n  } catch (e) {\n    throw new Error(\n      \"unable to decrypt bundle using embedded key. the bundle may be incorrect. failed with error: \" +\n        e.toString()\n    );\n  }\n  return res;\n}\n","// This file is the main entrypoint of the webpack-bundled application\n\n// Import relevant modules\nimport { TKHQ } from \"./turnkey-core.js\";\nimport { initEventHandlers } from \"./event-handlers.js\";\nimport { HpkeDecrypt } from \"./crypto-utils.js\";\nimport \"./styles.css\";\n\n// Surface TKHQ for external access\nwindow.TKHQ = TKHQ;\n\n// Init app\ndocument.addEventListener(\"DOMContentLoaded\", async function () {\n  await TKHQ.initEmbeddedKey();\n  const embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n  const targetPubBuf = await TKHQ.p256JWKPrivateToPublic(embeddedKeyJwk);\n  const targetPubHex = TKHQ.uint8arrayToHexString(targetPubBuf);\n  document.getElementById(\"embedded-key\").value = targetPubHex;\n\n  initEventHandlers(HpkeDecrypt);\n\n  // If styles are saved in local storage, sanitize and apply them\n  const styleSettings = TKHQ.getSettings();\n  if (styleSettings) {\n    TKHQ.applySettings(styleSettings);\n  }\n\n  TKHQ.sendMessageUp(\"PUBLIC_KEY_READY\", targetPubHex);\n});\n\n// Init MessageChannel for communication between iframe <> parent page\nwindow.addEventListener(\"message\", async function (event) {\n  if (\n    event.data &&\n    event.data[\"type\"] == \"TURNKEY_INIT_MESSAGE_CHANNEL\" &&\n    event.ports?.[0]\n  ) {\n    const iframeMessagePort = event.ports[0];\n    iframeMessagePort.onmessage =\n      initEventHandlers(HpkeDecrypt).messageEventListener;\n\n    TKHQ.setParentFrameMessageChannelPort(iframeMessagePort);\n\n    await TKHQ.initEmbeddedKey();\n    const embeddedKeyJwk = await TKHQ.getEmbeddedKey();\n    const targetPubBuf = await TKHQ.p256JWKPrivateToPublic(embeddedKeyJwk);\n    const targetPubHex = TKHQ.uint8arrayToHexString(targetPubBuf);\n    document.getElementById(\"embedded-key\").value = targetPubHex;\n\n    TKHQ.sendMessageUp(\"PUBLIC_KEY_READY\", targetPubHex);\n  }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + \"0ced51019a21da6755fa\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexport_and_sign\"] = self[\"webpackChunkexport_and_sign\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(758)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","_OverloadYield","k","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","toString","slice","constructor","name","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","TURNKEY_EMBEDDED_KEY","TURNKEY_SETTINGS","parentFrameMessageChannelPort","isDoublyIframed","undefined","window","location","ancestorOrigins","parent","top","loadQuorumKey","_x","_loadQuorumKey","_regeneratorRuntime","mark","_callee","quorumPublic","wrap","_context","prev","crypto","subtle","importKey","namedCurve","abrupt","sent","stop","_initEmbeddedKey","_callee2","_context2","Error","getEmbeddedKey","generateTargetKey","setEmbeddedKey","_generateTargetKey","_callee3","p256key","_context3","generateKey","exportKey","privateKey","jwtKey","getItemWithExpiry","JSON","parse","targetKey","setItemWithExpiry","stringify","key","ttl","item","expiry","Date","getTime","localStorage","setItem","itemStr","getItem","hasOwnProperty","removeItem","uint8arrayFromHexString","hexString","Uint8Array","match","map","h","parseInt","uint8arrayToHexString","buffer","x","padStart","join","normalizePadding","byteArray","targetLength","paddingLength","padding","fill","concat","expectedZeroCount","zeroCount","fromDerSignature","derSignature","derSignatureBuf","index","rLength","sLength","s","rPadded","sPadded","_verifyEnclaveSignature","_callee4","enclaveQuorumPublic","publicSignature","signedData","TURNKEY_SIGNERS_ENCLAVES","TURNKEY_SIGNER_ENCLAVE_QUORUM_PUBLIC_KEY","encryptionQuorumPublicBuf","quorumKey","publicSignatureBuf","signedDataBuf","_context4","prod","preprod","__TURNKEY_SIGNER_ENVIRONMENT__","verify","hash","logMessage","content","messageLog","document","getElementById","message","createElement","innerText","appendChild","_p256JWKPrivateToPublic","_callee5","jwkPrivate","jwkPrivateCopy","publicKey","_context5","_objectSpread","key_ops","base58Encode","bytes","result","digits","carry","j","base58Decode","alphabet","decodedBytes","BigInt","leadingZeros","indexOf","currentByte","reverse","_encodeKey","_callee6","privateKeyBytes","keyFormat","publicKeyBytes","concatenatedBytes","_context6","t0","set","console","warn","validateStyles","styles","element","validStyles","cssValidationRegex","margin","borderWidth","borderStyle","borderColor","borderRadius","fontSize","fontWeight","fontFamily","color","backgroundColor","width","height","maxWidth","maxHeight","lineHeight","boxShadow","textAlign","overflowWrap","wordWrap","resize","entries","forEach","_ref","_ref2","property","styleProperty","trim","styleRegexStr","styleRegex","RegExp","styleValue","TKHQ","initEmbeddedKey","onResetEmbeddedKey","p256JWKPrivateToPublic","_x5","encodeKey","_x6","_x7","_x8","encodeWallet","walletBytes","mnemonic","wallet","TextDecoder","decode","passphrase","includes","parts","split","sendMessageUp","type","requestId","postMessage","setParentFrameMessageChannelPort","port","additionalAssociatedData","senderPubBuf","receiverPubBuf","verifyEnclaveSignature","_x2","_x3","_x4","getEd25519PublicKey","privateKeyHex","nobleEd25519","sha512Sync","_nobleEd25519$etc","nobleHashes","sha512","concatBytes","applySettings","settings","validSettings","settingsObj","keyDivTextarea","_ref3","_ref4","style","getSettings","setSettings","parsePrivateKey","startsWith","error","decryptedKey","displayKey","body","children","child","tagName","id","display","border","keyDiv","styleKey","decryptBundle","_decryptBundle","_callee8","bundle","organizationId","HpkeDecrypt","encappedKeyBuf","ciphertextBuf","bundleObj","embeddedKeyJwk","_context8","version","data","dataSignature","encappedPublic","ciphertext","receiverPrivJwk","onInjectKeyBundle","_onInjectKeyBundle","_callee9","keyBytes","_context9","subarray","rawBytes","format","onInjectWalletBundle","_x9","_x10","_x11","_x12","_onInjectWalletBundle","_callee10","_context10","onApplySettings","_x13","_x14","_onApplySettings","_callee11","_context11","onSignTransaction","_x15","_x16","_onSignTransaction","_callee12","serializedTransaction","keypair","transactionWrapper","transactionToSign","signedTransaction","transaction","signedTransactionHex","_context12","createSolanaKeypair","VersionedTransaction","deserialize","sign","serialize","onSignMessage","_x17","_x18","_onSignMessage","_callee13","serializedMessage","messageWrapper","messageToSign","messageType","messageBytes","signatureHex","signature","_context13","TextEncoder","encode","nacl","detached","secretKey","toBytes","onClearEmbeddedPrivateKey","_x19","_onClearEmbeddedPrivateKey","_callee14","_context14","ArrayBuffer","isView","_x20","_createSolanaKeypair","_callee15","_context15","Keypair","fromSeed","fromSecretKey","initEventHandlers","messageEventListener","_messageEventListener","event","t1","t2","t3","t4","t5","_x26","initMessageEventListener","messageListenerController","AbortController","turnkeyInitController","addEventListener","preventDefault","_x21","_x22","_x23","_x24","injectWalletBtn","_ref5","_x25","addDOMEventListeners","capture","signal","_ref6","_callee7","_event$ports","iframeMessagePort","targetPubBuf","targetPubHex","_context7","ports","abort","onmessage","origin","_x27","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","String","_toPrimitive","_toPropertyKey","_HpkeDecrypt","kemContext","receiverPriv","suite","recipientCtx","aad","res","DhkemP256HkdfSha256","CipherSuite","kem","kdf","HkdfSha256","aead","Aes256Gcm","createRecipientContext","recipientKey","enc","info","open","styleSettings","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","getter","__esModule","obj","mode","this","ns","def","current","getOwnPropertyNames","definition","get","chunkId","all","reduce","promises","miniCssF","prop","url","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","setAttribute","src","onScriptComplete","onerror","onload","clearTimeout","timeout","doneFns","parentNode","removeChild","setTimeout","target","head","nmd","paths","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}