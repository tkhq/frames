{"version":3,"file":"bundle.eb94e2adfa169c782098.js","mappings":"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","sources":["webpack://export-tests/./node_modules/jayson/lib/client/browser/index.js","webpack://export-tests/./node_modules/ieee754/index.js","webpack://export-tests/./node_modules/@noble/hashes/esm/_u64.js","webpack://export-tests/./node_modules/text-encoding-utf-8/lib/encoding.lib.js","webpack://export-tests/./node_modules/buffer/index.js","webpack://export-tests/./node_modules/jayson/lib/generateRequest.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/errors.js","webpack://export-tests/./node_modules/@hpke/common/esm/_dnt.shims.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/algorithm.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/identifiers.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/consts.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/interfaces/kemInterface.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/utils/misc.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/kems/dhkem.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/utils/bignum.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/kdfs/hkdf.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js","webpack://export-tests/./node_modules/@hpke/common/esm/src/curve/montgomery.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/aeads/aesGcm.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/aeads/exportOnly.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/utils/emitNotSupported.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/exporterContext.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/encryptionContext.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/recipientContext.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/senderContext.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/cipherSuiteNative.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/kems/dhkemNative.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/native.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/kems/dhkemX25519.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js","webpack://export-tests/./node_modules/@hpke/core/esm/src/kems/dhkemX448.js","webpack://export-tests/./node_modules/uuid/dist/esm-browser/rng.js","webpack://export-tests/./node_modules/uuid/dist/esm-browser/regex.js","webpack://export-tests/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://export-tests/./node_modules/uuid/dist/esm-browser/validate.js","webpack://export-tests/./node_modules/uuid/dist/esm-browser/v4.js","webpack://export-tests/./node_modules/base-x/src/index.js","webpack://export-tests/./node_modules/tweetnacl-util/nacl-util.js","webpack://export-tests/./node_modules/bn.js/lib/bn.js","webpack://export-tests/./node_modules/@noble/hashes/esm/_md.js","webpack://export-tests/./node_modules/@noble/hashes/esm/sha2.js","webpack://export-tests/./node_modules/@noble/hashes/esm/sha512.js","webpack://export-tests/./node_modules/@noble/curves/esm/utils.js","webpack://export-tests/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://export-tests/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://export-tests/./node_modules/@noble/curves/esm/abstract/edwards.js","webpack://export-tests/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js","webpack://export-tests/./node_modules/@noble/curves/esm/ed25519.js","webpack://export-tests/./node_modules/@noble/hashes/esm/sha256.js","webpack://export-tests/./node_modules/@solana/errors/dist/index.browser.mjs","webpack://export-tests/./node_modules/@solana/codecs-core/dist/index.browser.mjs","webpack://export-tests/./node_modules/@solana/codecs-numbers/dist/index.browser.mjs","webpack://export-tests/./node_modules/superstruct/dist/index.mjs","webpack://export-tests/./node_modules/rpc-websockets/dist/index.browser.mjs","webpack://export-tests/./node_modules/@noble/hashes/esm/sha3.js","webpack://export-tests/./node_modules/@noble/hashes/esm/hmac.js","webpack://export-tests/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://export-tests/./node_modules/@noble/curves/esm/secp256k1.js","webpack://export-tests/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://export-tests/./node_modules/@solana/web3.js/lib/index.browser.esm.js","webpack://export-tests/./node_modules/base64-js/index.js","webpack://export-tests/./node_modules/@noble/hashes/esm/crypto.js","webpack://export-tests/./node_modules/@noble/hashes/esm/utils.js","webpack://export-tests/./node_modules/@noble/ed25519/index.js","webpack://export-tests/./node_modules/@solana/buffer-layout/lib/Layout.js","webpack://export-tests/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack://export-tests/./node_modules/borsh/lib/index.js","webpack://export-tests/./node_modules/bs58/index.js","webpack://export-tests/./node_modules/safe-buffer/index.js","webpack://export-tests/./node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * The base error class of hpke-js.\n * @group Errors\n */\nexport class HpkeError extends Error {\n    constructor(e) {\n        let message;\n        if (e instanceof Error) {\n            message = e.message;\n        }\n        else if (typeof e === \"string\") {\n            message = e;\n        }\n        else {\n            message = \"\";\n        }\n        super(message);\n        this.name = this.constructor.name;\n    }\n}\n/**\n * Invalid parameter.\n * @group Errors\n */\nexport class InvalidParamError extends HpkeError {\n}\n/**\n * KEM input or output validation failure.\n * @group Errors\n */\nexport class ValidationError extends HpkeError {\n}\n/**\n * Public or private key serialization failure.\n * @group Errors\n */\nexport class SerializeError extends HpkeError {\n}\n/**\n * Public or private key deserialization failure.\n * @group Errors\n */\nexport class DeserializeError extends HpkeError {\n}\n/**\n * encap() failure.\n * @group Errors\n */\nexport class EncapError extends HpkeError {\n}\n/**\n * decap() failure.\n * @group Errors\n */\nexport class DecapError extends HpkeError {\n}\n/**\n * Secret export failure.\n * @group Errors\n */\nexport class ExportError extends HpkeError {\n}\n/**\n * seal() failure.\n * @group Errors\n */\nexport class SealError extends HpkeError {\n}\n/**\n * open() failure.\n * @group Errors\n */\nexport class OpenError extends HpkeError {\n}\n/**\n * Sequence number overflow on the encryption context.\n * @group Errors\n */\nexport class MessageLimitReachedError extends HpkeError {\n}\n/**\n * Key pair derivation failure.\n * @group Errors\n */\nexport class DeriveKeyPairError extends HpkeError {\n}\n/**\n * Not supported failure.\n * @group Errors\n */\nexport class NotSupportedError extends HpkeError {\n}\n","const dntGlobals = {};\nexport const dntGlobalThis = createMergeProxy(globalThis, dntGlobals);\nfunction createMergeProxy(baseObj, extObj) {\n    return new Proxy(baseObj, {\n        get(_target, prop, _receiver) {\n            if (prop in extObj) {\n                return extObj[prop];\n            }\n            else {\n                return baseObj[prop];\n            }\n        },\n        set(_target, prop, value) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            baseObj[prop] = value;\n            return true;\n        },\n        deleteProperty(_target, prop) {\n            let success = false;\n            if (prop in extObj) {\n                delete extObj[prop];\n                success = true;\n            }\n            if (prop in baseObj) {\n                delete baseObj[prop];\n                success = true;\n            }\n            return success;\n        },\n        ownKeys(_target) {\n            const baseKeys = Reflect.ownKeys(baseObj);\n            const extKeys = Reflect.ownKeys(extObj);\n            const extKeysSet = new Set(extKeys);\n            return [...baseKeys.filter((k) => !extKeysSet.has(k)), ...extKeys];\n        },\n        defineProperty(_target, prop, desc) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            Reflect.defineProperty(baseObj, prop, desc);\n            return true;\n        },\n        getOwnPropertyDescriptor(_target, prop) {\n            if (prop in extObj) {\n                return Reflect.getOwnPropertyDescriptor(extObj, prop);\n            }\n            else {\n                return Reflect.getOwnPropertyDescriptor(baseObj, prop);\n            }\n        },\n        has(_target, prop) {\n            return prop in extObj || prop in baseObj;\n        },\n    });\n}\n","import * as dntShim from \"../_dnt.shims.js\";\nimport { NotSupportedError } from \"./errors.js\";\nasync function loadSubtleCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (e) {\n        throw new NotSupportedError(e);\n    }\n}\nexport class NativeAlgorithm {\n    constructor() {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n    }\n    async _setup() {\n        if (this._api !== undefined) {\n            return;\n        }\n        this._api = await loadSubtleCrypto();\n    }\n}\n","/**\n * The supported HPKE modes.\n */\nexport const Mode = {\n    Base: 0x00,\n    Psk: 0x01,\n    Auth: 0x02,\n    AuthPsk: 0x03,\n};\n/**\n * The supported Key Encapsulation Mechanism (KEM) identifiers.\n */\nexport const KemId = {\n    NotAssigned: 0x0000,\n    DhkemP256HkdfSha256: 0x0010,\n    DhkemP384HkdfSha384: 0x0011,\n    DhkemP521HkdfSha512: 0x0012,\n    DhkemSecp256k1HkdfSha256: 0x0013,\n    DhkemX25519HkdfSha256: 0x0020,\n    DhkemX448HkdfSha512: 0x0021,\n    HybridkemX25519Kyber768: 0x0030,\n    MlKem512: 0x0040,\n    MlKem768: 0x0041,\n    MlKem1024: 0x0042,\n    XWing: 0x647a,\n};\n/**\n * The supported Key Derivation Function (KDF) identifiers.\n */\nexport const KdfId = {\n    HkdfSha256: 0x0001,\n    HkdfSha384: 0x0002,\n    HkdfSha512: 0x0003,\n};\n/**\n * The supported Authenticated Encryption with Associated Data (AEAD) identifiers.\n */\nexport const AeadId = {\n    Aes128Gcm: 0x0001,\n    Aes256Gcm: 0x0002,\n    Chacha20Poly1305: 0x0003,\n    ExportOnly: 0xFFFF,\n};\n","// The input length limit (psk, psk_id, info, exporter_context, ikm).\nexport const INPUT_LENGTH_LIMIT = 8192;\nexport const INFO_LENGTH_LIMIT = 65536;\n// The minimum length of a PSK.\nexport const MINIMUM_PSK_LENGTH = 32;\n// b\"\"\nexport const EMPTY = new Uint8Array(0);\n","// b\"KEM\"\nexport const SUITE_ID_HEADER_KEM = new Uint8Array([\n    75,\n    69,\n    77,\n    0,\n    0,\n]);\n","import * as dntShim from \"../../_dnt.shims.js\";\nimport { KemId } from \"../identifiers.js\";\nexport const isDenoV1 = () => \n// deno-lint-ignore no-explicit-any\ndntShim.dntGlobalThis.process === undefined;\n/**\n * Checks whether the runtime is Deno or not (Node.js).\n * @returns boolean - true if the runtime is Deno, false Node.js.\n */\nexport function isDeno() {\n    // deno-lint-ignore no-explicit-any\n    if (dntShim.dntGlobalThis.process === undefined) {\n        return true;\n    }\n    // deno-lint-ignore no-explicit-any\n    return dntShim.dntGlobalThis.process?.versions?.deno !== undefined;\n}\n/**\n * Checks whetehr the type of input is CryptoKeyPair or not.\n */\nexport const isCryptoKeyPair = (x) => typeof x === \"object\" &&\n    x !== null &&\n    typeof x.privateKey === \"object\" &&\n    typeof x.publicKey === \"object\";\n/**\n * Converts integer to octet string. I2OSP implementation.\n */\nexport function i2Osp(n, w) {\n    if (w <= 0) {\n        throw new Error(\"i2Osp: too small size\");\n    }\n    if (n >= 256 ** w) {\n        throw new Error(\"i2Osp: too large integer\");\n    }\n    const ret = new Uint8Array(w);\n    for (let i = 0; i < w && n; i++) {\n        ret[w - (i + 1)] = n % 256;\n        n = n >> 8;\n    }\n    return ret;\n}\n/**\n * Concatenates two Uint8Arrays.\n * @param a Uint8Array\n * @param b Uint8Array\n * @returns Concatenated Uint8Array\n */\nexport function concat(a, b) {\n    const ret = new Uint8Array(a.length + b.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    return ret;\n}\n/**\n * Decodes Base64Url-encoded data.\n * @param v Base64Url-encoded string\n * @returns Uint8Array\n */\nexport function base64UrlToBytes(v) {\n    const base64 = v.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const byteString = atob(base64);\n    const ret = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        ret[i] = byteString.charCodeAt(i);\n    }\n    return ret;\n}\n/**\n * Encodes Uint8Array to Base64Url.\n * @param v Uint8Array\n * @returns Base64Url-encoded string\n */\nexport function bytesToBase64Url(v) {\n    return btoa(String.fromCharCode(...v))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=*$/g, \"\");\n}\n/**\n * Decodes hex string to Uint8Array.\n * @param v Hex string\n * @returns Uint8Array\n * @throws Error if the input is not a hex string.\n */\nexport function hexToBytes(v) {\n    if (v.length === 0) {\n        return new Uint8Array([]);\n    }\n    const res = v.match(/[\\da-f]{2}/gi);\n    if (res == null) {\n        throw new Error(\"Not hex string.\");\n    }\n    return new Uint8Array(res.map(function (h) {\n        return parseInt(h, 16);\n    }));\n}\n/**\n * Encodes Uint8Array to hex string.\n * @param v Uint8Array\n * @returns Hex string\n */\nexport function bytesToHex(v) {\n    return [...v].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * Converts KemId to KeyAlgorithm.\n * @param kem KemId\n * @returns KeyAlgorithm\n */\nexport function kemToKeyGenAlgorithm(kem) {\n    switch (kem) {\n        case KemId.DhkemP256HkdfSha256:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-256\",\n            };\n        case KemId.DhkemP384HkdfSha384:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-384\",\n            };\n        case KemId.DhkemP521HkdfSha512:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-521\",\n            };\n        default:\n            // case KemId.DhkemX25519HkdfSha256\n            return {\n                name: \"X25519\",\n            };\n    }\n}\nexport async function loadSubtleCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (_e) {\n        throw new Error(\"Failed to load SubtleCrypto\");\n    }\n}\nexport async function loadCrypto() {\n    if (dntShim.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await import(\"crypto\"); // node:crypto\n        return webcrypto;\n    }\n    catch (_e) {\n        throw new Error(\"Web Cryptograph API not supported\");\n    }\n}\n/**\n * XOR for Uint8Array.\n */\nexport function xor(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        throw new Error(\"xor: different length inputs\");\n    }\n    const buf = new Uint8Array(a.byteLength);\n    for (let i = 0; i < a.byteLength; i++) {\n        buf[i] = a[i] ^ b[i];\n    }\n    return buf;\n}\n","import { EMPTY, INPUT_LENGTH_LIMIT } from \"../consts.js\";\nimport { DecapError, EncapError, InvalidParamError } from \"../errors.js\";\nimport { SUITE_ID_HEADER_KEM } from \"../interfaces/kemInterface.js\";\nimport { concat, i2Osp, isCryptoKeyPair } from \"../utils/misc.js\";\n// b\"eae_prk\"\nconst LABEL_EAE_PRK = new Uint8Array([101, 97, 101, 95, 112, 114, 107]);\n// b\"shared_secret\"\n// deno-fmt-ignore\nconst LABEL_SHARED_SECRET = new Uint8Array([\n    115, 104, 97, 114, 101, 100, 95, 115, 101, 99,\n    114, 101, 116,\n]);\nfunction concat3(a, b, c) {\n    const ret = new Uint8Array(a.length + b.length + c.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    ret.set(c, a.length + b.length);\n    return ret;\n}\nexport class Dhkem {\n    constructor(id, prim, kdf) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_prim\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.id = id;\n        this._prim = prim;\n        this._kdf = kdf;\n        const suiteId = new Uint8Array(SUITE_ID_HEADER_KEM);\n        suiteId.set(i2Osp(this.id, 2), 3);\n        this._kdf.init(suiteId);\n    }\n    async serializePublicKey(key) {\n        return await this._prim.serializePublicKey(key);\n    }\n    async deserializePublicKey(key) {\n        return await this._prim.deserializePublicKey(key);\n    }\n    async serializePrivateKey(key) {\n        return await this._prim.serializePrivateKey(key);\n    }\n    async deserializePrivateKey(key) {\n        return await this._prim.deserializePrivateKey(key);\n    }\n    async importKey(format, key, isPublic = true) {\n        return await this._prim.importKey(format, key, isPublic);\n    }\n    async generateKeyPair() {\n        return await this._prim.generateKeyPair();\n    }\n    async deriveKeyPair(ikm) {\n        if (ikm.byteLength > INPUT_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long ikm\");\n        }\n        return await this._prim.deriveKeyPair(ikm);\n    }\n    async encap(params) {\n        let ke;\n        if (params.ekm === undefined) {\n            ke = await this.generateKeyPair();\n        }\n        else if (isCryptoKeyPair(params.ekm)) {\n            // params.ekm is only used for testing.\n            ke = params.ekm;\n        }\n        else {\n            // params.ekm is only used for testing.\n            ke = await this.deriveKeyPair(params.ekm);\n        }\n        const enc = await this._prim.serializePublicKey(ke.publicKey);\n        const pkrm = await this._prim.serializePublicKey(params.recipientPublicKey);\n        try {\n            let dh;\n            if (params.senderKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n            }\n            else {\n                const sks = isCryptoKeyPair(params.senderKey)\n                    ? params.senderKey.privateKey\n                    : params.senderKey;\n                const dh1 = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n                const dh2 = new Uint8Array(await this._prim.dh(sks, params.recipientPublicKey));\n                dh = concat(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderKey === undefined) {\n                kemContext = concat(new Uint8Array(enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pks = isCryptoKeyPair(params.senderKey)\n                    ? params.senderKey.publicKey\n                    : await this._prim.derivePublicKey(params.senderKey);\n                const pksm = await this._prim.serializePublicKey(pks);\n                kemContext = concat3(new Uint8Array(enc), new Uint8Array(pkrm), new Uint8Array(pksm));\n            }\n            const sharedSecret = await this._generateSharedSecret(dh, kemContext);\n            return {\n                enc: enc,\n                sharedSecret: sharedSecret,\n            };\n        }\n        catch (e) {\n            throw new EncapError(e);\n        }\n    }\n    async decap(params) {\n        const pke = await this._prim.deserializePublicKey(params.enc);\n        const skr = isCryptoKeyPair(params.recipientKey)\n            ? params.recipientKey.privateKey\n            : params.recipientKey;\n        const pkr = isCryptoKeyPair(params.recipientKey)\n            ? params.recipientKey.publicKey\n            : await this._prim.derivePublicKey(params.recipientKey);\n        const pkrm = await this._prim.serializePublicKey(pkr);\n        try {\n            let dh;\n            if (params.senderPublicKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(skr, pke));\n            }\n            else {\n                const dh1 = new Uint8Array(await this._prim.dh(skr, pke));\n                const dh2 = new Uint8Array(await this._prim.dh(skr, params.senderPublicKey));\n                dh = concat(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderPublicKey === undefined) {\n                kemContext = concat(new Uint8Array(params.enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pksm = await this._prim.serializePublicKey(params.senderPublicKey);\n                kemContext = new Uint8Array(params.enc.byteLength + pkrm.byteLength + pksm.byteLength);\n                kemContext.set(new Uint8Array(params.enc), 0);\n                kemContext.set(new Uint8Array(pkrm), params.enc.byteLength);\n                kemContext.set(new Uint8Array(pksm), params.enc.byteLength + pkrm.byteLength);\n            }\n            return await this._generateSharedSecret(dh, kemContext);\n        }\n        catch (e) {\n            throw new DecapError(e);\n        }\n    }\n    async _generateSharedSecret(dh, kemContext) {\n        const labeledIkm = this._kdf.buildLabeledIkm(LABEL_EAE_PRK, dh);\n        const labeledInfo = this._kdf.buildLabeledInfo(LABEL_SHARED_SECRET, kemContext, this.secretSize);\n        return await this._kdf.extractAndExpand(EMPTY.buffer, labeledIkm.buffer, labeledInfo.buffer, this.secretSize);\n    }\n}\n","// The key usages for KEM.\nexport const KEM_USAGES = [\"deriveBits\"];\n// b\"dkp_prk\"\nexport const LABEL_DKP_PRK = new Uint8Array([\n    100,\n    107,\n    112,\n    95,\n    112,\n    114,\n    107,\n]);\n// b\"sk\"\nexport const LABEL_SK = new Uint8Array([115, 107]);\n","/**\n * The minimum inplementation of bignum to derive an EC key pair.\n */\nexport class Bignum {\n    constructor(size) {\n        Object.defineProperty(this, \"_num\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._num = new Uint8Array(size);\n    }\n    val() {\n        return this._num;\n    }\n    reset() {\n        this._num.fill(0);\n    }\n    set(src) {\n        if (src.length !== this._num.length) {\n            throw new Error(\"Bignum.set: invalid argument\");\n        }\n        this._num.set(src);\n    }\n    isZero() {\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] !== 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    lessThan(v) {\n        if (v.length !== this._num.length) {\n            throw new Error(\"Bignum.lessThan: invalid argument\");\n        }\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] < v[i]) {\n                return true;\n            }\n            if (this._num[i] > v[i]) {\n                return false;\n            }\n        }\n        return false;\n    }\n}\n","import { NativeAlgorithm } from \"../../algorithm.js\";\nimport { EMPTY } from \"../../consts.js\";\nimport { DeriveKeyPairError, DeserializeError, NotSupportedError, SerializeError, } from \"../../errors.js\";\nimport { KemId } from \"../../identifiers.js\";\nimport { KEM_USAGES, LABEL_DKP_PRK } from \"../../interfaces/dhkemPrimitives.js\";\nimport { Bignum } from \"../../utils/bignum.js\";\nimport { base64UrlToBytes, i2Osp } from \"../../utils/misc.js\";\n// b\"candidate\"\n// deno-fmt-ignore\nconst LABEL_CANDIDATE = new Uint8Array([\n    99, 97, 110, 100, 105, 100, 97, 116, 101,\n]);\n// the order of the curve being used.\n// deno-fmt-ignore\nconst ORDER_P_256 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xbc, 0xe6, 0xfa, 0xad, 0xa7, 0x17, 0x9e, 0x84,\n    0xf3, 0xb9, 0xca, 0xc2, 0xfc, 0x63, 0x25, 0x51,\n]);\n// deno-fmt-ignore\nconst ORDER_P_384 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xc7, 0x63, 0x4d, 0x81, 0xf4, 0x37, 0x2d, 0xdf,\n    0x58, 0x1a, 0x0d, 0xb2, 0x48, 0xb0, 0xa7, 0x7a,\n    0xec, 0xec, 0x19, 0x6a, 0xcc, 0xc5, 0x29, 0x73,\n]);\n// deno-fmt-ignore\nconst ORDER_P_521 = new Uint8Array([\n    0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xfa, 0x51, 0x86, 0x87, 0x83, 0xbf, 0x2f,\n    0x96, 0x6b, 0x7f, 0xcc, 0x01, 0x48, 0xf7, 0x09,\n    0xa5, 0xd0, 0x3b, 0xb5, 0xc9, 0xb8, 0x89, 0x9c,\n    0x47, 0xae, 0xbb, 0x6f, 0xb7, 0x1e, 0x91, 0x38,\n    0x64, 0x09,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_256 = new Uint8Array([\n    48, 65, 2, 1, 0, 48, 19, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 8, 42, 134,\n    72, 206, 61, 3, 1, 7, 4, 39, 48, 37,\n    2, 1, 1, 4, 32,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_384 = new Uint8Array([\n    48, 78, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 34, 4, 55, 48, 53, 2, 1, 1,\n    4, 48,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_521 = new Uint8Array([\n    48, 96, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 35, 4, 73, 48, 71, 2, 1, 1,\n    4, 66,\n]);\nexport class Ec extends NativeAlgorithm {\n    constructor(kem, hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // EC specific arguments for deriving key pair.\n        Object.defineProperty(this, \"_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_bitmask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._hkdf = hkdf;\n        switch (kem) {\n            case KemId.DhkemP256HkdfSha256:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-256\" };\n                this._nPk = 65;\n                this._nSk = 32;\n                this._nDh = 32;\n                this._order = ORDER_P_256;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_256;\n                break;\n            case KemId.DhkemP384HkdfSha384:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-384\" };\n                this._nPk = 97;\n                this._nSk = 48;\n                this._nDh = 48;\n                this._order = ORDER_P_384;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_384;\n                break;\n            default:\n                // case KemId.DhkemP521HkdfSha512:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-521\" };\n                this._nPk = 133;\n                this._nSk = 66;\n                this._nDh = 66;\n                this._order = ORDER_P_521;\n                this._bitmask = 0x01;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_521;\n                break;\n        }\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(this._alg, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const bn = new Bignum(this._nSk);\n            for (let counter = 0; bn.isZero() || !bn.lessThan(this._order); counter++) {\n                if (counter > 255) {\n                    throw new Error(\"Faild to derive a key pair\");\n                }\n                const bytes = new Uint8Array(await this._hkdf.labeledExpand(dkpPrk, LABEL_CANDIDATE, i2Osp(counter, 1), this._nSk));\n                bytes[0] = bytes[0] & this._bitmask;\n                bn.set(bytes);\n            }\n            const sk = await this._deserializePkcs8Key(bn.val());\n            bn.reset();\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        try {\n            await this._setup();\n            const bits = await this._api.deriveBits({\n                name: \"ECDH\",\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.crv === \"undefined\" || key.crv !== this._alg.namedCurve) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","import { EMPTY } from \"../consts.js\";\nimport { InvalidParamError } from \"../errors.js\";\nimport { KdfId } from \"../identifiers.js\";\nimport { NativeAlgorithm } from \"../algorithm.js\";\n// b\"HPKE-v1\"\nconst HPKE_VERSION = new Uint8Array([72, 80, 75, 69, 45, 118, 49]);\nexport class HkdfNative extends NativeAlgorithm {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha256\n        });\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: EMPTY\n        });\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n    init(suiteId) {\n        this._suiteId = suiteId;\n    }\n    buildLabeledIkm(label, ikm) {\n        this._checkInit();\n        const ret = new Uint8Array(7 + this._suiteId.byteLength + label.byteLength + ikm.byteLength);\n        ret.set(HPKE_VERSION, 0);\n        ret.set(this._suiteId, 7);\n        ret.set(label, 7 + this._suiteId.byteLength);\n        ret.set(ikm, 7 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    buildLabeledInfo(label, info, len) {\n        this._checkInit();\n        const ret = new Uint8Array(9 + this._suiteId.byteLength + label.byteLength + info.byteLength);\n        ret.set(new Uint8Array([0, len]), 0);\n        ret.set(HPKE_VERSION, 2);\n        ret.set(this._suiteId, 9);\n        ret.set(label, 9 + this._suiteId.byteLength);\n        ret.set(info, 9 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    async extract(salt, ikm) {\n        await this._setup();\n        if (salt.byteLength === 0) {\n            salt = new ArrayBuffer(this.hashSize);\n        }\n        if (salt.byteLength !== this.hashSize) {\n            throw new InvalidParamError(\"The salt length must be the same as the hashSize\");\n        }\n        const key = await this._api.importKey(\"raw\", salt, this.algHash, false, [\n            \"sign\",\n        ]);\n        return await this._api.sign(\"HMAC\", key, ikm);\n    }\n    async expand(prk, info, len) {\n        await this._setup();\n        const key = await this._api.importKey(\"raw\", prk, this.algHash, false, [\n            \"sign\",\n        ]);\n        const okm = new ArrayBuffer(len);\n        const p = new Uint8Array(okm);\n        let prev = EMPTY;\n        const mid = new Uint8Array(info);\n        const tail = new Uint8Array(1);\n        if (len > 255 * this.hashSize) {\n            throw new Error(\"Entropy limit reached\");\n        }\n        const tmp = new Uint8Array(this.hashSize + mid.length + 1);\n        for (let i = 1, cur = 0; cur < p.length; i++) {\n            tail[0] = i;\n            tmp.set(prev, 0);\n            tmp.set(mid, prev.length);\n            tmp.set(tail, prev.length + mid.length);\n            prev = new Uint8Array(await this._api.sign(\"HMAC\", key, tmp.slice(0, prev.length + mid.length + 1)));\n            if (p.length - cur >= prev.length) {\n                p.set(prev, cur);\n                cur += prev.length;\n            }\n            else {\n                p.set(prev.slice(0, p.length - cur), cur);\n                cur += p.length - cur;\n            }\n        }\n        return okm;\n    }\n    async extractAndExpand(salt, ikm, info, len) {\n        await this._setup();\n        const baseKey = await this._api.importKey(\"raw\", ikm, \"HKDF\", false, [\"deriveBits\"]);\n        return await this._api.deriveBits({\n            name: \"HKDF\",\n            hash: this.algHash.hash,\n            salt: salt,\n            info: info,\n        }, baseKey, len * 8);\n    }\n    async labeledExtract(salt, label, ikm) {\n        return await this.extract(salt, this.buildLabeledIkm(label, ikm).buffer);\n    }\n    async labeledExpand(prk, label, info, len) {\n        return await this.expand(prk, this.buildLabeledInfo(label, info, len).buffer, len);\n    }\n    _checkInit() {\n        if (this._suiteId === EMPTY) {\n            throw new Error(\"Not initialized. Call init()\");\n        }\n    }\n}\nexport class HkdfSha256Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha256 (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha256\n        });\n        /** 32 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n}\nexport class HkdfSha384Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha384 (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha384\n        });\n        /** 48 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-384\",\n                length: 384,\n            }\n        });\n    }\n}\nexport class HkdfSha512Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha512 (0x0003) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KdfId.HkdfSha512\n        });\n        /** 64 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-512\",\n                length: 512,\n            }\n        });\n    }\n}\n","// The key usages for AEAD.\nexport const AEAD_USAGES = [\"encrypt\", \"decrypt\"];\n","/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/abstract/montgomery.ts\n */\n/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes, aInRange, bytesToNumberLE, copyBytes, numberToBytesLE, randomBytesAsync, validateObject, } from \"../utils/noble.js\";\nimport { createKeygen } from \"./curve.js\";\nimport { mod } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        adjustScalarBytes: \"function\",\n        powPminus2: \"function\",\n    });\n    return Object.freeze({ ...curve });\n}\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P, type, adjustScalarBytes, powPminus2, randomBytes: rand } = CURVE;\n    const is25519 = type === \"x25519\";\n    if (!is25519 && type !== \"x448\")\n        throw new Error(\"invalid type\");\n    const randomBytes_ = rand || randomBytesAsync;\n    const montgomeryBits = is25519 ? 255 : 448;\n    const fieldLen = is25519 ? 32 : 56;\n    const Gu = is25519 ? BigInt(9) : BigInt(5);\n    // RFC 7748 #5:\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519 and\n    // (156326 - 2) / 4 = 39081 for curve448/X448\n    // const a = is25519 ? 156326n : 486662n;\n    const a24 = is25519 ? BigInt(121665) : BigInt(39081);\n    // RFC: x25519 \"the resulting integer is of the form 2^254 plus\n    // eight times a value between 0 and 2^251 - 1 (inclusive)\"\n    // x448: \"2^447 plus four times a value between 0 and 2^445 - 1 (inclusive)\"\n    const minScalar = is25519 ? _2n ** BigInt(254) : _2n ** BigInt(447);\n    const maxAdded = is25519\n        ? BigInt(8) * _2n ** BigInt(251) - _1n\n        : BigInt(4) * _2n ** BigInt(445) - _1n;\n    const maxScalar = minScalar + maxAdded + _1n; // (inclusive)\n    const modP = (n) => mod(n, P);\n    const GuBytes = encodeU(Gu);\n    function encodeU(u) {\n        return numberToBytesLE(modP(u), fieldLen);\n    }\n    function decodeU(u) {\n        const _u = copyBytes(abytes(u, fieldLen, \"uCoordinate\"));\n        // RFC: When receiving such an array, implementations of X25519\n        // (but not X448) MUST mask the most significant bit in the final byte.\n        if (is25519)\n            _u[31] &= 127; // 0b0111_1111\n        // RFC: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.  The non-canonical\n        // values are 2^255 - 19 through 2^255 - 1 for X25519 and 2^448 - 2^224\n        // - 1 through 2^448 - 1 for X448.\n        return modP(bytesToNumberLE(_u));\n    }\n    function decodeScalar(scalar) {\n        return bytesToNumberLE(adjustScalarBytes(copyBytes(abytes(scalar, fieldLen, \"scalar\"))));\n    }\n    function scalarMult(scalar, u) {\n        const pu = montgomeryLadder(decodeU(u), decodeScalar(scalar));\n        // Some public keys are useless, of low-order. Curve author doesn't think\n        // it needs to be validated, but we do it nonetheless.\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error(\"invalid private or public key received\");\n        return encodeU(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    const getPublicKey = scalarMultBase;\n    const getSharedSecret = scalarMult;\n    // cswap from RFC7748 \"example code\"\n    function cswap(swap, x_2, x_3) {\n        // dummy = mask(swap) AND (x_2 XOR x_3)\n        // Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n        // and x_3, computed, e.g., as mask(swap) = 0 - swap.\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy); // x_2 = x_2 XOR dummy\n        x_3 = modP(x_3 + dummy); // x_3 = x_3 XOR dummy\n        return { x_2, x_3 };\n    }\n    /**\n     * Montgomery x-only multiplication ladder.\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        aInRange(\"u\", u, _0n, P);\n        aInRange(\"scalar\", scalar, minScalar, maxScalar);\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n            ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n        ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n        const z2 = powPminus2(z_2); // `Fp.pow(x, P - _2n)` is much slower equivalent\n        return modP(x_2 * z2); // Return x_2 * (z_2^(p - 2))\n    }\n    const lengths = {\n        secretKey: fieldLen,\n        publicKey: fieldLen,\n        seed: fieldLen,\n    };\n    const randomSecretKey = async (seed) => {\n        if (seed === undefined) {\n            seed = await randomBytes_(fieldLen);\n        }\n        abytes(seed, lengths.seed, \"seed\");\n        return seed;\n    };\n    const utils = { randomSecretKey };\n    return Object.freeze({\n        keygen: createKeygen(randomSecretKey, getPublicKey),\n        getSharedSecret,\n        getPublicKey,\n        scalarMult,\n        scalarMultBase,\n        utils,\n        GuBytes: GuBytes.slice(),\n        lengths,\n    });\n}\n","import { AEAD_USAGES, AeadId, NativeAlgorithm } from \"@hpke/common\";\nexport class AesGcmContext extends NativeAlgorithm {\n    constructor(key) {\n        super();\n        Object.defineProperty(this, \"_rawKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this._rawKey = key;\n    }\n    async seal(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const ct = await this._api.encrypt(alg, this._key, data);\n        return ct;\n    }\n    async open(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const pt = await this._api.decrypt(alg, this._key, data);\n        return pt;\n    }\n    async _setupKey() {\n        if (this._key !== undefined) {\n            return;\n        }\n        await this._setup();\n        const key = await this._importKey(this._rawKey);\n        (new Uint8Array(this._rawKey)).fill(0);\n        this._key = key;\n        return;\n    }\n    async _importKey(key) {\n        return await this._api.importKey(\"raw\", key, { name: \"AES-GCM\" }, true, AEAD_USAGES);\n    }\n}\n/**\n * The AES-128-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes128Gcm`.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class Aes128Gcm {\n    constructor() {\n        /** AeadId.Aes128Gcm (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AeadId.Aes128Gcm\n        });\n        /** 16 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n    createEncryptionContext(key) {\n        return new AesGcmContext(key);\n    }\n}\n/**\n * The AES-256-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes256Gcm`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class Aes256Gcm extends Aes128Gcm {\n    constructor() {\n        super(...arguments);\n        /** AeadId.Aes256Gcm (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AeadId.Aes256Gcm\n        });\n        /** 32 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n}\n","import { AeadId, NotSupportedError } from \"@hpke/common\";\n/**\n * The ExportOnly mode for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.ExportOnly`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   ExportOnly,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new ExportOnly(),\n * });\n * ```\n */\nexport class ExportOnly {\n    constructor() {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AeadId.ExportOnly\n        });\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    createEncryptionContext(_key) {\n        throw new NotSupportedError(\"Export only\");\n    }\n}\n","import { NotSupportedError } from \"@hpke/common\";\nexport function emitNotSupported() {\n    return new Promise((_resolve, reject) => {\n        reject(new NotSupportedError(\"Not supported\"));\n    });\n}\n","import { ExportError, INPUT_LENGTH_LIMIT, InvalidParamError, } from \"@hpke/common\";\nimport { emitNotSupported } from \"./utils/emitNotSupported.js\";\n// b\"sec\"\nconst LABEL_SEC = new Uint8Array([115, 101, 99]);\nexport class ExporterContextImpl {\n    constructor(api, kdf, exporterSecret) {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exporterSecret\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._api = api;\n        this._kdf = kdf;\n        this.exporterSecret = exporterSecret;\n    }\n    async seal(_data, _aad) {\n        return await emitNotSupported();\n    }\n    async open(_data, _aad) {\n        return await emitNotSupported();\n    }\n    async export(exporterContext, len) {\n        if (exporterContext.byteLength > INPUT_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long exporter context\");\n        }\n        try {\n            return await this._kdf.labeledExpand(this.exporterSecret, LABEL_SEC, new Uint8Array(exporterContext), len);\n        }\n        catch (e) {\n            throw new ExportError(e);\n        }\n    }\n}\nexport class RecipientExporterContextImpl extends ExporterContextImpl {\n}\nexport class SenderExporterContextImpl extends ExporterContextImpl {\n    constructor(api, kdf, exporterSecret, enc) {\n        super(api, kdf, exporterSecret);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n        return;\n    }\n}\n","import { i2Osp, MessageLimitReachedError, xor } from \"@hpke/common\";\nimport { ExporterContextImpl } from \"./exporterContext.js\";\nexport class EncryptionContextImpl extends ExporterContextImpl {\n    constructor(api, kdf, params) {\n        super(api, kdf, params.exporterSecret);\n        // AEAD id.\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a key for the algorithm.\n        Object.defineProperty(this, \"_nK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a nonce for the algorithm.\n        Object.defineProperty(this, \"_nN\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of an authentication tag for the algorithm.\n        Object.defineProperty(this, \"_nT\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The end-to-end encryption key information.\n        Object.defineProperty(this, \"_ctx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (params.key === undefined || params.baseNonce === undefined ||\n            params.seq === undefined) {\n            throw new Error(\"Required parameters are missing\");\n        }\n        this._aead = params.aead;\n        this._nK = this._aead.keySize;\n        this._nN = this._aead.nonceSize;\n        this._nT = this._aead.tagSize;\n        const key = this._aead.createEncryptionContext(params.key);\n        this._ctx = {\n            key: key,\n            baseNonce: params.baseNonce,\n            seq: params.seq,\n        };\n    }\n    computeNonce(k) {\n        const seqBytes = i2Osp(k.seq, k.baseNonce.byteLength);\n        return xor(k.baseNonce, seqBytes).buffer;\n    }\n    incrementSeq(k) {\n        // if (this.seq >= (1 << (8 * this.baseNonce.byteLength)) - 1) {\n        if (k.seq > Number.MAX_SAFE_INTEGER) {\n            throw new MessageLimitReachedError(\"Message limit reached\");\n        }\n        k.seq += 1;\n        return;\n    }\n}\n","import { EMPTY, OpenError } from \"@hpke/common\";\nimport { EncryptionContextImpl } from \"./encryptionContext.js\";\nexport class RecipientContextImpl extends EncryptionContextImpl {\n    async open(data, aad = EMPTY.buffer) {\n        let pt;\n        try {\n            pt = await this._ctx.key.open(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new OpenError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return pt;\n    }\n}\n","import { EMPTY, SealError } from \"@hpke/common\";\nimport { EncryptionContextImpl } from \"./encryptionContext.js\";\nexport class SenderContextImpl extends EncryptionContextImpl {\n    constructor(api, kdf, params, enc) {\n        super(api, kdf, params);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n    }\n    async seal(data, aad = EMPTY.buffer) {\n        let ct;\n        try {\n            ct = await this._ctx.key.seal(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new SealError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return ct;\n    }\n}\n","import { AeadId, EMPTY, i2Osp, INFO_LENGTH_LIMIT, INPUT_LENGTH_LIMIT, InvalidParamError, MINIMUM_PSK_LENGTH, Mode, NativeAlgorithm, } from \"@hpke/common\";\nimport { RecipientExporterContextImpl, SenderExporterContextImpl, } from \"./exporterContext.js\";\nimport { RecipientContextImpl } from \"./recipientContext.js\";\nimport { SenderContextImpl } from \"./senderContext.js\";\n// b\"base_nonce\"\n// deno-fmt-ignore\nconst LABEL_BASE_NONCE = new Uint8Array([\n    98, 97, 115, 101, 95, 110, 111, 110, 99, 101,\n]);\n// b\"exp\"\nconst LABEL_EXP = new Uint8Array([101, 120, 112]);\n// b\"info_hash\"\n// deno-fmt-ignore\nconst LABEL_INFO_HASH = new Uint8Array([\n    105, 110, 102, 111, 95, 104, 97, 115, 104,\n]);\n// b\"key\"\nconst LABEL_KEY = new Uint8Array([107, 101, 121]);\n// b\"psk_id_hash\"\n// deno-fmt-ignore\nconst LABEL_PSK_ID_HASH = new Uint8Array([\n    112, 115, 107, 95, 105, 100, 95, 104, 97, 115, 104,\n]);\n// b\"secret\"\nconst LABEL_SECRET = new Uint8Array([115, 101, 99, 114, 101, 116]);\n// b\"HPKE\"\n// deno-fmt-ignore\nconst SUITE_ID_HEADER_HPKE = new Uint8Array([\n    72, 80, 75, 69, 0, 0, 0, 0, 0, 0,\n]);\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This is the super class of {@link CipherSuite} and the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuite | @hpke/core#CipherSuite} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n *   - DHKEM(X25519, HKDF-SHA256)\n *   - DHKEM(X448, HKDF-SHA512)\n *   - ChaCha20Poly1305\n *\n * In addtion, the HKDF functions contained in this class can only derive\n * keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *   - {@link createSenderContext}\n *   - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *   - {@link seal}\n *   - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * // Use an extension module.\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class CipherSuiteNative extends NativeAlgorithm {\n    /**\n     * @param params A set of parameters for building a cipher suite.\n     *\n     * If the error occurred, throws {@link InvalidParamError}.\n     *\n     * @throws {@link InvalidParamError}\n     */\n    constructor(params) {\n        super();\n        Object.defineProperty(this, \"_kem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // KEM\n        if (typeof params.kem === \"number\") {\n            throw new InvalidParamError(\"KemId cannot be used\");\n        }\n        this._kem = params.kem;\n        // KDF\n        if (typeof params.kdf === \"number\") {\n            throw new InvalidParamError(\"KdfId cannot be used\");\n        }\n        this._kdf = params.kdf;\n        // AEAD\n        if (typeof params.aead === \"number\") {\n            throw new InvalidParamError(\"AeadId cannot be used\");\n        }\n        this._aead = params.aead;\n        this._suiteId = new Uint8Array(SUITE_ID_HEADER_HPKE);\n        this._suiteId.set(i2Osp(this._kem.id, 2), 4);\n        this._suiteId.set(i2Osp(this._kdf.id, 2), 6);\n        this._suiteId.set(i2Osp(this._aead.id, 2), 8);\n        this._kdf.init(this._suiteId);\n    }\n    /**\n     * Gets the KEM context of the ciphersuite.\n     */\n    get kem() {\n        return this._kem;\n    }\n    /**\n     * Gets the KDF context of the ciphersuite.\n     */\n    get kdf() {\n        return this._kdf;\n    }\n    /**\n     * Gets the AEAD context of the ciphersuite.\n     */\n    get aead() {\n        return this._aead;\n    }\n    /**\n     * Creates an encryption context for a sender.\n     *\n     * If the error occurred, throws {@link DecapError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the sender encryption context.\n     * @returns A sender encryption context.\n     * @throws {@link EncapError}, {@link ValidationError}\n     */\n    async createSenderContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const dh = await this._kem.encap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderKey !== undefined ? Mode.AuthPsk : Mode.Psk;\n        }\n        else {\n            mode = params.senderKey !== undefined ? Mode.Auth : Mode.Base;\n        }\n        return await this._keyScheduleS(mode, dh.sharedSecret, dh.enc, params);\n    }\n    /**\n     * Creates an encryption context for a recipient.\n     *\n     * If the error occurred, throws {@link DecapError}\n     * | {@link DeserializeError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the recipient encryption context.\n     * @returns A recipient encryption context.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link ValidationError}\n     */\n    async createRecipientContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const sharedSecret = await this._kem.decap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderPublicKey !== undefined ? Mode.AuthPsk : Mode.Psk;\n        }\n        else {\n            mode = params.senderPublicKey !== undefined ? Mode.Auth : Mode.Base;\n        }\n        return await this._keyScheduleR(mode, sharedSecret, params);\n    }\n    /**\n     * Encrypts a message to a recipient.\n     *\n     * If the error occurred, throws `EncapError` | `MessageLimitReachedError` | `SealError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a sender encryption context.\n     * @param pt A plain text as bytes to be encrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A cipher text and an encapsulated key as bytes.\n     * @throws {@link EncapError}, {@link MessageLimitReachedError}, {@link SealError}, {@link ValidationError}\n     */\n    async seal(params, pt, aad = EMPTY.buffer) {\n        const ctx = await this.createSenderContext(params);\n        return {\n            ct: await ctx.seal(pt, aad),\n            enc: ctx.enc,\n        };\n    }\n    /**\n     * Decrypts a message from a sender.\n     *\n     * If the error occurred, throws `DecapError` | `DeserializeError` | `OpenError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a recipient encryption context.\n     * @param ct An encrypted text as bytes to be decrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A decrypted plain text as bytes.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link OpenError}, {@link ValidationError}\n     */\n    async open(params, ct, aad = EMPTY.buffer) {\n        const ctx = await this.createRecipientContext(params);\n        return await ctx.open(ct, aad);\n    }\n    // private verifyPskInputs(mode: Mode, params: KeyScheduleParams) {\n    //   const gotPsk = (params.psk !== undefined);\n    //   const gotPskId = (params.psk !== undefined && params.psk.id.byteLength > 0);\n    //   if (gotPsk !== gotPskId) {\n    //     throw new Error('Inconsistent PSK inputs');\n    //   }\n    //   if (gotPsk && (mode === Mode.Base || mode === Mode.Auth)) {\n    //     throw new Error('PSK input provided when not needed');\n    //   }\n    //   if (!gotPsk && (mode === Mode.Psk || mode === Mode.AuthPsk)) {\n    //     throw new Error('Missing required PSK input');\n    //   }\n    //   return;\n    // }\n    async _keySchedule(mode, sharedSecret, params) {\n        // Currently, there is no point in executing this function\n        // because this hpke library does not allow users to explicitly specify the mode.\n        //\n        // this.verifyPskInputs(mode, params);\n        const pskId = params.psk === undefined\n            ? EMPTY\n            : new Uint8Array(params.psk.id);\n        const pskIdHash = await this._kdf.labeledExtract(EMPTY.buffer, LABEL_PSK_ID_HASH, pskId);\n        const info = params.info === undefined\n            ? EMPTY\n            : new Uint8Array(params.info);\n        const infoHash = await this._kdf.labeledExtract(EMPTY.buffer, LABEL_INFO_HASH, info);\n        const keyScheduleContext = new Uint8Array(1 + pskIdHash.byteLength + infoHash.byteLength);\n        keyScheduleContext.set(new Uint8Array([mode]), 0);\n        keyScheduleContext.set(new Uint8Array(pskIdHash), 1);\n        keyScheduleContext.set(new Uint8Array(infoHash), 1 + pskIdHash.byteLength);\n        const psk = params.psk === undefined\n            ? EMPTY\n            : new Uint8Array(params.psk.key);\n        const ikm = this._kdf.buildLabeledIkm(LABEL_SECRET, psk)\n            .buffer;\n        const exporterSecretInfo = this._kdf.buildLabeledInfo(LABEL_EXP, keyScheduleContext, this._kdf.hashSize).buffer;\n        const exporterSecret = await this._kdf.extractAndExpand(sharedSecret, ikm, exporterSecretInfo, this._kdf.hashSize);\n        if (this._aead.id === AeadId.ExportOnly) {\n            return { aead: this._aead, exporterSecret: exporterSecret };\n        }\n        const keyInfo = this._kdf.buildLabeledInfo(LABEL_KEY, keyScheduleContext, this._aead.keySize).buffer;\n        const key = await this._kdf.extractAndExpand(sharedSecret, ikm, keyInfo, this._aead.keySize);\n        const baseNonceInfo = this._kdf.buildLabeledInfo(LABEL_BASE_NONCE, keyScheduleContext, this._aead.nonceSize).buffer;\n        const baseNonce = await this._kdf.extractAndExpand(sharedSecret, ikm, baseNonceInfo, this._aead.nonceSize);\n        return {\n            aead: this._aead,\n            exporterSecret: exporterSecret,\n            key: key,\n            baseNonce: new Uint8Array(baseNonce),\n            seq: 0,\n        };\n    }\n    async _keyScheduleS(mode, sharedSecret, enc, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new SenderExporterContextImpl(this._api, this._kdf, res.exporterSecret, enc);\n        }\n        return new SenderContextImpl(this._api, this._kdf, res, enc);\n    }\n    async _keyScheduleR(mode, sharedSecret, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new RecipientExporterContextImpl(this._api, this._kdf, res.exporterSecret);\n        }\n        return new RecipientContextImpl(this._api, this._kdf, res);\n    }\n    _validateInputLength(params) {\n        if (params.info !== undefined &&\n            params.info.byteLength > INFO_LENGTH_LIMIT) {\n            throw new InvalidParamError(\"Too long info\");\n        }\n        if (params.psk !== undefined) {\n            if (params.psk.key.byteLength < MINIMUM_PSK_LENGTH) {\n                throw new InvalidParamError(`PSK must have at least ${MINIMUM_PSK_LENGTH} bytes`);\n            }\n            if (params.psk.key.byteLength > INPUT_LENGTH_LIMIT) {\n                throw new InvalidParamError(\"Too long psk.key\");\n            }\n            if (params.psk.id.byteLength > INPUT_LENGTH_LIMIT) {\n                throw new InvalidParamError(\"Too long psk.id\");\n            }\n        }\n        return;\n    }\n}\n","import { Dhkem, Ec, HkdfSha256Native, HkdfSha384Native, HkdfSha512Native, KemId, } from \"@hpke/common\";\nexport class DhkemP256HkdfSha256Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha256Native();\n        const prim = new Ec(KemId.DhkemP256HkdfSha256, kdf);\n        super(KemId.DhkemP256HkdfSha256, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP256HkdfSha256\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n    }\n}\nexport class DhkemP384HkdfSha384Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha384Native();\n        const prim = new Ec(KemId.DhkemP384HkdfSha384, kdf);\n        super(KemId.DhkemP384HkdfSha384, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP384HkdfSha384\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n    }\n}\nexport class DhkemP521HkdfSha512Native extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha512Native();\n        const prim = new Ec(KemId.DhkemP521HkdfSha512, kdf);\n        super(KemId.DhkemP521HkdfSha512, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemP521HkdfSha512\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n    }\n}\n","import { HkdfSha256Native, HkdfSha384Native, HkdfSha512Native, } from \"@hpke/common\";\nimport { CipherSuiteNative } from \"./cipherSuiteNative.js\";\nimport { DhkemP256HkdfSha256Native, DhkemP384HkdfSha384Native, DhkemP521HkdfSha512Native, } from \"./kems/dhkemNative.js\";\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This class is the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteNative | @hpke/core#CipherSuiteNative} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n * - `DHKEM(X25519, HKDF-SHA256)`\n * - `DHKEM(X448, HKDF-SHA512)`\n * - `ChaCha20Poly1305`\n *\n * In addtion, the HKDF functions contained in this `CipherSuiteNative`\n * class can only derive keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *     - {@link createSenderContext}\n *     - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *     - {@link seal}\n *     - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class CipherSuite extends CipherSuiteNative {\n}\n/**\n * The DHKEM(P-256, HKDF-SHA256) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP256HkdfSha256`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class DhkemP256HkdfSha256 extends DhkemP256HkdfSha256Native {\n}\n/**\n * The DHKEM(P-384, HKDF-SHA384) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP384HkdfSha384`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class DhkemP384HkdfSha384 extends DhkemP384HkdfSha384Native {\n}\n/**\n * The DHKEM(P-521, HKDF-SHA512) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP521HkdfSha512`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class DhkemP521HkdfSha512 extends DhkemP521HkdfSha512Native {\n}\n/**\n * The HKDF-SHA256 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha256`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class HkdfSha256 extends HkdfSha256Native {\n}\n/**\n * The HKDF-SHA384 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha384`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class HkdfSha384 extends HkdfSha384Native {\n}\n/**\n * The HKDF-SHA512 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha512`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class HkdfSha512 extends HkdfSha512Native {\n}\n","import { base64UrlToBytes, DeriveKeyPairError, DeserializeError, EMPTY, KEM_USAGES, LABEL_DKP_PRK, LABEL_SK, NativeAlgorithm, NotSupportedError, SerializeError, } from \"@hpke/common\";\nconst ALG_NAME = \"X25519\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X25519 = new Uint8Array([\n    0x30, 0x2e, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6e, 0x04, 0x22, 0x04, 0x20,\n]);\nexport class X25519 extends NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 32;\n        this._nSk = 32;\n        this._nDh = 32;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X25519;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, LABEL_SK, EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","import { Dhkem, HkdfSha256Native, KemId } from \"@hpke/common\";\nimport { X25519 } from \"./dhkemPrimitives/x25519.js\";\n/**\n * The DHKEM(X25519, HKDF-SHA256) for HPKE KEM implementing {@link KemInterface}.\n *\n * The instance of this class can be specified to the\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteParams | CipherSuiteParams} as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   HkdfSha256,\n *   DhkemX25519HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nexport class DhkemX25519HkdfSha256 extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha256Native();\n        super(KemId.DhkemX25519HkdfSha256, new X25519(kdf), kdf);\n        /** KemId.DhkemX25519HkdfSha256 (0x0020) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemX25519HkdfSha256\n        });\n        /** 32 */\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n    }\n}\n","import { base64UrlToBytes, DeriveKeyPairError, DeserializeError, EMPTY, KEM_USAGES, LABEL_DKP_PRK, LABEL_SK, NativeAlgorithm, NotSupportedError, SerializeError, } from \"@hpke/common\";\nconst ALG_NAME = \"X448\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X448 = new Uint8Array([\n    0x30, 0x46, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6f, 0x04, 0x3a, 0x04, 0x38,\n]);\nexport class X448 extends NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 56;\n        this._nSk = 56;\n        this._nDh = 56;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X448;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return base64UrlToBytes(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, KEM_USAGES);\n        }\n        catch (e) {\n            throw new NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(EMPTY.buffer, LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, LABEL_SK, EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, KEM_USAGES);\n    }\n}\n","import { Dhkem, HkdfSha512Native, KemId } from \"@hpke/common\";\nimport { X448 } from \"./dhkemPrimitives/x448.js\";\n/**\n * The DHKEM(X448, HKDF-SHA512) for HPKE KEM implementing {@link KemInterface}.\n *\n * The instance of this class can be specified to the\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteParams | CipherSuiteParams} as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   HkdfSha512,\n *   DhkemX448HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX448HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nexport class DhkemX448HkdfSha512 extends Dhkem {\n    constructor() {\n        const kdf = new HkdfSha512Native();\n        super(KemId.DhkemX448HkdfSha512, new X448(kdf), kdf);\n        /** KemId.DhkemX448HkdfSha512 (0x0021) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: KemId.DhkemX448HkdfSha512\n        });\n        /** 64 */\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        /** 56 */\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n        /** 56 */\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n        /** 56 */\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Find code of next character\n      var charCode = source.charCodeAt(psz)\n            // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n            // Decode character\n      var carry = BASE_MAP[charCode]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n * @deprecated\n */\nimport { SHA384 as SHA384n, sha384 as sha384n, sha512_224 as sha512_224n, SHA512_224 as SHA512_224n, sha512_256 as sha512_256n, SHA512_256 as SHA512_256n, SHA512 as SHA512n, sha512 as sha512n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512 = SHA512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512 = sha512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA384 = SHA384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha384 = sha384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_224 = SHA512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_224 = sha512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_256 = SHA512_256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_256 = sha512_256n;\n//# sourceMappingURL=sha512.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, isBytes as isBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, bytesToUtf8, concatBytes, hexToBytes, isBytes, randomBytes, utf8ToBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// tmp name until v2\nexport function _abool2(value, title = '') {\n    if (typeof value !== 'boolean') {\n        const prefix = title && `\"${title}\"`;\n        throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n    }\n    return value;\n}\n// tmp name until v2\n/** Asserts something is Uint8Array. */\nexport function _abytes2(value, length, title = '') {\n    const bytes = isBytes_(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : '';\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n    }\n    return value;\n}\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes_(bytes);\n    return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'secret key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes_(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes_(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as utf8ToBytes for ASCII or throws.\n */\nexport function asciiToBytes(ascii) {\n    return Uint8Array.from(ascii, (c, i) => {\n        const charCode = c.charCodeAt(0);\n        if (c.length !== 1 || charCode > 127) {\n            throw new Error(`string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`);\n        }\n        return charCode;\n    });\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const u8of = (byte) => Uint8Array.of(byte); // another shortcut\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n(0)) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes_(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\nexport function isHash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(object, fields, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n    Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, anumber, bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, } from \"../utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _7n = /* @__PURE__ */ BigInt(7);\n// prettier-ignore\nconst _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction assertIsSquare(Fp, root, n) {\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    assertIsSquare(Fp, root, n);\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    assertIsSquare(Fp, root, n);\n    return root;\n}\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P) {\n    const Fp_ = Field(P);\n    const tn = tonelliShanks(P);\n    const c1 = tn(Fp_, Fp_.neg(Fp_.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    const c2 = tn(Fp_, c1); //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    const c3 = tn(Fp_, Fp_.neg(c1)); //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    const c4 = (P + _7n) / _16n; //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    return (Fp, n) => {\n        let tv1 = Fp.pow(n, c4); //  1. tv1 = x^c4\n        let tv2 = Fp.mul(tv1, c1); //  2. tv2 = c1 * tv1\n        const tv3 = Fp.mul(tv1, c2); //  3. tv3 = c2 * tv1\n        const tv4 = Fp.mul(tv1, c3); //  4. tv4 = c3 * tv1\n        const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n        const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n        tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n        const root = Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n        assertIsSquare(Fp, root, n);\n        return root;\n    };\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < _3n)\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n    if (P % _16n === _9n)\n        return sqrt9mod16(P);\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    _validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLenOrOpts, // TODO: use opts only in v2?\nisLE = false, opts = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength = undefined;\n    let _sqrt = undefined;\n    let modFromBytes = false;\n    let allowedLengths = undefined;\n    if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n        if (opts.sqrt || isLE)\n            throw new Error('cannot specify opts in two arguments');\n        const _opts = bitLenOrOpts;\n        if (_opts.BITS)\n            _nbitLength = _opts.BITS;\n        if (_opts.sqrt)\n            _sqrt = _opts.sqrt;\n        if (typeof _opts.isLE === 'boolean')\n            isLE = _opts.isLE;\n        if (typeof _opts.modFromBytes === 'boolean')\n            modFromBytes = _opts.modFromBytes;\n        allowedLengths = _opts.allowedLengths;\n    }\n    else {\n        if (typeof bitLenOrOpts === 'number')\n            _nbitLength = bitLenOrOpts;\n        if (opts.sqrt)\n            _sqrt = opts.sqrt;\n    }\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        allowedLengths: allowedLengths,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        // is valid and invertible\n        isValidNot0: (num) => !f.is0(num) && f.isValid(num),\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: _sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes, skipValidation = true) => {\n            if (allowedLengths) {\n                if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n                    throw new Error('Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length);\n                }\n                const padded = new Uint8Array(BYTES);\n                // isLE add 0 to right, !isLE to the left.\n                padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n                bytes = padded;\n            }\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n            if (modFromBytes)\n                scalar = mod(scalar, ORDER);\n            if (!skipValidation)\n                if (!f.isValid(scalar))\n                    throw new Error('invalid field element: outside of range 0..ORDER');\n            // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n            // protocol may allow non-reduced scalar that reduced later or changed some other way.\n            return scalar;\n        },\n        // TODO: we don't need it here, move out to separate fn\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // We can't move this out because Fp6, Fp12 implement it\n        // and it's unclear what to return in there.\n        cmov: (a, b, c) => (c ? b : a),\n    });\n    return Object.freeze(f);\n}\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from \"../utils.js\";\nimport { Field, FpInvertBatch, nLength, validateField } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, points) {\n    const invertedZs = FpInvertBatch(c.Fp, points.map((p) => p.Z));\n    return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    // To disable precomputes:\n    // return 1;\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF {\n    // Parametrized with a given Point class (not individual point)\n    constructor(Point, bits) {\n        this.BASE = Point.BASE;\n        this.ZERO = Point.ZERO;\n        this.Fn = Point.Fn;\n        this.bits = bits;\n    }\n    // non-const time multiplication ladder\n    _unsafeLadder(elm, n, p = this.ZERO) {\n        let d = elm;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param point Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(point, W) {\n        const { windows, windowSize } = calcWOpts(W, this.bits);\n        const points = [];\n        let p = point;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            // i=1, bc we skip 0\n            for (let i = 1; i < windowSize; i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * More compact implementation:\n     * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W, precomputes, n) {\n        // Scalar should be smaller than field order\n        if (!this.Fn.isValid(n))\n            throw new Error('invalid scalar');\n        // Accumulators\n        let p = this.ZERO;\n        let f = this.BASE;\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n            const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // bits are 0: add garbage to fake point\n                // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                f = f.add(negateCt(isNegF, precomputes[offsetF]));\n            }\n            else {\n                // bits are 1: add to result point\n                p = p.add(negateCt(isNeg, precomputes[offset]));\n            }\n        }\n        assert0(n);\n        // Return both real and fake points: JIT won't eliminate f.\n        // At this point there is a way to F be infinity-point even if p is not,\n        // which makes it less const-time: around 1 bigint multiply.\n        return { p, f };\n    }\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W, precomputes, n, acc = this.ZERO) {\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            if (n === _0n)\n                break; // Early-exit, skip 0 value\n            const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // Window bits are 0: skip processing.\n                // Move to next window.\n                continue;\n            }\n            else {\n                const item = precomputes[offset];\n                acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n            }\n        }\n        assert0(n);\n        return acc;\n    }\n    getPrecomputes(W, point, transform) {\n        // Calculate precomputes on a first run, reuse them after\n        let comp = pointPrecomputes.get(point);\n        if (!comp) {\n            comp = this.precomputeWindow(point, W);\n            if (W !== 1) {\n                // Doing transform outside of if brings 15% perf hit\n                if (typeof transform === 'function')\n                    comp = transform(comp);\n                pointPrecomputes.set(point, comp);\n            }\n        }\n        return comp;\n    }\n    cached(point, scalar, transform) {\n        const W = getW(point);\n        return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n    }\n    unsafe(point, scalar, transform, prev) {\n        const W = getW(point);\n        if (W === 1)\n            return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n        return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n    }\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    createCache(P, W) {\n        validateW(W, this.bits);\n        pointWindowSizes.set(P, W);\n        pointPrecomputes.delete(P);\n    }\n    hasCache(elm) {\n        return getW(elm) !== 1;\n    }\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(Point, point, k1, k2) {\n    let acc = point;\n    let p1 = Point.ZERO;\n    let p2 = Point.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\n// TODO: remove\n/** @deprecated */\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nfunction createField(order, field, isLE) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order, { isLE });\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields(type, CURVE, curveOpts = {}, FpFnLE) {\n    if (FpFnLE === undefined)\n        FpFnLE = type === 'edwards';\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n    const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    CURVE = Object.freeze(Object.assign({}, CURVE));\n    return { CURVE, Fp, Fn };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bytesToHex, bytesToNumberLE, concatBytes, copyBytes, ensureBytes, isBytes, memoized, notImplemented, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field } from \"./modular.js\";\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\nfunction isEdValidXY(Fp, CURVE, x, y) {\n    const x2 = Fp.sqr(x);\n    const y2 = Fp.sqr(y);\n    const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n    const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n    return Fp.eql(left, right);\n}\nexport function edwards(params, extraOpts = {}) {\n    const validated = _createCurveFields('edwards', params, extraOpts, extraOpts.FpFnLE);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor } = CURVE;\n    _validateObject(extraOpts, {}, { uvRatio: 'function' });\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n    const modP = (n) => Fp.create(n); // Function overrides\n    // sqrt(u/v)\n    const uvRatio = extraOpts.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    // Validate whether the passed curve params are valid.\n    // equation ax² + y² = 1 + dx²y² should work for generator point.\n    if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    /**\n     * Asserts coordinate is valid: 0 <= n < MASK.\n     * Coordinates >= Fp.ORDER are allowed for zip215.\n     */\n    function acoord(title, n, banZero = false) {\n        const min = banZero ? _1n : _0n;\n        aInRange('coordinate ' + title, n, min, MASK);\n        return n;\n    }\n    function aextpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(Z); // 8 was chosen arbitrarily\n        const x = modP(X * iz);\n        const y = modP(Y * iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { X, Y, Z, T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (X, Y, Z, T) ∋ (x=X/Z, y=Y/Z, T=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(X, Y, Z, T) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y);\n            this.Z = acoord('z', Z, true);\n            this.T = acoord('t', T);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            acoord('x', x);\n            acoord('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        // Uses algo from RFC8032 5.1.3.\n        static fromBytes(bytes, zip215 = false) {\n            const len = Fp.BYTES;\n            const { a, d } = CURVE;\n            bytes = copyBytes(abytes(bytes, len, 'point'));\n            abool(zip215, 'zip215');\n            const normed = copyBytes(bytes); // copy again, we'll manipulate it\n            const lastByte = bytes[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            aInRange('point.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('bad point: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('bad point: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromHex(bytes, zip215 = false) {\n            return Point.fromBytes(ensureBytes('point', bytes), zip215);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_2n); // random number\n            return this;\n        }\n        // Useful in fromAffine() - not for fromBytes(), which always created valid points.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            aextpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.X), this.Y, this.Z, modP(-this.T));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            aextpoint(other);\n            const { a, d } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1, T: T1 } = this;\n            const { X: X2, Y: Y2, Z: Z2, T: T2 } = other;\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            // 1 <= scalar < L\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: expected 1 <= sc < curve.n');\n            const { p, f } = wnaf.cached(this, scalar, (p) => normalizeZ(Point, p));\n            return normalizeZ(Point, [p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            // 0 <= scalar < L\n            if (!Fn.isValid(scalar))\n                throw new Error('invalid scalar: expected 0 <= sc < curve.n');\n            if (scalar === _0n)\n                return Point.ZERO;\n            if (this.is0() || scalar === _1n)\n                return this;\n            return wnaf.unsafe(this, scalar, (p) => normalizeZ(Point, p), acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafe(this, CURVE.n).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        clearCofactor() {\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes() {\n            const { x, y } = this.toAffine();\n            // Fp.toBytes() allows non-canonical encoding of y (>= p).\n            const bytes = Fp.toBytes(y);\n            // Each y has 2 valid points: (x, y), (x,-y).\n            // When compressing, it's enough to store y and use the last byte to encode sign of x\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0;\n            return bytes;\n        }\n        toHex() {\n            return bytesToHex(this.toBytes());\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get ex() {\n            return this.X;\n        }\n        get ey() {\n            return this.Y;\n        }\n        get ez() {\n            return this.Z;\n        }\n        get et() {\n            return this.T;\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        toRawBytes() {\n            return this.toBytes();\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    // zero / infinity / identity point\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const wnaf = new wNAF(Point, Fn.BITS);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n/**\n * Base class for prime-order points like Ristretto255 and Decaf448.\n * These points eliminate cofactor issues by representing equivalence classes\n * of Edwards curve points.\n */\nexport class PrimeEdwardsPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    // Static methods that must be implemented by subclasses\n    static fromBytes(_bytes) {\n        notImplemented();\n    }\n    static fromHex(_hex) {\n        notImplemented();\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    // Common implementations\n    clearCofactor() {\n        // no-op for prime-order groups\n        return this;\n    }\n    assertValidity() {\n        this.ep.assertValidity();\n    }\n    toAffine(invertedZ) {\n        return this.ep.toAffine(invertedZ);\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    isTorsionFree() {\n        return true;\n    }\n    isSmallOrder() {\n        return false;\n    }\n    add(other) {\n        this.assertSame(other);\n        return this.init(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        this.assertSame(other);\n        return this.init(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return this.init(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return this.init(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return this.init(this.ep.double());\n    }\n    negate() {\n        return this.init(this.ep.negate());\n    }\n    precompute(windowSize, isLazy) {\n        return this.init(this.ep.precompute(windowSize, isLazy));\n    }\n    /** @deprecated use `toBytes` */\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point, cHash, eddsaOpts = {}) {\n    if (typeof cHash !== 'function')\n        throw new Error('\"hash\" function param is required');\n    _validateObject(eddsaOpts, {}, {\n        adjustScalarBytes: 'function',\n        randomBytes: 'function',\n        domain: 'function',\n        prehash: 'function',\n        mapToCurve: 'function',\n    });\n    const { prehash } = eddsaOpts;\n    const { BASE, Fp, Fn } = Point;\n    const randomBytes = eddsaOpts.randomBytes || randomBytesWeb;\n    const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes) => bytes);\n    const domain = eddsaOpts.domain ||\n        ((data, ctx, phflag) => {\n            abool(phflag, 'phflag');\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return Fn.create(bytesToNumberLE(hash)); // Not Fn.fromBytes: it has length limit\n    }\n    // Get the hashed private scalar per RFC8032 5.1.5\n    function getPrivateScalar(key) {\n        const len = lengths.secretKey;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        return { head, prefix, scalar };\n    }\n    /** Convenience method that creates public key from scalar. RFC8032 5.1.5 */\n    function getExtendedPublicKey(secretKey) {\n        const { head, prefix, scalar } = getPrivateScalar(secretKey);\n        const point = BASE.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toBytes();\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    /** Calculates EdDSA pub key. RFC8032 5.1.5. */\n    function getPublicKey(secretKey) {\n        return getExtendedPublicKey(secretKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = Uint8Array.of(), ...msgs) {\n        const msg = concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, secretKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(secretKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = BASE.multiply(r).toBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = Fn.create(r + k * scalar); // S = (r + k * s) mod L\n        if (!Fn.isValid(s))\n            throw new Error('sign failed: invalid s'); // 0 <= s < L\n        const rs = concatBytes(R, Fn.toBytes(s));\n        return abytes(rs, lengths.signature, 'result');\n    }\n    // verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\n    const verifyOpts = { zip215: true };\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = lengths.signature;\n        sig = ensureBytes('signature', sig, len);\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, lengths.publicKey);\n        if (zip215 !== undefined)\n            abool(zip215, 'zip215');\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const mid = len / 2;\n        const r = sig.subarray(0, mid);\n        const s = bytesToNumberLE(sig.subarray(mid, len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromBytes(publicKey, zip215);\n            R = Point.fromBytes(r, zip215);\n            SB = BASE.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false; // zip215 allows public keys of small order\n        const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().is0();\n    }\n    const _size = Fp.BYTES; // 32 for ed25519, 57 for ed448\n    const lengths = {\n        secretKey: _size,\n        publicKey: _size,\n        signature: 2 * _size,\n        seed: _size,\n    };\n    function randomSecretKey(seed = randomBytes(lengths.seed)) {\n        return abytes(seed, lengths.seed, 'seed');\n    }\n    function keygen(seed) {\n        const secretKey = utils.randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    function isValidSecretKey(key) {\n        return isBytes(key) && key.length === Fn.BYTES;\n    }\n    function isValidPublicKey(key, zip215) {\n        try {\n            return !!Point.fromBytes(key, zip215);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    const utils = {\n        getExtendedPublicKey,\n        randomSecretKey,\n        isValidSecretKey,\n        isValidPublicKey,\n        /**\n         * Converts ed public key to x public key. Uses formula:\n         * - ed25519:\n         *   - `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n         *   - `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n         * - ed448:\n         *   - `(u, v) = ((y-1)/(y+1), sqrt(156324)*u/x)`\n         *   - `(x, y) = (sqrt(156324)*u/v, (1+u)/(1-u))`\n         */\n        toMontgomery(publicKey) {\n            const { y } = Point.fromBytes(publicKey);\n            const size = lengths.publicKey;\n            const is25519 = size === 32;\n            if (!is25519 && size !== 57)\n                throw new Error('only defined for 25519 and 448');\n            const u = is25519 ? Fp.div(_1n + y, _1n - y) : Fp.div(y - _1n, y + _1n);\n            return Fp.toBytes(u);\n        },\n        toMontgomerySecret(secretKey) {\n            const size = lengths.secretKey;\n            abytes(secretKey, size);\n            const hashed = cHash(secretKey.subarray(0, size));\n            return adjustScalarBytes(hashed).subarray(0, size);\n        },\n        /** @deprecated */\n        randomPrivateKey: randomSecretKey,\n        /** @deprecated */\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        sign,\n        verify,\n        utils,\n        Point,\n        lengths,\n    });\n}\nfunction _eddsa_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        d: c.d,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength, true);\n    const curveOpts = { Fp, Fn, uvRatio: c.uvRatio };\n    const eddsaOpts = {\n        randomBytes: c.randomBytes,\n        adjustScalarBytes: c.adjustScalarBytes,\n        domain: c.domain,\n        prehash: c.prehash,\n        mapToCurve: c.mapToCurve,\n    };\n    return { CURVE, curveOpts, hash: c.hash, eddsaOpts };\n}\nfunction _eddsa_new_output_to_legacy(c, eddsa) {\n    const Point = eddsa.Point;\n    const legacy = Object.assign({}, eddsa, {\n        ExtendedPoint: Point,\n        CURVE: c,\n        nBitLength: Point.Fn.BITS,\n        nByteLength: Point.Fn.BYTES,\n    });\n    return legacy;\n}\n// TODO: remove. Use eddsa\nexport function twistedEdwards(c) {\n    const { CURVE, curveOpts, hash, eddsaOpts } = _eddsa_legacy_opts_to_new(c);\n    const Point = edwards(CURVE, curveOpts);\n    const EDDSA = eddsa(Point, hash, eddsaOpts);\n    return _eddsa_new_output_to_legacy(c, EDDSA);\n}\n//# sourceMappingURL=edwards.js.map","import { _validateObject, abytes, bytesToNumberBE, concatBytes, isBytes, isHash, utf8ToBytes, } from \"../utils.js\";\nimport { FpInvertBatch, mod } from \"./modular.js\";\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    anum(value);\n    anum(length);\n    if (value < 0 || value >= 1 << (8 * length))\n        throw new Error('invalid I2OSP input: ' + value);\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\nfunction normDST(DST) {\n    if (!isBytes(DST) && typeof DST !== 'string')\n        throw new Error('DST must be Uint8Array or string');\n    return typeof DST === 'string' ? utf8ToBytes(DST) : DST;\n}\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (lenInBytes > 65535 || ell > 255)\n        throw new Error('expand_message_xmd: invalid lenInBytes');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    _validateObject(options, {\n        p: 'bigint',\n        m: 'number',\n        k: 'number',\n        hash: 'function',\n    });\n    const { p, k, m, hash, expand, DST } = options;\n    if (!isHash(options.hash))\n        throw new Error('expected valid hash');\n    abytes(msg);\n    anum(count);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const coeff = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xn, xd, yn, yd] = coeff.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        // 6.6.3\n        // Exceptional cases of iso_map are inputs that cause the denominator of\n        // either rational function to evaluate to zero; such cases MUST return\n        // the identity point on E.\n        const [xd_inv, yd_inv] = FpInvertBatch(field, [xd, yd], true);\n        x = field.mul(xn, xd_inv); // xNum / xDen\n        y = field.mul(y, field.mul(yn, yd_inv)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport const _DST_scalar = utf8ToBytes('HashToScalar-');\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. See {@link H2CHasher}. */\nexport function createHasher(Point, mapToCurve, defaults) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    function map(num) {\n        return Point.fromAffine(mapToCurve(num));\n    }\n    function clear(initial) {\n        const P = initial.clearCofactor();\n        if (P.equals(Point.ZERO))\n            return Point.ZERO; // zero will throw in assert\n        P.assertValidity();\n        return P;\n    }\n    return {\n        defaults,\n        hashToCurve(msg, options) {\n            const opts = Object.assign({}, defaults, options);\n            const u = hash_to_field(msg, 2, opts);\n            const u0 = map(u[0]);\n            const u1 = map(u[1]);\n            return clear(u0.add(u1));\n        },\n        encodeToCurve(msg, options) {\n            const optsDst = defaults.encodeDST ? { DST: defaults.encodeDST } : {};\n            const opts = Object.assign({}, defaults, optsDst, options);\n            const u = hash_to_field(msg, 1, opts);\n            const u0 = map(u[0]);\n            return clear(u0);\n        },\n        /** See {@link H2CHasher} */\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error('expected array of bigints');\n            return clear(map(scalars));\n        },\n        // hash_to_scalar can produce 0: https://www.rfc-editor.org/errata/eid8393\n        // RFC 9380, draft-irtf-cfrg-bbs-signatures-08\n        hashToScalar(msg, options) {\n            // @ts-ignore\n            const N = Point.Fn.ORDER;\n            const opts = Object.assign({}, defaults, { p: N, m: 1, DST: _DST_scalar }, options);\n            return hash_to_field(msg, 1, opts)[0][0];\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, utf8ToBytes } from '@noble/hashes/utils.js';\nimport { pippenger } from \"./abstract/curve.js\";\nimport { PrimeEdwardsPoint, twistedEdwards, } from \"./abstract/edwards.js\";\nimport { _DST_scalar, createHasher, expand_message_xmd, } from \"./abstract/hash-to-curve.js\";\nimport { Field, FpInvertBatch, FpSqrtEven, isNegativeLE, mod, pow2, } from \"./abstract/modular.js\";\nimport { montgomery } from \"./abstract/montgomery.js\";\nimport { bytesToNumberLE, ensureBytes, equalBytes } from \"./utils.js\";\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n// P = 2n**255n-19n\nconst ed25519_CURVE_p = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed');\n// N = 2n**252n + 27742317777372353535851937790883648493n\n// a = Fp.create(BigInt(-1))\n// d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\nconst ed25519_CURVE = /* @__PURE__ */ (() => ({\n    p: ed25519_CURVE_p,\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n}))();\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ed25519_CURVE_p;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ed25519_CURVE_p;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nconst Fp = /* @__PURE__ */ (() => Field(ed25519_CURVE.p, { isLE: true }))();\nconst Fn = /* @__PURE__ */ (() => Field(ed25519_CURVE.n, { isLE: true }))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    ...ed25519_CURVE,\n    Fp,\n    hash: sha512,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const { secretKey, publicKey } = ed25519.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\n/** Context of ed25519. Uses context for domain separation. */\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\n/** Prehashed version of ed25519. Accepts already-hashed messages in sign() and verify(). */\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomSecretKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => {\n    const P = Fp.ORDER;\n    return montgomery({\n        P,\n        type: 'x25519',\n        powPminus2: (x) => {\n            // x^(p-2) aka x^(2^255-21)\n            const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n            return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n        },\n        adjustScalarBytes,\n    });\n})();\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n    return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\n/** Hashing to ed25519 points / field. RFC 9380 methods. */\nexport const ed25519_hasher = /* @__PURE__ */ (() => createHasher(ed25519.Point, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: ed25519_CURVE_p,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.Point.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = (n) => Fp.create(n);\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\nfunction ristretto255_map(bytes) {\n    abytes(bytes, 64);\n    const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new _RistrettoPoint(R1.add(R2));\n}\n/**\n * Wrapper over Edwards Point for ristretto255.\n *\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass _RistrettoPoint extends PrimeEdwardsPoint {\n    constructor(ep) {\n        super(ep);\n    }\n    static fromAffine(ap) {\n        return new _RistrettoPoint(ed25519.Point.fromAffine(ap));\n    }\n    assertSame(other) {\n        if (!(other instanceof _RistrettoPoint))\n            throw new Error('RistrettoPoint expected');\n    }\n    init(ep) {\n        return new _RistrettoPoint(ep);\n    }\n    /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n    static hashToCurve(hex) {\n        return ristretto255_map(ensureBytes('ristrettoHash', hex, 64));\n    }\n    static fromBytes(bytes) {\n        abytes(bytes, 32);\n        const { a, d } = ed25519_CURVE;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const s = bytes255ToNumberLE(bytes);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(Fp.toBytes(s), bytes) || isNegativeLE(s, P))\n            throw new Error('invalid ristretto255 encoding 1');\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error('invalid ristretto255 encoding 2');\n        return new _RistrettoPoint(new ed25519.Point(x, y, _1n, t));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        return _RistrettoPoint.fromBytes(ensureBytes('ristrettoHex', hex, 32));\n    }\n    static msm(points, scalars) {\n        return pippenger(_RistrettoPoint, ed25519.Point.Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n        let { X, Y, Z, T } = this.ep;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n        const u2 = mod(X * Y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * T); // 6\n        let D; // 7\n        if (isNegativeLE(T * zInv, P)) {\n            let _x = mod(Y * SQRT_M1);\n            let _y = mod(X * SQRT_M1);\n            X = _x;\n            Y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(X * zInv, P))\n            Y = mod(-Y); // 9\n        let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return Fp.toBytes(s); // 11\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n        this.assertSame(other);\n        const { X: X1, Y: Y1 } = this.ep;\n        const { X: X2, Y: Y2 } = other.ep;\n        const mod = (n) => Fp.create(n);\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    is0() {\n        return this.equals(_RistrettoPoint.ZERO);\n    }\n}\n// Do NOT change syntax: the following gymnastics is done,\n// because typescript strips comments, which makes bundlers disable tree-shaking.\n// prettier-ignore\n_RistrettoPoint.BASE = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.BASE))();\n// prettier-ignore\n_RistrettoPoint.ZERO = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.ZERO))();\n// prettier-ignore\n_RistrettoPoint.Fp = \n/* @__PURE__ */ (() => Fp)();\n// prettier-ignore\n_RistrettoPoint.Fn = \n/* @__PURE__ */ (() => Fn)();\nexport const ristretto255 = { Point: _RistrettoPoint };\n/** Hashing to ristretto255 points / field. RFC 9380 methods. */\nexport const ristretto255_hasher = {\n    hashToCurve(msg, options) {\n        const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n        const xmd = expand_message_xmd(msg, DST, 64, sha512);\n        return ristretto255_map(xmd);\n    },\n    hashToScalar(msg, options = { DST: _DST_scalar }) {\n        const xmd = expand_message_xmd(msg, options.DST, 64, sha512);\n        return Fn.create(bytesToNumberLE(xmd));\n    },\n};\n// export const ristretto255_oprf: OPRF = createORPF({\n//   name: 'ristretto255-SHA512',\n//   Point: RistrettoPoint,\n//   hash: sha512,\n//   hashToGroup: ristretto255_hasher.hashToCurve,\n//   hashToScalar: ristretto255_hasher.hashToScalar,\n// });\n/**\n * Weird / bogus points, useful for debugging.\n * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n * ⟨T⟩ = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n */\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    return ed25519.utils.toMontgomery(ensureBytes('pub', edwardsPub));\n}\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport const edwardsToMontgomery = edwardsToMontgomeryPub;\n/** @deprecated use `ed25519.utils.toMontgomerySecret` */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    return ed25519.utils.toMontgomerySecret(ensureBytes('pub', edwardsPriv));\n}\n/** @deprecated use `ristretto255.Point` */\nexport const RistrettoPoint = _RistrettoPoint;\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => ed25519_hasher.hashToCurve)();\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => ed25519_hasher.encodeToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToRistretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hash_to_ristretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n//# sourceMappingURL=ed25519.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR = 10;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS = 2800011;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT = 5663019;\nvar SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT = 5663020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD = 8100003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED = 9900004;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS]: \"$putativeOffCurveAddress is not a base58-encoded off-curve address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED]: \"Invariant violation: This data publisher does not publish to the channel named `$channelName`. Supported channels include $supportedChannelNames.\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR]: \"$message\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN]: \"The notification name must end in 'Notifications' and the API must supply a subscription plan creator function for the notification '$notificationName'.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD]: \"Could not find an API plan for RPC method: `$method`\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `TransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-(2n ** 63n), (2n ** 63n) - 1]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT]: \"Transaction size $transactionSize exceeds limit of $transactionSizeLimit bytes\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT]: \"Transaction failed when it was simulated in order to estimate the compute unit consumption. The compute unit estimate provided is for a transaction that failed when simulated and may not be representative of the compute units this transaction would consume if successful. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? (\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `${context[variableName]}`\n        ) : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  /**\n   * Indicates the root cause of this {@link SolanaError}, if any.\n   *\n   * For example, a transaction error might have an instruction error as its root cause. In this\n   * case, you will be able to access the instruction error on the transaction error as `cause`.\n   */\n  cause = this.cause;\n  /**\n   * Contains context that can assist in understanding or recovering from a {@link SolanaError}.\n   */\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  const numberIndex = Number(index);\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index: numberIndex,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: Number(rpcErrorContext),\n            index: numberIndex\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index: numberIndex\n          };\n        }\n        return { index: numberIndex };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: Number(rpcErrorContext)\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: Number(rpcErrorContext.account_index)\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError(putativeErrorResponse) {\n  let out;\n  if (isRpcErrorResponse(putativeErrorResponse)) {\n    const { code: rawCode, data, message } = putativeErrorResponse;\n    const code = Number(rawCode);\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n      const { err, ...preflightErrorContext } = data;\n      const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n      out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n        ...preflightErrorContext,\n        ...causeObject\n      });\n    } else {\n      let errorContext;\n      switch (code) {\n        case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n        case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n        case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n        case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n        case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n          errorContext = { __serverMessage: message };\n          break;\n        default:\n          if (typeof data === \"object\" && !Array.isArray(data)) {\n            errorContext = data;\n          }\n      }\n      out = new SolanaError(code, errorContext);\n    }\n  } else {\n    const message = typeof putativeErrorResponse === \"object\" && putativeErrorResponse !== null && \"message\" in putativeErrorResponse && typeof putativeErrorResponse.message === \"string\" ? putativeErrorResponse.message : \"Malformed JSON-RPC error with no message attribute\";\n    out = new SolanaError(SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, { error: putativeErrorResponse, message });\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\nfunction isRpcErrorResponse(value) {\n  return typeof value === \"object\" && value !== null && \"code\" in value && \"message\" in value && (typeof value.code === \"number\" || typeof value.code === \"bigint\") && typeof value.message === \"string\";\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL } from '@solana/errors';\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexport { addCodecSentinel, addCodecSizePrefix, addDecoderSentinel, addDecoderSizePrefix, addEncoderSentinel, addEncoderSizePrefix, assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, containsBytes, createCodec, createDecoder, createEncoder, fixBytes, fixCodecSize, fixDecoderSize, fixEncoderSize, getEncodedSize, isFixedSize, isVariableSize, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder, transformCodec, transformDecoder, transformEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createDecoder, createEncoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n    return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch, mask };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema. Masking applies recursively to\n     * props of `object` structs only.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `coerce` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful. Also, `mask` will turn on\n     * masking of the unknown `object` props recursively if passed.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value, ctx) {\n            if (!isNonArrayObject(value)) {\n                return value;\n            }\n            const coerced = { ...value };\n            // The `object` struct has special behaviour enabled by the mask flag.\n            // When masking, properties that are not in the schema are deleted from\n            // the coerced object instead of eventually failing validaiton.\n            if (ctx.mask && schema) {\n                for (const key in coerced) {\n                    if (schema[key] === undefined) {\n                        delete coerced[key];\n                    }\n                }\n            }\n            return coerced;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value, ctx) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, {\n                    coerce: true,\n                    mask: ctx.mask,\n                });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","import { Buffer } from 'buffer';\nimport { EventEmitter } from 'eventemitter3';\n\n// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\nvar WebSocketBrowserImpl = class extends EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n  * @constructor\n  * @param {String} address - url to a websocket server\n  * @param {(Object)} options - websocket options\n  * @param {(String|Array)} protocols - a list of protocols\n  * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n  */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n    this.socket.onerror = (error) => this.emit(\"error\", error);\n    this.socket.onclose = (event) => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n  * Sends data through a websocket connection\n  * @method\n  * @param {(String|Object)} data - data to be sent via websocket\n  * @param {Object} optionsOrCallback - ws options\n  * @param {Function} callback - a callback called once the data is sent\n  * @return {Undefined}\n  */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n  * Closes an underlying socket\n  * @method\n  * @param {Number} code - status code explaining why the connection is being closed\n  * @param {String} reason - a description why the connection is closing\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n};\nfunction WebSocket(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\n\n// src/lib/utils.ts\nvar DefaultDataPack = class {\n  encode(value) {\n    return JSON.stringify(value);\n  }\n  decode(value) {\n    return JSON.parse(value);\n  }\n};\n\n// src/lib/client.ts\nvar CommonClient = class extends EventEmitter {\n  address;\n  rpc_id;\n  queue;\n  options;\n  autoconnect;\n  ready;\n  reconnect;\n  reconnect_timer_id;\n  reconnect_interval;\n  max_reconnects;\n  rest_options;\n  current_reconnects;\n  generate_request_id;\n  socket;\n  webSocketFactory;\n  dataPack;\n  /**\n  * Instantiate a Client class.\n  * @constructor\n  * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n  * @param {String} address - url to a websocket server\n  * @param {Object} options - ws options object with reconnect parameters\n  * @param {Function} generate_request_id - custom generation request Id\n  * @param {DataPack} dataPack - data pack contains encoder and decoder\n  * @return {CommonClient}\n  */\n  constructor(webSocketFactory, address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5,\n    ...rest_options\n  } = {}, generate_request_id, dataPack) {\n    super();\n    this.webSocketFactory = webSocketFactory;\n    this.queue = {};\n    this.rpc_id = 0;\n    this.address = address;\n    this.autoconnect = autoconnect;\n    this.ready = false;\n    this.reconnect = reconnect;\n    this.reconnect_timer_id = void 0;\n    this.reconnect_interval = reconnect_interval;\n    this.max_reconnects = max_reconnects;\n    this.rest_options = rest_options;\n    this.current_reconnects = 0;\n    this.generate_request_id = generate_request_id || (() => typeof this.rpc_id === \"number\" ? ++this.rpc_id : Number(this.rpc_id) + 1);\n    if (!dataPack) this.dataPack = new DefaultDataPack();\n    else this.dataPack = dataPack;\n    if (this.autoconnect)\n      this._connect(this.address, {\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects,\n        ...this.rest_options\n      });\n  }\n  /**\n  * Connects to a defined server if not connected already.\n  * @method\n  * @return {Undefined}\n  */\n  connect() {\n    if (this.socket) return;\n    this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Calls a registered RPC method on server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object|Array} params - optional method parameters\n  * @param {Number} timeout - RPC reply timeout value\n  * @param {Object} ws_opts - options passed to ws\n  * @return {Promise}\n  */\n  call(method, params, timeout, ws_opts) {\n    if (!ws_opts && \"object\" === typeof timeout) {\n      ws_opts = timeout;\n      timeout = null;\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const rpc_id = this.generate_request_id(method, params);\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params: params || void 0,\n        id: rpc_id\n      };\n      this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n        if (error) return reject(error);\n        this.queue[rpc_id] = { promise: [resolve, reject] };\n        if (timeout) {\n          this.queue[rpc_id].timeout = setTimeout(() => {\n            delete this.queue[rpc_id];\n            reject(new Error(\"reply timeout\"));\n          }, timeout);\n        }\n      });\n    });\n  }\n  /**\n  * Logins with the other side of the connection.\n  * @method\n  * @param {Object} params - Login credentials object\n  * @return {Promise}\n  */\n  async login(params) {\n    const resp = await this.call(\"rpc.login\", params);\n    if (!resp) throw new Error(\"authentication failed\");\n    return resp;\n  }\n  /**\n  * Fetches a list of client's methods registered on server.\n  * @method\n  * @return {Array}\n  */\n  async listMethods() {\n    return await this.call(\"__listMethods\");\n  }\n  /**\n  * Sends a JSON-RPC 2.0 notification to server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object} params - optional method parameters\n  * @return {Promise}\n  */\n  notify(method, params) {\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params\n      };\n      this.socket.send(this.dataPack.encode(message), (error) => {\n        if (error) return reject(error);\n        resolve();\n      });\n    });\n  }\n  /**\n  * Subscribes for a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async subscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.on\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\n        \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n      );\n    return result;\n  }\n  /**\n  * Unsubscribes from a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async unsubscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.off\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\"Failed unsubscribing from an event with: \" + result);\n    return result;\n  }\n  /**\n  * Closes a WebSocket connection gracefully.\n  * @method\n  * @param {Number} code - socket close code\n  * @param {String} data - optional data to be sent before closing\n  * @return {Undefined}\n  */\n  close(code, data) {\n    if (this.socket) this.socket.close(code || 1e3, data);\n  }\n  /**\n  * Enable / disable automatic reconnection.\n  * @method\n  * @param {Boolean} reconnect - enable / disable reconnection\n  * @return {Undefined}\n  */\n  setAutoReconnect(reconnect) {\n    this.reconnect = reconnect;\n  }\n  /**\n  * Set the interval between reconnection attempts.\n  * @method\n  * @param {Number} interval - reconnection interval in milliseconds\n  * @return {Undefined}\n  */\n  setReconnectInterval(interval) {\n    this.reconnect_interval = interval;\n  }\n  /**\n  * Set the maximum number of reconnection attempts.\n  * @method\n  * @param {Number} max_reconnects - maximum reconnection attempts\n  * @return {Undefined}\n  */\n  setMaxReconnects(max_reconnects) {\n    this.max_reconnects = max_reconnects;\n  }\n  /**\n  * Get the current number of reconnection attempts made.\n  * @method\n  * @return {Number} current reconnection attempts\n  */\n  getCurrentReconnects() {\n    return this.current_reconnects;\n  }\n  /**\n  * Get the maximum number of reconnection attempts.\n  * @method\n  * @return {Number} maximum reconnection attempts\n  */\n  getMaxReconnects() {\n    return this.max_reconnects;\n  }\n  /**\n  * Check if the client is currently attempting to reconnect.\n  * @method\n  * @return {Boolean} true if reconnection is in progress\n  */\n  isReconnecting() {\n    return this.reconnect_timer_id !== void 0;\n  }\n  /**\n  * Check if the client will attempt to reconnect on the next close event.\n  * @method\n  * @return {Boolean} true if reconnection will be attempted\n  */\n  willReconnect() {\n    return this.reconnect && (this.max_reconnects === 0 || this.current_reconnects < this.max_reconnects);\n  }\n  /**\n  * Connection/Message handler.\n  * @method\n  * @private\n  * @param {String} address - WebSocket API address\n  * @param {Object} options - ws options object\n  * @return {Undefined}\n  */\n  _connect(address, options) {\n    clearTimeout(this.reconnect_timer_id);\n    this.socket = this.webSocketFactory(address, options);\n    this.socket.addEventListener(\"open\", () => {\n      this.ready = true;\n      this.emit(\"open\");\n      this.current_reconnects = 0;\n    });\n    this.socket.addEventListener(\"message\", ({ data: message }) => {\n      if (message instanceof ArrayBuffer)\n        message = Buffer.from(message).toString();\n      try {\n        message = this.dataPack.decode(message);\n      } catch (error) {\n        return;\n      }\n      if (message.notification && this.listeners(message.notification).length) {\n        if (!Object.keys(message.params).length)\n          return this.emit(message.notification);\n        const args = [message.notification];\n        if (message.params.constructor === Object) args.push(message.params);\n        else\n          for (let i = 0; i < message.params.length; i++)\n            args.push(message.params[i]);\n        return Promise.resolve().then(() => {\n          this.emit.apply(this, args);\n        });\n      }\n      if (!this.queue[message.id]) {\n        if (message.method) {\n          return Promise.resolve().then(() => {\n            this.emit(message.method, message?.params);\n          });\n        }\n        return;\n      }\n      if (\"error\" in message === \"result\" in message)\n        this.queue[message.id].promise[1](\n          new Error(\n            'Server response malformed. Response must include either \"result\" or \"error\", but not both.'\n          )\n        );\n      if (this.queue[message.id].timeout)\n        clearTimeout(this.queue[message.id].timeout);\n      if (message.error) this.queue[message.id].promise[1](message.error);\n      else this.queue[message.id].promise[0](message.result);\n      delete this.queue[message.id];\n    });\n    this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n    this.socket.addEventListener(\"close\", ({ code, reason }) => {\n      if (this.ready)\n        setTimeout(() => this.emit(\"close\", code, reason), 0);\n      this.ready = false;\n      this.socket = void 0;\n      if (code === 1e3) return;\n      this.current_reconnects++;\n      if (this.reconnect && (this.max_reconnects > this.current_reconnects || this.max_reconnects === 0))\n        this.reconnect_timer_id = setTimeout(\n          () => this._connect(address, options),\n          this.reconnect_interval\n        );\n      else if (this.reconnect && this.max_reconnects > 0 && this.current_reconnects >= this.max_reconnects) {\n        setTimeout(() => this.emit(\"max_reconnects_reached\", code, reason), 1);\n      }\n    });\n  }\n};\n\n// src/index.browser.ts\nvar Client = class extends CommonClient {\n  constructor(address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5\n  } = {}, generate_request_id) {\n    super(\n      WebSocket,\n      address,\n      {\n        autoconnect,\n        reconnect,\n        reconnect_interval,\n        max_reconnects\n      },\n      generate_request_id\n    );\n  }\n};\n\nexport { Client, CommonClient, DefaultDataPack, WebSocket };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils';\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bitLen, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes, inRange, isBytes, memoized, numberToHexUnpadded, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, mulEndoUnsafe, negateCt, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field, FpInvertBatch, getMinHashLength, mapHashToField, nLength, validateField, } from \"./modular.js\";\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num, den) => (num + (num >= 0 ? den : -den) / _2n) / den;\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k, basis, n) {\n    // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n    // Since part can be negative, we need to do this on point.\n    // TODO: verifyScalar function which consumes lambda\n    const [[a1, b1], [a2, b2]] = basis;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    // |k1|/|k2| is < sqrt(N), but can be negative.\n    // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n    let k1 = k - c1 * a1 - c2 * a2;\n    let k2 = -c1 * b1 - c2 * b2;\n    const k1neg = k1 < _0n;\n    const k2neg = k2 < _0n;\n    if (k1neg)\n        k1 = -k1;\n    if (k2neg)\n        k2 = -k2;\n    // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n    // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n    const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n    if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n        throw new Error('splitScalar (endomorphism): failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction validateSigFormat(format) {\n    if (!['compact', 'recovered', 'der'].includes(format))\n        throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n    return format;\n}\nfunction validateSigOpts(opts, def) {\n    const optsn = {};\n    for (let optName of Object.keys(def)) {\n        // @ts-ignore\n        optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n    }\n    abool(optsn.lowS, 'lowS');\n    abool(optsn.prehash, 'prehash');\n    if (optsn.format !== undefined)\n        validateSigFormat(optsn.format);\n    return optsn;\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = ensureBytes('signature', hex);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function _normFnElement(Fn, key) {\n    const { BYTES: expected } = Fn;\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else {\n        let bytes = ensureBytes('private key', key);\n        try {\n            num = Fn.fromBytes(bytes);\n        }\n        catch (error) {\n            throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n        }\n    }\n    if (!Fn.isValidNot0(num))\n        throw new Error('invalid private key: out of range [1..N-1]');\n    return num;\n}\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * @example\n```js\nconst opts = {\n  p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n  n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n  h: BigInt(1),\n  a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n  b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n  Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n  Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\nconst p256_Point = weierstrass(opts);\n```\n */\nexport function weierstrassN(params, extraOpts = {}) {\n    const validated = _createCurveFields('weierstrass', params, extraOpts);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(extraOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n        wrapPrivateKey: 'boolean',\n    });\n    const { endo } = extraOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n        }\n    }\n    const lengths = getWLengths(Fp, Fn);\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool(isCompressed, 'isCompressed');\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes, undefined, 'Point');\n        const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === comp && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const isYOdd = Fp.isOdd(y); // (y & _1n) === _1n;\n            const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n            if (isHeadOdd !== isYOdd)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === uncomp && head === 0x04) {\n            // TODO: more checks\n            const L = Fp.BYTES;\n            const x = Fp.fromBytes(tail.subarray(0, L));\n            const y = Fp.fromBytes(tail.subarray(L, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`);\n        }\n    }\n    const encodePoint = extraOpts.toBytes || pointToBytes;\n    const decodePoint = extraOpts.fromBytes || pointFromBytes;\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x³ + a * x + b\n    }\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    function splitEndoScalarN(k) {\n        if (!endo || !endo.basises)\n            throw new Error('no endo');\n        return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(Z, Fp.ONE))\n            return { x: X, y: Y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(Z);\n        const x = Fp.mul(X, iz);\n        const y = Fp.mul(Y, iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(X, Y, Z) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y, true);\n            this.Z = acoord('z', Z);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        static fromBytes(bytes) {\n            const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n            P.assertValidity();\n            return P;\n        }\n        static fromHex(hex) {\n            return Point.fromBytes(ensureBytes('pointHex', hex));\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.X, Fp.neg(this.Y), this.Z);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = extraOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return normalizeZ(Point, [point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed secret key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = extraOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO;\n            if (sc === _1n)\n                return p; // fast-path\n            if (wnaf.hasCache(this))\n                return this.multiply(sc);\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.unsafe(p, sc);\n            }\n        }\n        multiplyAndAddUnsafe(Q, a, b) {\n            const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n            return sum.is0() ? undefined : sum;\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = extraOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.unsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = extraOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        isSmallOrder() {\n            // can we use this.clearCofactor()?\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        toBytes(isCompressed = true) {\n            abool(isCompressed, 'isCompressed');\n            this.assertValidity();\n            return encodePoint(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get px() {\n            return this.X;\n        }\n        get py() {\n            return this.X;\n        }\n        get pz() {\n            return this.Z;\n        }\n        toRawBytes(isCompressed = true) {\n            return this.toBytes(isCompressed);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(_normFnElement(Fn, privateKey));\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const bits = Fn.BITS;\n    const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nfunction getWLengths(Fp, Fn) {\n    return {\n        secretKey: Fn.BYTES,\n        publicKey: 1 + Fp.BYTES,\n        publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n        publicKeyHasPrefix: true,\n        signature: 2 * Fn.BYTES,\n    };\n}\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(Point, ecdhOpts = {}) {\n    const { Fn } = Point;\n    const randomBytes_ = ecdhOpts.randomBytes || randomBytesWeb;\n    const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n    function isValidSecretKey(secretKey) {\n        try {\n            return !!_normFnElement(Fn, secretKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    function isValidPublicKey(publicKey, isCompressed) {\n        const { publicKey: comp, publicKeyUncompressed } = lengths;\n        try {\n            const l = publicKey.length;\n            if (isCompressed === true && l !== comp)\n                return false;\n            if (isCompressed === false && l !== publicKeyUncompressed)\n                return false;\n            return !!Point.fromBytes(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Produces cryptographically secure secret key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    function randomSecretKey(seed = randomBytes_(lengths.seed)) {\n        return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n    }\n    /**\n     * Computes public key for a secret key. Checks for validity of the secret key.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(secretKey, isCompressed = true) {\n        return Point.BASE.multiply(_normFnElement(Fn, secretKey)).toBytes(isCompressed);\n    }\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        if (typeof item === 'bigint')\n            return false;\n        if (item instanceof Point)\n            return true;\n        const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n        if (Fn.allowedLengths || secretKey === publicKey)\n            return undefined;\n        const l = ensureBytes('key', item).length;\n        return l === publicKey || l === publicKeyUncompressed;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from secret key A and public key B.\n     * Checks: 1) secret key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(secretKeyA, publicKeyB, isCompressed = true) {\n        if (isProbPub(secretKeyA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicKeyB) === false)\n            throw new Error('second arg must be public key');\n        const s = _normFnElement(Fn, secretKeyA);\n        const b = Point.fromHex(publicKeyB); // checks for being on-curve\n        return b.multiply(s).toBytes(isCompressed);\n    }\n    const utils = {\n        isValidSecretKey,\n        isValidPublicKey,\n        randomSecretKey,\n        // TODO: remove\n        isValidPrivateKey: isValidSecretKey,\n        randomPrivateKey: randomSecretKey,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n * We need `hash` for 2 features:\n * 1. Message prehash-ing. NOT used if `sign` / `verify` are called with `prehash: false`\n * 2. k generation in `sign`, using HMAC-drbg(hash)\n *\n * ECDSAOpts are only rarely needed.\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(Point, hash, ecdsaOpts = {}) {\n    ahash(hash);\n    _validateObject(ecdsaOpts, {}, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    const randomBytes = ecdsaOpts.randomBytes || randomBytesWeb;\n    const hmac = ecdsaOpts.hmac ||\n        ((key, ...msgs) => nobleHmac(hash, key, concatBytes(...msgs)));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n    const defaultSigOpts = {\n        prehash: false,\n        lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : false,\n        format: undefined, //'compact' as ECDSASigFormat,\n        extraEntropy: false,\n    };\n    const defaultSigOpts_format = 'compact';\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function validateRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n        return num;\n    }\n    function validateSigLength(bytes, format) {\n        validateSigFormat(format);\n        const size = lengths.signature;\n        const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n        return abytes(bytes, sizer, `${format} signature`);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = validateRS('r', r); // r in [1..N-1];\n            this.s = validateRS('s', s); // s in [1..N-1];\n            if (recovery != null)\n                this.recovery = recovery;\n            Object.freeze(this);\n        }\n        static fromBytes(bytes, format = defaultSigOpts_format) {\n            validateSigLength(bytes, format);\n            let recid;\n            if (format === 'der') {\n                const { r, s } = DER.toSig(abytes(bytes));\n                return new Signature(r, s);\n            }\n            if (format === 'recovered') {\n                recid = bytes[0];\n                format = 'compact';\n                bytes = bytes.subarray(1);\n            }\n            const L = Fn.BYTES;\n            const r = bytes.subarray(0, L);\n            const s = bytes.subarray(L, L * 2);\n            return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n        }\n        static fromHex(hex, format) {\n            return this.fromBytes(hexToBytes(hex), format);\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(messageHash) {\n            const FIELD_ORDER = Fp.ORDER;\n            const { r, s, recovery: rec } = this;\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            // ECDSA recovery is hard for cofactor > 1 curves.\n            // In sign, `r = q.x mod n`, and here we recover q.x from r.\n            // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n            // However, for cofactor>1, r+n may not get q.x:\n            // r+n*i would need to be done instead where i is unknown.\n            // To easily get i, we either need to:\n            // a. increase amount of valid recid values (4, 5...); OR\n            // b. prohibit non-prime-order signatures (recid > 1).\n            const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n            if (hasCofactor && rec > 1)\n                throw new Error('recovery id is ambiguous for h>1 curve');\n            const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('recovery id 2 or 3 invalid');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromBytes(concatBytes(pprefix((rec & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(ensureBytes('msgHash', messageHash)); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        toBytes(format = defaultSigOpts_format) {\n            validateSigFormat(format);\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            const r = Fn.toBytes(this.r);\n            const s = Fn.toBytes(this.s);\n            if (format === 'recovered') {\n                if (this.recovery == null)\n                    throw new Error('recovery bit must be present');\n                return concatBytes(Uint8Array.of(this.recovery), r, s);\n            }\n            return concatBytes(r, s);\n        }\n        toHex(format) {\n            return bytesToHex(this.toBytes(format));\n        }\n        // TODO: remove\n        assertValidity() { }\n        static fromCompact(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'compact');\n        }\n        static fromDER(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'der');\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n        }\n        toDERRawBytes() {\n            return this.toBytes('der');\n        }\n        toDERHex() {\n            return bytesToHex(this.toBytes('der'));\n        }\n        toCompactRawBytes() {\n            return this.toBytes('compact');\n        }\n        toCompactHex() {\n            return bytesToHex(this.toBytes('compact'));\n        }\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function bits2int_def(bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function bits2int_modN_def(bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // Pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    function validateMsgAndHash(message, prehash) {\n        abytes(message, undefined, 'message');\n        return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n    }\n    /**\n     * Steps A, D of RFC6979 3.2.\n     * Creates RFC6979 seed; converts msg/privKey to numbers.\n     * Used only in sign, not in verify.\n     *\n     * Warning: we cannot assume here that message has same amount of bytes as curve order,\n     * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n     */\n    function prepSig(message, privateKey, opts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(message);\n        const d = _normFnElement(Fn, privateKey); // validate secret key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (extraEntropy != null && extraEntropy !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            // gen random bytes OR pass as-is\n            const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // To transform k => Signature:\n        // q = k⋅G\n        // r = q.x mod n\n        // s = k^-1(m + rd) mod n\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // mod n, not mod p\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = k⋅G\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = Fn.neg(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    /**\n     * Signs message hash with a secret key.\n     *\n     * ```\n     * sign(m, d) where\n     *   k = rfc6979_hmac_drbg(m, d)\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr) / k mod n\n     * ```\n     */\n    function sign(message, secretKey, opts = {}) {\n        message = ensureBytes('message', message);\n        const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(hash.outputLen, Fn.BYTES, hmac);\n        const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n        return sig;\n    }\n    function tryParsingSig(sg) {\n        // Try to deduce format\n        let sig = undefined;\n        const isHex = typeof sg === 'string' || isBytes(sg);\n        const isObj = !isHex &&\n            sg !== null &&\n            typeof sg === 'object' &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        if (isObj) {\n            sig = new Signature(sg.r, sg.s);\n        }\n        else if (isHex) {\n            try {\n                sig = Signature.fromBytes(ensureBytes('sig', sg), 'der');\n            }\n            catch (derError) {\n                if (!(derError instanceof DER.Err))\n                    throw derError;\n            }\n            if (!sig) {\n                try {\n                    sig = Signature.fromBytes(ensureBytes('sig', sg), 'compact');\n                }\n                catch (error) {\n                    return false;\n                }\n            }\n        }\n        if (!sig)\n            return false;\n        return sig;\n    }\n    /**\n     * Verifies a signature against message and public key.\n     * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n     * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   u1 = hs^-1 mod n\n     *   u2 = rs^-1 mod n\n     *   R = u1⋅G + u2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, message, publicKey, opts = {}) {\n        const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n        publicKey = ensureBytes('publicKey', publicKey);\n        message = validateMsgAndHash(ensureBytes('message', message), prehash);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const sig = format === undefined\n            ? tryParsingSig(signature)\n            : Signature.fromBytes(ensureBytes('sig', signature), format);\n        if (sig === false)\n            return false;\n        try {\n            const P = Point.fromBytes(publicKey);\n            if (lowS && sig.hasHighS())\n                return false;\n            const { r, s } = sig;\n            const h = bits2int_modN(message); // mod n, not mod p\n            const is = Fn.inv(s); // s^-1 mod n\n            const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n            const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n            const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1⋅G + u2⋅P\n            if (R.is0())\n                return false;\n            const v = Fn.create(R.x); // v = r.x mod n\n            return v === r;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    function recoverPublicKey(signature, message, opts = {}) {\n        const { prehash } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash);\n        return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n    }\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        getSharedSecret,\n        utils,\n        lengths,\n        Point,\n        sign,\n        verify,\n        recoverPublicKey,\n        Signature,\n        hash,\n    });\n}\n/** @deprecated use `weierstrass` in newer releases */\nexport function weierstrassPoints(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    return _weierstrass_new_output_to_legacy(c, Point);\n}\nfunction _weierstrass_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        b: c.b,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    let allowedLengths = c.allowedPrivateKeyLengths\n        ? Array.from(new Set(c.allowedPrivateKeyLengths.map((l) => Math.ceil(l / 2))))\n        : undefined;\n    const Fn = Field(CURVE.n, {\n        BITS: c.nBitLength,\n        allowedLengths: allowedLengths,\n        modFromBytes: c.wrapPrivateKey,\n    });\n    const curveOpts = {\n        Fp,\n        Fn,\n        allowInfinityPoint: c.allowInfinityPoint,\n        endo: c.endo,\n        isTorsionFree: c.isTorsionFree,\n        clearCofactor: c.clearCofactor,\n        fromBytes: c.fromBytes,\n        toBytes: c.toBytes,\n    };\n    return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const ecdsaOpts = {\n        hmac: c.hmac,\n        randomBytes: c.randomBytes,\n        lowS: c.lowS,\n        bits2int: c.bits2int,\n        bits2int_modN: c.bits2int_modN,\n    };\n    return { CURVE, curveOpts, hash: c.hash, ecdsaOpts };\n}\nexport function _legacyHelperEquat(Fp, a, b) {\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n    }\n    return weierstrassEquation;\n}\nfunction _weierstrass_new_output_to_legacy(c, Point) {\n    const { Fp, Fn } = Point;\n    function isWithinCurveOrder(num) {\n        return inRange(num, _1n, Fn.ORDER);\n    }\n    const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n    return Object.assign({}, {\n        CURVE: c,\n        Point: Point,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        weierstrassEquation,\n        isWithinCurveOrder,\n    });\n}\nfunction _ecdsa_new_output_to_legacy(c, _ecdsa) {\n    const Point = _ecdsa.Point;\n    return Object.assign({}, _ecdsa, {\n        ProjectivePoint: Point,\n        CURVE: Object.assign({}, c, nLength(Point.Fn.ORDER, Point.Fn.BITS)),\n    });\n}\n// _ecdsa_legacy\nexport function weierstrass(c) {\n    const { CURVE, curveOpts, hash, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    const signs = ecdsa(Point, hash, ecdsaOpts);\n    return _ecdsa_new_output_to_legacy(c, signs);\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher, isogenyMap, } from \"./abstract/hash-to-curve.js\";\nimport { Field, mapHashToField, mod, pow2 } from \"./abstract/modular.js\";\nimport { _normFnElement, mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\nimport { bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, utf8ToBytes, } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Point.BASE.multiply(Point.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst secp256k1_ENDO = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    basises: [\n        [BigInt('0x3086d221a7d46bcde86c90e49284eb15'), -BigInt('0xe4437ed6010e88286f547fa90abfe4c3')],\n        [BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'), BigInt('0x3086d221a7d46bcde86c90e49284eb15')],\n    ],\n};\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, { sqrt: sqrtMod });\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = secp256k1.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = secp256k1.sign(msg, secretKey);\n * const isValid = secp256k1.verify(sig, msg, publicKey) === true;\n * ```\n */\nexport const secp256k1 = createCurve({ ...secp256k1_CURVE, Fp: Fpk1, lowS: true, endo: secp256k1_ENDO }, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(utf8ToBytes(tag));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst Pointk1 = /* @__PURE__ */ (() => secp256k1.Point)();\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    const { Fn, BASE } = Pointk1;\n    const d_ = _normFnElement(Fn, priv);\n    const p = BASE.multiply(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : Fn.neg(d_);\n    return { scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    const Fp = Fpk1;\n    if (!Fp.isValidNot0(x))\n        throw new Error('invalid x: Fail if x ≥ p');\n    const xx = Fp.create(x * x);\n    const c = Fp.create(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = Fp.sqrt(c); // Let y = c^(p+1)/4 mod p. Same as sqrt().\n    // Return the unique point P such that x(P) = x and\n    // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    if (!hasEven(y))\n        y = Fp.neg(y);\n    const p = Pointk1.fromAffine({ x, y });\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return Pointk1.Fn.create(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(secretKey) {\n    return schnorrGetExtPubKey(secretKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, secretKey, auxRand = randomBytes(32)) {\n    const { Fn } = Pointk1;\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(secretKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = Fn.toBytes(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    // Let k' = int(rand) mod n. Fail if k' = 0. Let R = k'⋅G\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(rand);\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(Fn.toBytes(Fn.create(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const { Fn, BASE } = Pointk1;\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1_CURVE.p))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1_CURVE.n))\n            return false;\n        // int(challenge(bytes(r)||bytes(P)||m))%n\n        const e = challenge(Fn.toBytes(r), pointToBytes(P), m);\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(Fn.neg(e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = schnorr.keygen();\n * // const publicKey = schnorr.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, secretKey);\n * const isValid = schnorr.verify(sig, msg, publicKey);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => {\n    const size = 32;\n    const seedLength = 48;\n    const randomSecretKey = (seed = randomBytes(seedLength)) => {\n        return mapHashToField(seed, secp256k1_CURVE.n);\n    };\n    // TODO: remove\n    secp256k1.utils.randomSecretKey;\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: schnorrGetPublicKey(secretKey) };\n    }\n    return {\n        keygen,\n        getPublicKey: schnorrGetPublicKey,\n        sign: schnorrSign,\n        verify: schnorrVerify,\n        Point: Pointk1,\n        utils: {\n            randomSecretKey: randomSecretKey,\n            randomPrivateKey: randomSecretKey,\n            taggedHash,\n            // TODO: remove\n            lift_x,\n            pointToBytes,\n            numberToBytesBE,\n            bytesToNumberBE,\n            mod,\n        },\n        lengths: {\n            secretKey: size,\n            publicKey: size,\n            publicKeyHasPrefix: false,\n            signature: size * 2,\n            seed: seedLength,\n        },\n    };\n})();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(secp256k1.Point, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => secp256k1_hasher.hashToCurve)();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => secp256k1_hasher.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { weierstrass } from \"./abstract/weierstrass.js\";\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return { hash };\n}\n/** @deprecated use new `weierstrass()` and `ecdsa()` methods */\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, hash: hash });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { getU64Codec, getU64Encoder } from '@solana/codecs-numbers';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport { CommonClient, WebSocket } from 'rpc-websockets';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs\n  }) {\n    const maybeLogsOutput = logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '';\n    const guideText = '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + maybeLogsOutput + guideText;\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + maybeLogsOutput + guideText;\n        break;\n      default:\n        {\n          message = `Unknown action '${(a => a)(action)}'`;\n        }\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.transactionLogs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs) ? this.transactionLogs : undefined\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs() {\n    const cachedLogs = this.transactionLogs;\n    if (cachedLogs != null && typeof cachedLogs === 'object' && 'then' in cachedLogs) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.transactionLogs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nfunction u64(property) {\n  const layout = blob(8 /* bytes */, property);\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  const bigIntLayout = layout;\n  const codec = getU64Codec();\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return codec.decode(src);\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = codec.encode(bigInt);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar fastStableStringify$1;\nvar hasRequiredFastStableStringify;\n\nfunction requireFastStableStringify () {\n\tif (hasRequiredFastStableStringify) return fastStableStringify$1;\n\thasRequiredFastStableStringify = 1;\n\tvar objToString = Object.prototype.toString;\n\tvar objKeys = Object.keys || function(obj) {\n\t\t\tvar keys = [];\n\t\t\tfor (var name in obj) {\n\t\t\t\tkeys.push(name);\n\t\t\t}\n\t\t\treturn keys;\n\t\t};\n\n\tfunction stringify(val, isArrayProp) {\n\t\tvar i, max, str, keys, key, propVal, toStr;\n\t\tif (val === true) {\n\t\t\treturn \"true\";\n\t\t}\n\t\tif (val === false) {\n\t\t\treturn \"false\";\n\t\t}\n\t\tswitch (typeof val) {\n\t\t\tcase \"object\":\n\t\t\t\tif (val === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t\t} else {\n\t\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\t\tstr = '[';\n\t\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + ']';\n\t\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t\t// only object is left\n\t\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\t\tmax = keys.length;\n\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase \"function\":\n\t\t\tcase \"undefined\":\n\t\t\t\treturn isArrayProp ? null : undefined;\n\t\t\tcase \"string\":\n\t\t\t\treturn JSON.stringify(val);\n\t\t\tdefault:\n\t\t\t\treturn isFinite(val) ? val : null;\n\t\t}\n\t}\n\n\tfastStableStringify$1 = function(val) {\n\t\tvar returnVal = stringify(val, false);\n\t\tif (returnVal !== undefined) {\n\t\t\treturn ''+ returnVal;\n\t\t}\n\t};\n\treturn fastStableStringify$1;\n}\n\nvar fastStableStringifyExports = /*@__PURE__*/ requireFastStableStringify();\nvar fastStableStringify = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringifyExports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends CommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = WebSocket(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(filters) {\n  return filters.map(filter => 'memcmp' in filter ? {\n    ...filter,\n    memcmp: {\n      ...filter.memcmp,\n      encoding: filter.memcmp.encoding ?? 'base58'\n    }\n  } : filter);\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst ParsedInstructionStruct = type({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown()\n});\nconst PartiallyDecodedInstructionStruct = type({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string()\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  }))),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(union([ParsedInstructionStruct, PartiallyDecodedInstructionStruct]))\n  }))))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"1.0.0-maintenance\"}`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', {\n      ...configWithoutEncoding,\n      ...(configWithoutEncoding.filters ? {\n        filters: applyDefaultMemcmpEncodingToFilters(configWithoutEncoding.filters)\n      } : null)\n    });\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const {\n      context,\n      value: {\n        blockhash\n      }\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature() {\n        throw new Error('The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' + 'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' + 'for a given message.');\n      },\n      toJSON() {\n        return {};\n      }\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator\n      }\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              console.error(`Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``, {\n                args,\n                error: e\n              });\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(publicKey, callback, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64', config);\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(programId, callback, commitmentOrConfig, maybeFilters) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, config ? config : maybeFilters ? {\n      filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), getU64Encoder().encode(params.recentSlot)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\n/**\n * 4KB JS implementation of ed25519 EdDSA signatures.\n * Compliant with RFC8032, FIPS 186-5 & ZIP215.\n * @module\n * @example\n * ```js\nimport * as ed from '@noble/ed25519';\n(async () => {\n  const privKey = ed.utils.randomPrivateKey();\n  const message = Uint8Array.from([0xab, 0xbc, 0xcd, 0xde]);\n  const pubKey = await ed.getPublicKeyAsync(privKey); // Sync methods are also present\n  const signature = await ed.signAsync(message, privKey);\n  const isValid = await ed.verifyAsync(signature, message, pubKey);\n})();\n```\n */\n/**\n * Curve params. ed25519 is twisted edwards curve. Equation is −x² + y² = -a + dx²y².\n * * P = `2n**255n - 19n` // field over which calculations are done\n * * N = `2n**252n + 27742317777372353535851937790883648493n` // group order, amount of curve points\n * * h = 8 // cofactor\n * * a = `Fp.create(BigInt(-1))` // equation param\n * * d = -121665/121666 a.k.a. `Fp.neg(121665 * Fp.inv(121666))` // equation param\n * * Gx, Gy are coordinates of Generator / base point\n */\nconst ed25519_CURVE = {\n    p: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedn,\n    n: 0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3edn,\n    h: 8n,\n    a: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffecn,\n    d: 0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3n,\n    Gx: 0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51an,\n    Gy: 0x6666666666666666666666666666666666666666666666666666666666666658n,\n};\nconst { p: P, n: N, Gx, Gy, a: _a, d: _d } = ed25519_CURVE;\nconst h = 8n; // cofactor\nconst L = 32; // field / group byte length\nconst L2 = 64;\n// Helpers and Precomputes sections are reused between libraries\n// ## Helpers\n// ----------\n// error helper, messes-up stack trace\nconst err = (m = '') => {\n    throw new Error(m);\n};\nconst isBig = (n) => typeof n === 'bigint'; // is big integer\nconst isStr = (s) => typeof s === 'string'; // is string\nconst isBytes = (a) => a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n/** assert is Uint8Array (of specific length) */\nconst abytes = (a, l) => !isBytes(a) || (typeof l === 'number' && l > 0 && a.length !== l)\n    ? err('Uint8Array expected')\n    : a;\n/** create Uint8Array */\nconst u8n = (len) => new Uint8Array(len);\nconst u8fr = (buf) => Uint8Array.from(buf);\nconst padh = (n, pad) => n.toString(16).padStart(pad, '0');\nconst bytesToHex = (b) => Array.from(abytes(b))\n    .map((e) => padh(e, 2))\n    .join('');\nconst C = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 }; // ASCII characters\nconst _ch = (ch) => {\n    if (ch >= C._0 && ch <= C._9)\n        return ch - C._0; // '2' => 50-48\n    if (ch >= C.A && ch <= C.F)\n        return ch - (C.A - 10); // 'B' => 66-(65-10)\n    if (ch >= C.a && ch <= C.f)\n        return ch - (C.a - 10); // 'b' => 98-(97-10)\n    return;\n};\nconst hexToBytes = (hex) => {\n    const e = 'hex invalid';\n    if (!isStr(hex))\n        return err(e);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        return err(e);\n    const array = u8n(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        // treat each char as ASCII\n        const n1 = _ch(hex.charCodeAt(hi)); // parse first char, multiply it by 16\n        const n2 = _ch(hex.charCodeAt(hi + 1)); // parse second char\n        if (n1 === undefined || n2 === undefined)\n            return err(e);\n        array[ai] = n1 * 16 + n2; // example: 'A9' => 10*16 + 9\n    }\n    return array;\n};\n/** normalize hex or ui8a to ui8a */\nconst toU8 = (a, len) => abytes(isStr(a) ? hexToBytes(a) : u8fr(abytes(a)), len);\nconst cr = () => globalThis?.crypto; // WebCrypto is available in all modern environments\nconst subtle = () => cr()?.subtle ?? err('crypto.subtle must be defined');\n// prettier-ignore\nconst concatBytes = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + abytes(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\n/** WebCrypto OS-level CSPRNG (random number generator). Will throw when not available. */\nconst randomBytes = (len = L) => {\n    const c = cr();\n    return c.getRandomValues(u8n(len));\n};\nconst big = BigInt;\nconst arange = (n, min, max, msg = 'bad number: out of range') => isBig(n) && min <= n && n < max ? n : err(msg);\n/** modular division */\nconst M = (a, b = P) => {\n    const r = a % b;\n    return r >= 0n ? r : b + r;\n};\nconst modN = (a) => M(a, N);\n/** Modular inversion using eucledian GCD (non-CT). No negative exponent for now. */\n// prettier-ignore\nconst invert = (num, md) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md);\n    let a = M(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) {\n        const q = b / a, r = b % a;\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? M(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst callHash = (name) => {\n    // @ts-ignore\n    const fn = etc[name];\n    if (typeof fn !== 'function')\n        err('hashes.' + name + ' not set');\n    return fn;\n};\nconst apoint = (p) => (p instanceof Point ? p : err('Point expected'));\n// ## End of Helpers\n// -----------------\nconst B256 = 2n ** 256n;\n/** Point in XYZT extended coordinates. */\nclass Point {\n    static BASE;\n    static ZERO;\n    ex;\n    ey;\n    ez;\n    et;\n    constructor(ex, ey, ez, et) {\n        const max = B256;\n        this.ex = arange(ex, 0n, max);\n        this.ey = arange(ey, 0n, max);\n        this.ez = arange(ez, 1n, max);\n        this.et = arange(et, 0n, max);\n        Object.freeze(this);\n    }\n    static fromAffine(p) {\n        return new Point(p.x, p.y, 1n, M(p.x * p.y));\n    }\n    /** RFC8032 5.1.3: Uint8Array to Point. */\n    static fromBytes(hex, zip215 = false) {\n        const d = _d;\n        // Copy array to not mess it up.\n        const normed = u8fr(abytes(hex, L));\n        // adjust first LE byte = last BE byte\n        const lastByte = hex[31];\n        normed[31] = lastByte & ~0x80;\n        const y = bytesToNumLE(normed);\n        // zip215=true:           0 <= y < 2^256\n        // zip215=false, RFC8032: 0 <= y < 2^255-19\n        const max = zip215 ? B256 : P;\n        arange(y, 0n, max);\n        const y2 = M(y * y); // y²\n        const u = M(y2 - 1n); // u=y²-1\n        const v = M(d * y2 + 1n); // v=dy²+1\n        let { isValid, value: x } = uvRatio(u, v); // (uv³)(uv⁷)^(p-5)/8; square root\n        if (!isValid)\n            err('bad point: y not sqrt'); // not square root: bad point\n        const isXOdd = (x & 1n) === 1n; // adjust sign of x coordinate\n        const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n        if (!zip215 && x === 0n && isLastByteOdd)\n            err('bad point: x==0, isLastByteOdd'); // x=0, x_0=1\n        if (isLastByteOdd !== isXOdd)\n            x = M(-x);\n        return new Point(x, y, 1n, M(x * y)); // Z=1, T=xy\n    }\n    /** Checks if the point is valid and on-curve. */\n    assertValidity() {\n        const a = _a;\n        const d = _d;\n        const p = this;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = M(X * X); // X²\n        const Y2 = M(Y * Y); // Y²\n        const Z2 = M(Z * Z); // Z²\n        const Z4 = M(Z2 * Z2); // Z⁴\n        const aX2 = M(X2 * a); // aX²\n        const left = M(Z2 * M(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = M(Z4 + M(d * M(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = M(X * Y);\n        const ZT = M(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return this;\n    }\n    /** Equality check: compare points P&Q. */\n    equals(other) {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2 } = apoint(other); // checks class equality\n        const X1Z2 = M(X1 * Z2);\n        const X2Z1 = M(X2 * Z1);\n        const Y1Z2 = M(Y1 * Z2);\n        const Y2Z1 = M(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() {\n        return this.equals(I);\n    }\n    /** Flip point over y coordinate. */\n    negate() {\n        return new Point(M(-this.ex), this.ey, this.ez, M(-this.et));\n    }\n    /** Point doubling. Complete formula. Cost: `4M + 4S + 1*a + 6add + 1*2`. */\n    double() {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const a = _a;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        const A = M(X1 * X1);\n        const B = M(Y1 * Y1);\n        const C = M(2n * M(Z1 * Z1));\n        const D = M(a * A);\n        const x1y1 = X1 + Y1;\n        const E = M(M(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /** Point addition. Complete formula. Cost: `8M + 1*k + 8add + 1*2`. */\n    add(other) {\n        const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2, et: T2 } = apoint(other); // doesn't check if other on-curve\n        const a = _a;\n        const d = _d;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n        const A = M(X1 * X2);\n        const B = M(Y1 * Y2);\n        const C = M(T1 * d * T2);\n        const D = M(Z1 * Z2);\n        const E = M((X1 + Y1) * (X2 + Y2) - A - B);\n        const F = M(D - C);\n        const G = M(D + C);\n        const H = M(B - a * A);\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /**\n     * Point-by-scalar multiplication. Scalar must be in range 1 <= n < CURVE.n.\n     * Uses {@link wNAF} for base point.\n     * Uses fake point to mitigate side-channel leakage.\n     * @param n scalar by which point is multiplied\n     * @param safe safe mode guards against timing attacks; unsafe mode is faster\n     */\n    multiply(n, safe = true) {\n        if (!safe && (n === 0n || this.is0()))\n            return I;\n        arange(n, 1n, N);\n        if (n === 1n)\n            return this;\n        if (this.equals(G))\n            return wNAF(n).p;\n        // init result point & fake point\n        let p = I;\n        let f = G;\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) {\n            // if bit is present, add to point\n            // if not present, add to fake, for timing safety\n            if (n & 1n)\n                p = p.add(d);\n            else if (safe)\n                f = f.add(d);\n        }\n        return p;\n    }\n    /** Convert point to 2d xy affine point. (X, Y, Z) ∋ (x=X/Z, y=Y/Z) */\n    toAffine() {\n        const { ex: x, ey: y, ez: z } = this;\n        // fast-paths for ZERO point OR Z=1\n        if (this.equals(I))\n            return { x: 0n, y: 1n };\n        const iz = invert(z, P);\n        // (Z * Z^-1) must be 1, otherwise bad math\n        if (M(z * iz) !== 1n)\n            err('invalid inverse');\n        // x = X*Z^-1; y = Y*Z^-1\n        return { x: M(x * iz), y: M(y * iz) };\n    }\n    toBytes() {\n        const { x, y } = this.assertValidity().toAffine();\n        const b = numTo32bLE(y);\n        // store sign in first LE byte\n        b[31] |= x & 1n ? 0x80 : 0;\n        return b;\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    } // encode to hex string\n    clearCofactor() {\n        return this.multiply(big(h), false);\n    }\n    isSmallOrder() {\n        return this.clearCofactor().is0();\n    }\n    isTorsionFree() {\n        // multiply by big number CURVE.n\n        let p = this.multiply(N / 2n, false).double(); // ensures the point is not \"bad\".\n        if (N % 2n)\n            p = p.add(this); // P^(N+1) // P*N == (P*(N/2))*2+P\n        return p.is0();\n    }\n    static fromHex(hex, zip215) {\n        return Point.fromBytes(toU8(hex), zip215);\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/** Generator / base point */\nconst G = new Point(Gx, Gy, 1n, M(Gx * Gy));\n/** Identity / zero point */\nconst I = new Point(0n, 1n, 1n, 0n);\n// Static aliases\nPoint.BASE = G;\nPoint.ZERO = I;\nconst numTo32bLE = (num) => hexToBytes(padh(arange(num, 0n, B256), L2)).reverse();\nconst bytesToNumLE = (b) => big('0x' + bytesToHex(u8fr(abytes(b)).reverse()));\nconst pow2 = (x, power) => {\n    // pow2(x, 4) == x^(2^4)\n    let r = x;\n    while (power-- > 0n) {\n        r *= r;\n        r %= P;\n    }\n    return r;\n};\n// prettier-ignore\nconst pow_2_252_3 = (x) => {\n    const x2 = (x * x) % P; // x^2,       bits 1\n    const b2 = (x2 * x) % P; // x^3,       bits 11\n    const b4 = (pow2(b2, 2n) * b2) % P; // x^(2^4-1), bits 1111\n    const b5 = (pow2(b4, 1n) * x) % P; // x^(2^5-1), bits 11111\n    const b10 = (pow2(b5, 5n) * b5) % P; // x^(2^10)\n    const b20 = (pow2(b10, 10n) * b10) % P; // x^(2^20)\n    const b40 = (pow2(b20, 20n) * b20) % P; // x^(2^40)\n    const b80 = (pow2(b40, 40n) * b40) % P; // x^(2^80)\n    const b160 = (pow2(b80, 80n) * b80) % P; // x^(2^160)\n    const b240 = (pow2(b160, 80n) * b80) % P; // x^(2^240)\n    const b250 = (pow2(b240, 10n) * b10) % P; // x^(2^250)\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P; // < To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n};\nconst RM1 = 0x2b8324804fc1df0b2b4d00993dfbd7a72f431806ad2fe478c4ee1b274a0ea0b0n; // √-1\n// for sqrt comp\n// prettier-ignore\nconst uvRatio = (u, v) => {\n    const v3 = M(v * v * v); // v³\n    const v7 = M(v3 * v3 * v); // v⁷\n    const pow = pow_2_252_3(u * v7).pow_p_5_8; // (uv⁷)^(p-5)/8\n    let x = M(u * v3 * pow); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = M(v * x * x); // vx²\n    const root1 = x; // First root candidate\n    const root2 = M(x * RM1); // Second root candidate; RM1 is √-1\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === M(-u); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === M(-u * RM1); // There is no valid root, vx² = -u√-1\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((M(x) & 1n) === 1n)\n        x = M(-x); // edIsNegative\n    return { isValid: useRoot1 || useRoot2, value: x };\n};\n// N == L, just weird naming\nconst modL_LE = (hash) => modN(bytesToNumLE(hash)); // modulo L; but little-endian\nconst sha512a = (...m) => etc.sha512Async(...m); // Async SHA512\nconst sha512s = (...m) => callHash('sha512Sync')(...m);\n// RFC8032 5.1.5\nconst hash2extK = (hashed) => {\n    // slice creates a copy, unlike subarray\n    const head = hashed.slice(0, L);\n    head[0] &= 248; // Clamp bits: 0b1111_1000\n    head[31] &= 127; // 0b0111_1111\n    head[31] |= 64; // 0b0100_0000\n    const prefix = hashed.slice(L, L2); // private key \"prefix\"\n    const scalar = modL_LE(head); // modular division over curve order\n    const point = G.multiply(scalar); // public key point\n    const pointBytes = point.toBytes(); // point serialized to Uint8Array\n    return { head, prefix, scalar, point, pointBytes };\n};\n// RFC8032 5.1.5; getPublicKey async, sync. Hash priv key and extract point.\nconst getExtendedPublicKeyAsync = (priv) => sha512a(toU8(priv, L)).then(hash2extK);\nconst getExtendedPublicKey = (priv) => hash2extK(sha512s(toU8(priv, L)));\n/** Creates 32-byte ed25519 public key from 32-byte private key. Async. */\nconst getPublicKeyAsync = (priv) => getExtendedPublicKeyAsync(priv).then((p) => p.pointBytes);\n/** Creates 32-byte ed25519 public key from 32-byte private key. To use, set `etc.sha512Sync` first. */\nconst getPublicKey = (priv) => getExtendedPublicKey(priv).pointBytes;\nconst hashFinishA = (res) => sha512a(res.hashable).then(res.finish);\nconst hashFinishS = (res) => res.finish(sha512s(res.hashable));\nconst _sign = (e, rBytes, msg) => {\n    // sign() shared code\n    const { pointBytes: P, scalar: s } = e;\n    const r = modL_LE(rBytes); // r was created outside, reduce it modulo L\n    const R = G.multiply(r).toBytes(); // R = [r]B\n    const hashable = concatBytes(R, P, msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        const S = modN(r + modL_LE(hashed) * s); // S = (r + k * s) mod L; 0 <= s < l\n        return abytes(concatBytes(R, numTo32bLE(S)), L2); // 64-byte sig: 32b R.x + 32b LE(S)\n    };\n    return { hashable, finish };\n};\n/**\n * Signs message (NOT message hash) using private key. Async.\n * Follows RFC8032 5.1.6.\n */\nconst signAsync = async (msg, privKey) => {\n    const m = toU8(msg);\n    const e = await getExtendedPublicKeyAsync(privKey);\n    const rBytes = await sha512a(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishA(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\n/**\n * Signs message (NOT message hash) using private key. To use, set `hashes.sha512` first.\n * Follows RFC8032 5.1.6.\n */\nconst sign = (msg, privKey) => {\n    const m = toU8(msg);\n    const e = getExtendedPublicKey(privKey);\n    const rBytes = sha512s(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishS(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst veriOpts = { zip215: true };\nconst _verify = (sig, msg, pub, opts = veriOpts) => {\n    sig = toU8(sig, L2); // Signature hex str/Bytes, must be 64 bytes\n    msg = toU8(msg); // Message hex str/Bytes\n    pub = toU8(pub, L);\n    const { zip215 } = opts; // switch between zip215 and rfc8032 verif\n    let A;\n    let R;\n    let s;\n    let SB;\n    let hashable = Uint8Array.of();\n    try {\n        A = Point.fromHex(pub, zip215); // public key A decoded\n        R = Point.fromHex(sig.slice(0, L), zip215); // 0 <= R < 2^256: ZIP215 R can be >= P\n        s = bytesToNumLE(sig.slice(L, L2)); // Decode second half as an integer S\n        SB = G.multiply(s, false); // in the range 0 <= s < L\n        hashable = concatBytes(R.toBytes(), A.toBytes(), msg); // dom2(F, C) || R || A || PH(M)\n    }\n    catch (error) { }\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        if (SB == null)\n            return false; // false if try-catch catched an error\n        if (!zip215 && A.isSmallOrder())\n            return false; // false for SBS: Strongly Binding Signature\n        const k = modL_LE(hashed); // decode in little-endian, modulo L\n        const RkA = R.add(A.multiply(k, false)); // [8]R + [8][k]A'\n        return RkA.add(SB.negate()).clearCofactor().is0(); // [8][S]B = [8]R + [8][k]A'\n    };\n    return { hashable, finish };\n};\n/** Verifies signature on message and public key. Async. Follows RFC8032 5.1.7. */\nconst verifyAsync = async (s, m, p, opts = veriOpts) => hashFinishA(_verify(s, m, p, opts));\n/** Verifies signature on message and public key. To use, set `hashes.sha512` first. Follows RFC8032 5.1.7. */\nconst verify = (s, m, p, opts = veriOpts) => hashFinishS(_verify(s, m, p, opts));\n/** Math, hex, byte helpers. Not in `utils` because utils share API with noble-curves. */\nconst etc = {\n    sha512Async: async (...messages) => {\n        const s = subtle();\n        const m = concatBytes(...messages);\n        return u8n(await s.digest('SHA-512', m.buffer));\n    },\n    sha512Sync: undefined,\n    bytesToHex: bytesToHex,\n    hexToBytes: hexToBytes,\n    concatBytes: concatBytes,\n    mod: M,\n    invert: invert,\n    randomBytes: randomBytes,\n};\n/** ed25519-specific key utilities. */\nconst utils = {\n    getExtendedPublicKeyAsync: getExtendedPublicKeyAsync,\n    getExtendedPublicKey: getExtendedPublicKey,\n    randomPrivateKey: () => randomBytes(L),\n    precompute: (w = 8, p = G) => {\n        p.multiply(3n);\n        w;\n        return p;\n    }, // no-op\n};\n// ## Precomputes\n// --------------\nconst W = 8; // W is window size\nconst scalarBits = 256;\nconst pwindows = Math.ceil(scalarBits / W) + 1; // 33 for W=8\nconst pwindowSize = 2 ** (W - 1); // 128 for W=8\nconst precompute = () => {\n    const points = [];\n    let p = G;\n    let b = p;\n    for (let w = 0; w < pwindows; w++) {\n        b = p;\n        points.push(b);\n        for (let i = 1; i < pwindowSize; i++) {\n            b = b.add(p);\n            points.push(b);\n        } // i=1, bc we skip 0\n        p = b.double();\n    }\n    return points;\n};\nlet Gpows = undefined; // precomputes for base point G\n// const-time negate\nconst ctneg = (cnd, p) => {\n    const n = p.negate();\n    return cnd ? n : p;\n};\n/**\n * Precomputes give 12x faster getPublicKey(), 10x sign(), 2x verify() by\n * caching multiples of G (base point). Cache is stored in 32MB of RAM.\n * Any time `G.multiply` is done, precomputes are used.\n * Not used for getSharedSecret, which instead multiplies random pubkey `P.multiply`.\n *\n * w-ary non-adjacent form (wNAF) precomputation method is 10% slower than windowed method,\n * but takes 2x less RAM. RAM reduction is possible by utilizing `.subtract`.\n *\n * !! Precomputes can be disabled by commenting-out call of the wNAF() inside Point#multiply().\n */\nconst wNAF = (n) => {\n    const comp = Gpows || (Gpows = precompute());\n    let p = I;\n    let f = G; // f must be G, or could become I in the end\n    const pow_2_w = 2 ** W; // 256 for W=8\n    const maxNum = pow_2_w; // 256 for W=8\n    const mask = big(pow_2_w - 1); // 255 for W=8 == mask 0b11111111\n    const shiftBy = big(W); // 8 for W=8\n    for (let w = 0; w < pwindows; w++) {\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > pwindowSize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off = w * pwindowSize;\n        const offF = off; // offsets, evaluate both\n        const offP = off + Math.abs(wbits) - 1;\n        const isEven = w % 2 !== 0; // conditions, evaluate both\n        const isNeg = wbits < 0;\n        if (wbits === 0) {\n            // off == I: can't add it. Adding random offF instead.\n            f = f.add(ctneg(isEven, comp[offF])); // bits are 0: add garbage to fake point\n        }\n        else {\n            p = p.add(ctneg(isNeg, comp[offP])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n};\n// !! Remove the export to easily use in REPL / browser console\nexport { ed25519_CURVE as CURVE, etc, Point as ExtendedPoint, getPublicKey, getPublicKeyAsync, Point, sign, signAsync, utils, verify, verifyAsync, };\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["uuid","generateRequest","ClientBrowser","callServer","options","this","reviver","replacer","generator","version","notificationIdNull","module","exports","prototype","request","method","params","id","callback","self","isBatch","Array","isArray","TypeError","undefined","hasCallback","err","message","JSON","stringify","response","_parseResponse","responseText","parse","length","isError","res","error","isNotError","filter","result","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","U32_MASK64","BigInt","_32n","fromBig","n","le","h","Number","l","split","lst","len","Ah","Uint32Array","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","inRange","a","min","max","ToDictionary","o","Object","Stream","tokens","slice","call","endOfStream","shift","prepend","token","unshift","pop","push","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","String","toLowerCase","Error","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","defineProperty","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","bytes","temp","decode","input","ArrayBuffer","Uint8Array","byteOffset","byteLength","input_stream","code_points","apply","indexOf","cp","fromCharCode","codePointsToString","encode","opt_string","string","u","charCodeAt","b","stringToCodePoints","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","from","isEncoding","actual","fromString","isView","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","jsonrpc","HpkeError","ValidationError","EncapError","DecapError","ExportError","SealError","OpenError","MessageLimitReachedError","DeriveKeyPairError","dntGlobalThis","baseObj","globalThis","extObj","Proxy","_target","prop","_receiver","deleteProperty","success","ownKeys","baseKeys","Reflect","extKeys","extKeysSet","Set","k","has","desc","getOwnPropertyDescriptor","NativeAlgorithm","_setup","_api","async","crypto","subtle","webcrypto","loadSubtleCrypto","NotAssigned","DhkemP256HkdfSha256","DhkemP384HkdfSha384","DhkemP521HkdfSha512","DhkemSecp256k1HkdfSha256","DhkemX25519HkdfSha256","DhkemX448HkdfSha512","HybridkemX25519Kyber768","MlKem512","MlKem768","MlKem1024","XWing","KdfId","HkdfSha256","HkdfSha384","HkdfSha512","AeadId","Aes128Gcm","Aes256Gcm","Chacha20Poly1305","ExportOnly","INPUT_LENGTH_LIMIT","privateKey","publicKey","w","base64UrlToBytes","v","byteString","atob","LABEL_EAE_PRK","LABEL_SHARED_SECRET","Dhkem","prim","kdf","_prim","_kdf","suiteId","init","serializePublicKey","key","deserializePublicKey","serializePrivateKey","deserializePrivateKey","importKey","format","isPublic","generateKeyPair","deriveKeyPair","ikm","encap","ke","ekm","enc","pkrm","recipientPublicKey","dh","kemContext","senderKey","sks","pks","derivePublicKey","pksm","concat3","sharedSecret","_generateSharedSecret","decap","pke","skr","recipientKey","pkr","senderPublicKey","labeledIkm","buildLabeledIkm","labeledInfo","buildLabeledInfo","secretSize","extractAndExpand","KEM_USAGES","Bignum","_num","reset","isZero","lessThan","LABEL_CANDIDATE","ORDER_P_256","ORDER_P_384","ORDER_P_521","PKCS8_ALG_ID_P_256","PKCS8_ALG_ID_P_384","PKCS8_ALG_ID_P_521","Ec","kem","hkdf","_hkdf","_alg","namedCurve","_nPk","_nSk","_nDh","_order","_bitmask","_pkcs8AlgId","exportKey","_importRawKey","jwk","_importJWK","generateKey","dkpPrk","labeledExtract","bn","counter","labeledExpand","sk","_deserializePkcs8Key","pk","deriveBits","public","crv","pkcs8Key","HPKE_VERSION","HkdfNative","hash","_suiteId","label","_checkInit","info","extract","salt","hashSize","algHash","sign","expand","prk","okm","p","prev","mid","tail","tmp","cur","baseKey","HkdfSha256Native","HkdfSha384Native","HkdfSha512Native","AEAD_USAGES","AesGcmContext","_rawKey","seal","iv","aad","_setupKey","alg","additionalData","encrypt","_key","open","decrypt","_importKey","createEncryptionContext","emitNotSupported","Promise","_resolve","reject","LABEL_SEC","ExporterContextImpl","api","exporterSecret","_data","_aad","exporterContext","RecipientExporterContextImpl","SenderExporterContextImpl","EncryptionContextImpl","baseNonce","seq","_aead","aead","_nK","keySize","_nN","nonceSize","_nT","tagSize","_ctx","computeNonce","seqBytes","xor","incrementSeq","MAX_SAFE_INTEGER","RecipientContextImpl","pt","SenderContextImpl","ct","LABEL_BASE_NONCE","LABEL_EXP","LABEL_INFO_HASH","LABEL_KEY","LABEL_PSK_ID_HASH","LABEL_SECRET","SUITE_ID_HEADER_HPKE","CipherSuiteNative","_kem","createSenderContext","_validateInputLength","mode","psk","_keyScheduleS","createRecipientContext","_keyScheduleR","ctx","_keySchedule","pskId","pskIdHash","infoHash","keyScheduleContext","exporterSecretInfo","keyInfo","baseNonceInfo","DhkemP256HkdfSha256Native","DhkemP384HkdfSha384Native","DhkemP521HkdfSha512Native","CipherSuite","ALG_NAME","PKCS8_ALG_ID_X25519","X25519","rawSk","rawSkBytes","kty","PKCS8_ALG_ID_X448","X448","getRandomValues","rnds8","rng","bind","msCrypto","byteToHex","test","rnds","random","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","charCode","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","root","f","nacl","util","validateBase64","decodeUTF8","unescape","encodeURIComponent","encodeUTF8","decodeURIComponent","escape","join","encodeBase64","decodeBase64","btoa","assert","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","move","dest","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","padding","groupSize","groupBase","modrn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","Chi","Maj","HashMD","blockLen","outputLen","padOffset","destroyed","view","update","take","dataView","process","roundClean","digestInto","setBigUint64","_u32_max","wh","wl","setUint32","oview","state","digest","destroy","_cloneInto","to","SHA256_IV","SHA512_IV","SHA256_K","SHA256_W","SHA256","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","K512","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha256","sha512","_0n","_1n","_abool2","title","_abytes2","needsLen","numberToHexUnpadded","hex","hexToNumber","reverse","padStart","numberToBytesLE","expectedLength","copyBytes","isPosBig","aInRange","bitLen","object","fields","optFields","checkField","fieldName","expectedType","isOpt","entries","forEach","notImplemented","memoized","WeakMap","args","computed","_2n","_3n","_4n","_5n","_7n","_8n","_9n","_16n","power","modulo","invert","assertIsSquare","Fp","eql","sqrt3mod4","p1div4","ORDER","sqrt5mod8","p5div8","n2","nv","ONE","tonelliShanks","P","Q","S","Z","_Fp","Field","FpLegendre","cc","Q1div2","is0","M","R","ZERO","t_tmp","exponent","isNegativeLE","FIELD_FIELDS","nums","passZero","inverted","multipliedAcc","reduce","invertedAcc","reduceRight","p1mod2","powered","yes","zero","no","nBitLength","_nBitLength","nByteLength","bitLenOrOpts","opts","_nbitLength","_sqrt","allowedLengths","modFromBytes","_opts","BITS","BYTES","sqrtP","freeze","MASK","create","isValid","isValidNot0","lhs","rhs","FpPow","sqrN","addN","subN","mulN","Fp_","tn","c1","c2","c3","c4","tv1","tv2","tv3","tv4","e1","e2","cmov","e3","sqrt9mod16","toBytes","fromBytes","skipValidation","padded","scalar","invertBatch","getFieldBytesLength","fieldOrder","getMinHashLength","negateCt","condition","item","negate","normalizeZ","points","invertedZs","fromAffine","toAffine","validateW","W","isSafeInteger","calcWOpts","scalarBits","maxNumber","windows","windowSize","shiftBy","calcOffsets","wOpts","wbits","nextN","offsetStart","isNegF","offsetF","pointPrecomputes","pointWindowSizes","getW","assert0","wNAF","Point","Fn","_unsafeLadder","elm","double","precomputeWindow","point","precomputes","wo","wNAFUnsafe","getPrecomputes","comp","cached","unsafe","createCache","delete","hasCache","pippenger","fieldN","scalars","validateMSMPoints","field","validateMSMScalars","plength","slength","buckets","sum","resI","sumI","createField","order","_createCurveFields","CURVE","curveOpts","FpFnLE","assign","PrimeEdwardsPoint","ep","_bytes","fromHex","_hex","clearCofactor","assertValidity","invertedZ","toHex","isTorsionFree","isSmallOrder","other","assertSame","subtract","multiply","multiplyUnsafe","precompute","isLazy","toRawBytes","eddsaOpts","Gx","Gy","uvRatio","randomBytes","adjustScalarBytes","domain","prehash","mapToCurve","_eddsa_legacy_opts_to_new","extraOpts","validated","cofactor","modP","y2","isEdValidXY","acoord","banZero","aextpoint","toAffineMemo","iz","X","Y","zz","assertValidMemo","T","X2","Y2","Z2","Z4","aX2","zip215","normed","lastByte","isXOdd","isLastByteOdd","wnaf","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","X3","Y3","T3","Z3","ex","ey","ez","et","msm","_setWindowSize","edwards","eddsa","ExtendedPoint","_eddsa_new_output_to_legacy","cHash","phflag","modN_LE","getExtendedPublicKey","secretKey","head","prefix","lengths","hashed","getPrivateScalar","pointBytes","getPublicKey","hashDomainToScalar","context","of","msgs","verifyOpts","_size","signature","seed","randomSecretKey","utils","isValidSecretKey","isValidPublicKey","toMontgomery","is25519","toMontgomerySecret","randomPrivateKey","keygen","verify","sig","SB","ed25519_CURVE_p","ed25519_CURVE","ED25519_SQRT_M1","v3","v7","_10n","_20n","_40n","_80n","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ed25519_pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W3","_RistrettoPoint","ap","hashToCurve","R1","R2","ristretto255_map","equalBytes","u1","u2","u1_2","u2_2","I","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","two","sha2","encodeValue","getPrototypeOf","encodeObjectContextEntry","cause","contextAndErrorOptions","errorOptions","contextRest","keys","decodingAdviceMessage","searchParamsString","encodeContextObject","getErrorMessage","__code","isFixedSize","codec","fixedSize","isLittleEndian","config","numberEncoderFactory","encoder","codecDescription","assertNumberIsBetweenForCodec","arrayBuffer","DataView","getSizeFromValue","getEncodedSize","numberDecoderFactory","decoder","assertByteArrayIsNotEmptyForCodec","expected","bytesLength","assertByteArrayHasEnoughBytesForCodec","bytesOffset","toArrayBuffer","getU64Encoder","getU64Codec","decoderFixedSize","encoderFixedSize","maxSize","decoderMaxSize","encoderMaxSize","getBigUint64","getU64Decoder","StructError","failure","failures","explanation","rest","path","isObject","isNonArrayObject","print","toFailure","struct","branch","refinement","toFailures","iterator","run","coerce","coercer","status","validator","ts","Map","refiner","Struct","props","schema","validate","is","tuples","tuple","done","shiftIterator","Element","instance","Class","literal","constant","description","optional","record","Key","Value","Structs","Never","union","coerced","unknown","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","IOTAS","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","finish","writeInto","bufferOut","xofInto","xof","keccak_256","gen","HMAC","iHash","pad","oHash","divNearest","den","validateSigFormat","validateSigOpts","def","optsn","optName","lowS","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","lengthBytes","_int","toSig","int","tlv","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","pprefix","hasEvenY","getWLengths","publicKeyUncompressed","publicKeyHasPrefix","ecdsa","ecdsaOpts","hmac","bits2int","bits2int_modN","CURVE_ORDER","fnBits","getSharedSecret","ecdhOpts","randomBytes_","fieldLen","minLen","reduced","isCompressed","isProbPub","isValidPrivateKey","normPrivateKeyToScalar","secretKeyA","publicKeyB","ecdh","defaultSigOpts","extraEntropy","defaultSigOpts_format","isBiggerThanHalfOrder","validateRS","Signature","recovery","recid","validateSigLength","L","addRecoveryBit","recoverPublicKey","messageHash","FIELD_ORDER","rec","radj","ir","hasHighS","fromCompact","fromDER","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","ORDER_MASK","int2octets","validateMsgAndHash","k2sig","some","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","hashLen","qByteLen","hmacFn","u8n","u8of","byte","reseed","sl","pred","createHmacDrbg","sg","isHex","isObj","derError","tryParsingSig","weierstrass","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","_weierstrass_legacy_opts_to_new","_ecdsa_legacy_opts_to_new","_ecdsa","ProjectivePoint","_ecdsa_new_output_to_legacy","beta","basises","assertCompressionIsSupported","encodePoint","_c","bx","decodePoint","uncomp","isValidXY","weierstrassEquation","sqrtError","x3","_4a3","_27b2","aprjpoint","splitEndoScalarN","basis","k1","k2","k1neg","k2neg","MAX_NUM","_splitEndoScalar","finishEndo","endoBeta","k1p","k2p","U1","U2","t0","t1","t2","t3","t4","t5","fake","k1f","k2f","sc","p1","p2","mulEndoUnsafe","multiplyAndAddUnsafe","px","py","pz","fromPrivateKey","weierstrassN","secp256k1_CURVE","secp256k1_ENDO","Fpk1","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","curveDef","defHash","createCurve","generateKeypair","privateScalar","isOnCurve","properties","serialize","SOLANA_SCHEMA","deserialize","decodeUnchecked","deserializeUnchecked","_PublicKey","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","unique","toBase58","zeroPad","toStringTag","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","address","nonce","seedsWithNonce","findProgramAddress","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","property","rustString","rsl","_decode","_encode","rslShim","chars","span","getAlloc","getItemAlloc","elementLayout","layout","decodeLength","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","guardedSplice","splice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","programIds","values","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","maskedPrefix","addressTableLookupsCount","VersionedMessage","deserializeMessageVersion","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_getMessageSignednessErrors","missing","invalid","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","transactionLogs","transactionError","cachedLogs","getLogs","resolve","getTransaction","then","tx","logMessages","catch","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NONCE_ACCOUNT_LENGTH","u64","bigIntLayout","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","createAccount","lamports","space","fromPubkey","newAccountPubkey","transfer","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","createNonceAccount","noncePubkey","initParams","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","newAuthorizedPubkey","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","getSlot","slot","MS_PER_SLOT","fetch","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetRecentPrioritizationFeesResult","epoch","effectiveSlot","amount","postBalance","commission","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","ParsedInstructionStruct","PartiallyDecodedInstructionStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","byIdentity","firstSlot","lastSlot","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","ConfirmationStatus","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","costUnits","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","LogsResult","previousBlockhash","parentSlot","rewards","numTransactions","numSlots","samplePeriodSecs","feeCalculator","lamportsPerSignature","Keypair","keypair","_keypair","generate","fromSecretKey","computedPublicKey","ii","fromSeed","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","publicKeyCreate","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","startsWith","ethAddressOffset","ethAddressInstructionIndex","pkey","msgHash","privKey","ecdsaSign","_Lockup","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","initialize","stakePubkey","maybeLockup","staker","withdrawer","delegate","authorize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorizeWithSeed","authorityBase","authoritySeed","authorityOwner","splitInstruction","splitStakePubkey","rentExemptReserve","splitWithSeed","merge","sourceStakePubKey","withdraw","deactivate","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteInit","UpdateValidatorIdentity","voteAuthorizeWithSeedArgs","Voter","VoteProgram","initializeAccount","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","website","details","iconUrl","keybaseUsername","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","tripletToBase64","isBytes","anumber","abytes","ahash","aexists","checkFinished","aoutput","u32","clean","arrays","createView","rotr","byteSwap","swap32IfBE","hasHexBuiltin","hexes","bytesToHex","asciis","_0","_9","asciiToBase16","ch","hexToBytes","hl","al","ai","n1","char","concatBytes","Hash","createHasher","hashCons","hashC","_a","_d","isStr","u8fr","padh","_ch","toU8","cr","arrs","big","arange","isBig","modN","md","apoint","B256","static","bytesToNumLE","safe","numTo32bLE","pow2","RM1","pow_2_252_3","modL_LE","sha512a","etc","sha512Async","sha512s","callHash","hash2extK","getExtendedPublicKeyAsync","priv","getPublicKeyAsync","hashFinishA","hashable","hashFinishS","_sign","signAsync","veriOpts","_verify","pub","verifyAsync","messages","sha512Sync","pwindows","Gpows","ctneg","cnd","pow_2_w","offF","offP","u8","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","makeDestinationObject","getSpan","replicate","rv","fromArray","nameWithProperty","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearInt64","Sequence","idx","elo","Structure","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","Blob","srcBuffer","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","__createBinding","__setModuleDefault","__decorate","decorators","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","serializeStruct","borshSerialize","structSchema","deserializeField","reader","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","copyProps","SafeBuffer","gf","Float64Array","randombytes","gf0","gf1","_121665","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","th","tl","Int32Array","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den2","den4","den6","unpackneg","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","seedLength","signatureLength","hashLength","setPRNG"],"sourceRoot":""}