# Taken from the default nginx config in our base image
# See "Customize configuration" on https://hub.docker.com/_/nginx
pid /tmp/nginx.pid;
worker_processes  auto;
events {
    worker_connections 1024;
}

# Send anything from info to errors to stdout for logging
error_log /dev/stdout info;

# Run in the foreground
daemon off;

http {
    # Taken from the default nginx config in our base image
    # See "Customize configuration" on https://hub.docker.com/_/nginx
    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    keepalive_timeout 65;
    gzip on;

    # Send access logs to stdout for logging
    access_log /dev/stdout main;

    # Custom server blocks to serve auth and export frames on separate ports.
    # Maintain recovery and auth separately for now for backwards-compatibility.

    # Prod

    # iframe
    server {
        listen 8080;
        root /usr/share/nginx/auth;

        # Health endpoint for k8s
        location = /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }
    }
    server {
        listen 8081;
        root /usr/share/nginx;
        location / {
            try_files /export/$uri /templated/export/$uri /templated/export/$uri/index.html =404;
        }
    }
    server {
        listen 8082;
        root /usr/share/nginx/recovery;
    }
    server {
        listen 8083;
        root /usr/share/nginx;
        location / {
            try_files /import/$uri /templated/import/$uri /templated/import/$uri/index.html =404;
        }
    }
    server {
        listen 8086;
        root /usr/share/nginx/export-and-sign;
    }

    # oauth
    server {
        listen 8084;
        root /usr/share/nginx/oauth-origin;
    }
    server {
        listen 8085;
        root /usr/share/nginx/oauth-redirect;
    }
}
